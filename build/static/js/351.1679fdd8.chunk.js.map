{"version":3,"file":"static/js/351.1679fdd8.chunk.js","mappings":"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","sources":["hooks/useVacations.js","components/ui/ErrorDisplay.js","components/ui/LoadingScreen.js","components/ui/PageHeader.js","components/vacations/VacationForm.js","components/vacations/VacationList.js","pages/Vacations.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { API_ENDPOINTS } from \"../config/api\";\nimport useApi from \"./useApi\";\n\n/**\n * Hook personnalisé pour gérer les congés\n * Version sans WebSocket pour éviter les problèmes de navigation\n */\nconst useVacations = () => {\n  const [vacations, setVacations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const api = useApi();\n  const isComponentMountedRef = useRef(true);\n  const pollingIntervalRef = useRef(null);\n  const POLLING_INTERVAL = 60000; // 60 secondes entre chaque vérification\n\n  // Marquer le composant comme monté/démonté\n  useEffect(() => {\n    isComponentMountedRef.current = true;\n\n    return () => {\n      isComponentMountedRef.current = false;\n\n      // Nettoyer l'intervalle de polling lors du démontage\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n        pollingIntervalRef.current = null;\n      }\n    };\n  }, []);\n\n  /**\n   * Fonction utilitaire pour réessayer une requête API\n   * @param {Function} apiCall - Fonction d'appel API à réessayer\n   * @param {number} maxRetries - Nombre maximum de tentatives\n   * @param {number} delay - Délai entre les tentatives (en ms)\n   * @returns {Promise} - Résultat de l'appel API\n   */\n  const retryApiCall = useCallback(\n    async (apiCall, maxRetries = 3, delay = 1000) => {\n      let lastError = null;\n      let retryCount = 0;\n\n      while (retryCount < maxRetries) {\n        try {\n          return await apiCall();\n        } catch (err) {\n          lastError = err;\n          retryCount++;\n\n          // Si c'est la dernière tentative, ne pas attendre\n          if (retryCount < maxRetries) {\n            // Utiliser un délai exponentiel\n            const retryDelay = delay * Math.pow(2, retryCount - 1);\n            console.log(\n              `Tentative ${retryCount}/${maxRetries} échouée, nouvelle tentative dans ${retryDelay}ms`\n            );\n            await new Promise((resolve) => setTimeout(resolve, retryDelay));\n          }\n        }\n      }\n\n      // Si toutes les tentatives ont échoué, lancer l'erreur\n      throw lastError;\n    },\n    []\n  );\n\n  // Fonction pour charger les congés\n  const fetchVacations = useCallback(\n    async (forceRefresh = false) => {\n      if (!isComponentMountedRef.current) return;\n\n      let retryCount = 0;\n      const maxRetries = 2;\n\n      // Vérifier si les données sont déjà en cache et récentes (moins de 5 minutes)\n      const cachedData = localStorage.getItem(\"cachedVacations\");\n      const cachedTimestamp = localStorage.getItem(\"cachedVacationsTimestamp\");\n\n      if (!forceRefresh && cachedData && cachedTimestamp) {\n        const now = new Date().getTime();\n        const cacheTime = parseInt(cachedTimestamp);\n        const fiveMinutes = 5 * 60 * 1000;\n\n        // Si le cache est récent (moins de 5 minutes), utiliser les données en cache\n        if (now - cacheTime < fiveMinutes) {\n          try {\n            const parsedData = JSON.parse(cachedData);\n            console.log(\"Utilisation des données en cache pour les congés\");\n            if (isComponentMountedRef.current) {\n              setVacations(parsedData);\n              setLoading(false);\n            }\n            return;\n          } catch (e) {\n            console.error(\"Erreur lors de la lecture du cache:\", e);\n            // Continuer avec le chargement normal si le cache est invalide\n          }\n        }\n      }\n\n      const loadVacations = async () => {\n        if (retryCount >= maxRetries || !isComponentMountedRef.current) {\n          if (isComponentMountedRef.current) {\n            setError(\n              \"Erreur lors du chargement des congés après plusieurs tentatives\"\n            );\n            setLoading(false);\n          }\n          return;\n        }\n\n        try {\n          console.log(\"Chargement des congés...\");\n          const token = localStorage.getItem(\"token\");\n\n          if (!token) {\n            console.error(\"Token d'authentification manquant\");\n            if (isComponentMountedRef.current) {\n              setError(\"Vous devez être connecté pour accéder à ces données\");\n              setLoading(false);\n            }\n            return;\n          }\n\n          const data = await api.get(API_ENDPOINTS.VACATIONS);\n          console.log(\"Données des congés reçues:\", data);\n\n          if (!isComponentMountedRef.current) return;\n\n          if (Array.isArray(data)) {\n            // Convertir les propriétés de snake_case à camelCase\n            const formattedData = data.map((vacation) => {\n              // Convertir les dates pour le calcul de la durée\n              const startDate = vacation.start_date || vacation.startDate;\n              const endDate = vacation.end_date || vacation.endDate;\n\n              // Calculer la durée en jours ouvrables selon la législation française\n              let duration = \"-\";\n              if (startDate && endDate) {\n                const start = new Date(startDate);\n                const end = new Date(endDate);\n\n                // Réinitialiser les heures pour éviter les problèmes de comparaison\n                start.setHours(0, 0, 0, 0);\n                end.setHours(0, 0, 0, 0);\n\n                // Compter les jours ouvrables (lundi au samedi, hors jours fériés)\n                let workableDays = 0;\n                const currentDate = new Date(start);\n\n                while (currentDate <= end) {\n                  // Si ce n'est pas un dimanche (0 = dimanche, 1-6 = lundi-samedi)\n                  if (currentDate.getDay() !== 0) {\n                    workableDays++;\n                  }\n\n                  // Passer au jour suivant\n                  currentDate.setDate(currentDate.getDate() + 1);\n                }\n\n                duration = `${workableDays} jour${\n                  workableDays > 1 ? \"s\" : \"\"\n                } ouvrable${workableDays > 1 ? \"s\" : \"\"}`;\n              }\n\n              // Créer un nouvel objet avec les propriétés converties\n              return {\n                ...vacation,\n                // Assurer que employeeName est défini, même si employee_name ne l'est pas\n                employeeName:\n                  vacation.employee_name ||\n                  vacation.employeeName ||\n                  \"Employé inconnu\",\n                // Convertir les dates si nécessaire\n                startDate: startDate,\n                endDate: endDate,\n                // Ajouter la durée calculée\n                duration: duration,\n                // Autres propriétés qui pourraient être en snake_case\n                employeeId: vacation.employee_id || vacation.employeeId,\n                approvedAt: vacation.approved_at || vacation.approvedAt,\n                approvedBy: vacation.approved_by || vacation.approvedBy,\n                rejectedAt: vacation.rejected_at || vacation.rejectedAt,\n                rejectedBy: vacation.rejected_by || vacation.rejectedBy,\n                rejectionReason:\n                  vacation.rejection_reason || vacation.rejectionReason,\n                createdAt: vacation.created_at || vacation.createdAt,\n                updatedAt: vacation.updated_at || vacation.updatedAt,\n              };\n            });\n\n            console.log(\"Données des congés formatées:\", formattedData);\n\n            if (isComponentMountedRef.current) {\n              setVacations(formattedData);\n              setError(null);\n            }\n\n            // Mettre en cache les données formatées\n            try {\n              localStorage.setItem(\n                \"cachedVacations\",\n                JSON.stringify(formattedData)\n              );\n              localStorage.setItem(\n                \"cachedVacationsTimestamp\",\n                new Date().getTime().toString()\n              );\n            } catch (e) {\n              console.error(\"Erreur lors de la mise en cache des données:\", e);\n              // Continuer même si la mise en cache échoue\n            }\n          } else {\n            console.error(\"Format de données invalide:\", data);\n            if (isComponentMountedRef.current) {\n              setError(\"Format de données invalide\");\n            }\n          }\n\n          if (isComponentMountedRef.current) {\n            setLoading(false);\n          }\n        } catch (err) {\n          console.error(\"Erreur lors du chargement des congés:\", err);\n\n          if (isComponentMountedRef.current) {\n            setError(err.message || \"Erreur lors du chargement des congés\");\n          }\n\n          // Réessayer avec un délai exponentiel mais plus court\n          retryCount++;\n          const retryDelay = 500 * Math.pow(2, retryCount); // Délai plus court\n          console.log(\n            `Nouvelle tentative dans ${retryDelay}ms (${retryCount}/${maxRetries})`\n          );\n\n          // Utiliser setTimeout avec une vérification du montage\n          const timeoutId = setTimeout(() => {\n            if (isComponentMountedRef.current) {\n              loadVacations();\n            }\n          }, retryDelay);\n\n          // Nettoyer le timeout si le composant est démonté\n          return () => clearTimeout(timeoutId);\n        }\n      };\n\n      if (isComponentMountedRef.current) {\n        setLoading(true);\n        setError(null);\n      }\n\n      await loadVacations();\n    },\n    [api]\n  );\n\n  // Charger les congés au montage du composant et configurer le polling\n  useEffect(() => {\n    // Charger les données initiales\n    fetchVacations();\n\n    // Configurer un intervalle pour rafraîchir les données périodiquement\n    pollingIntervalRef.current = setInterval(() => {\n      if (isComponentMountedRef.current) {\n        console.log(\"Rafraîchissement périodique des données de congés\");\n        fetchVacations(true); // forceRefresh = true pour ignorer le cache\n      }\n    }, POLLING_INTERVAL);\n\n    // Nettoyer lors du démontage\n    return () => {\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n        pollingIntervalRef.current = null;\n      }\n    };\n  }, [fetchVacations]);\n\n  /**\n   * Crée une nouvelle demande de congé\n   */\n  const createVacation = useCallback(\n    async (vacationData) => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        console.log(\"Données originales de la demande de congé:\", vacationData);\n\n        // Vérifier que les données essentielles sont présentes\n        if (!vacationData.employeeId && !vacationData.employee_id) {\n          const errorMsg = \"L'identifiant de l'employé est requis\";\n          toast.error(errorMsg);\n          setLoading(false);\n          return { success: false, error: errorMsg };\n        }\n\n        if (\n          (!vacationData.startDate && !vacationData.start_date) ||\n          (!vacationData.endDate && !vacationData.end_date)\n        ) {\n          const errorMsg = \"Les dates de début et de fin sont requises\";\n          toast.error(errorMsg);\n          setLoading(false);\n          return { success: false, error: errorMsg };\n        }\n\n        // Formater les données pour correspondre à la structure de la base de données\n        const formattedData = {\n          employee_id: vacationData.employeeId || vacationData.employee_id,\n          start_date: vacationData.startDate || vacationData.start_date,\n          end_date: vacationData.endDate || vacationData.end_date,\n          type: vacationData.type || \"paid\",\n          reason: vacationData.reason || \"\",\n          status: \"pending\",\n        };\n\n        // Convertir les dates au format YYYY-MM-DD si elles ne le sont pas déjà\n        if (\n          formattedData.start_date &&\n          !formattedData.start_date.includes(\"-\")\n        ) {\n          const startDate = new Date(formattedData.start_date);\n          formattedData.start_date = startDate.toISOString().split(\"T\")[0];\n        }\n\n        if (formattedData.end_date && !formattedData.end_date.includes(\"-\")) {\n          const endDate = new Date(formattedData.end_date);\n          formattedData.end_date = endDate.toISOString().split(\"T\")[0];\n        }\n\n        console.log(\n          \"Données formatées pour la création de congé:\",\n          formattedData\n        );\n\n        // Récupérer le token d'authentification\n        const token = localStorage.getItem(\"token\");\n        console.log(\"Token d'authentification présent:\", !!token);\n\n        // Appel API avec retry en cas d'échec\n        const apiCall = async () => {\n          try {\n            const response = await api.post(\n              API_ENDPOINTS.VACATIONS,\n              formattedData\n            );\n            console.log(\"Réponse de l'API:\", response);\n\n            // Mettre à jour l'état local\n            setVacations((prevVacations) => [...prevVacations, response]);\n\n            // Notifier le succès\n            toast.success(\"Demande de congé créée avec succès\");\n\n            return { success: true, data: response };\n          } catch (error) {\n            console.error(\n              \"Erreur lors de la création de la demande de congé:\",\n              error\n            );\n\n            // Afficher un message d'erreur plus précis si disponible\n            const errorMessage =\n              error.response?.data?.message ||\n              error.response?.data?.error ||\n              error.message ||\n              \"Erreur lors de la création de la demande de congé\";\n\n            toast.error(errorMessage);\n            setError(errorMessage);\n\n            throw error;\n          }\n        };\n\n        // Exécuter l'appel API avec retry\n        const result = await retryApiCall(apiCall, 2, 1000);\n        setLoading(false);\n\n        // Rafraîchir les données après création\n        fetchVacations(true);\n\n        return result;\n      } catch (error) {\n        console.error(\n          \"Erreur finale lors de la création de la demande de congé:\",\n          error\n        );\n        setLoading(false);\n        setError(\n          error.message || \"Erreur lors de la création de la demande de congé\"\n        );\n        return { success: false, error: error.message };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Met à jour une demande de congé existante\n   */\n  const updateVacation = useCallback(\n    async (id, vacationData) => {\n      try {\n        const apiCall = async () => {\n          const response = await api.put(\n            `${API_ENDPOINTS.VACATIONS}/${id}`,\n            vacationData\n          );\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                \"Erreur lors de la mise à jour de la demande de congé\"\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        const data = await retryApiCall(apiCall);\n\n        setVacations((prev) =>\n          prev.map((vacation) => (vacation.id === id ? data : vacation))\n        );\n\n        toast.success(\"Demande de congé mise à jour avec succès\");\n\n        // Rafraîchir les données après mise à jour\n        fetchVacations(true);\n\n        return { success: true, vacation: data };\n      } catch (err) {\n        console.error(\n          \"Erreur lors de la mise à jour de la demande de congé:\",\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la mise à jour de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Supprime une demande de congé\n   */\n  const deleteVacation = useCallback(\n    async (id) => {\n      try {\n        const apiCall = async () => {\n          const response = await api.delete(`${API_ENDPOINTS.VACATIONS}/${id}`);\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                \"Erreur lors de la suppression de la demande de congé\"\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        await retryApiCall(apiCall);\n\n        setVacations((prev) => prev.filter((vacation) => vacation.id !== id));\n\n        toast.success(\"Demande de congé supprimée avec succès\");\n\n        // Rafraîchir les données après suppression\n        fetchVacations(true);\n\n        return { success: true };\n      } catch (err) {\n        console.error(\n          \"Erreur lors de la suppression de la demande de congé:\",\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la suppression de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Approuve ou rejette une demande de congé\n   */\n  const updateVacationStatus = useCallback(\n    async (id, status, comment = \"\") => {\n      try {\n        const apiCall = async () => {\n          const response = await api.put(\n            `${API_ENDPOINTS.VACATIONS}/${id}/status`,\n            {\n              status,\n              comment,\n            }\n          );\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                `Erreur lors de la ${\n                  status === \"approved\" ? \"validation\" : \"rejet\"\n                } de la demande de congé`\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        const data = await retryApiCall(apiCall);\n\n        setVacations((prev) =>\n          prev.map((vacation) => (vacation.id === id ? data : vacation))\n        );\n\n        toast.success(\n          `Demande de congé ${\n            status === \"approved\" ? \"approuvée\" : \"rejetée\"\n          } avec succès`\n        );\n\n        // Rafraîchir les données après mise à jour du statut\n        fetchVacations(true);\n\n        return { success: true, vacation: data };\n      } catch (err) {\n        console.error(\n          `Erreur lors de la ${\n            status === \"approved\" ? \"validation\" : \"rejet\"\n          } de la demande de congé:`,\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la ${\n            status === \"approved\" ? \"validation\" : \"rejet\"\n          } de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Filtre les congés par statut\n   * @param {string|null} status - Le statut à filtrer (pending, approved, rejected) ou null pour tous\n   * @returns {Array} - Les congés filtrés\n   */\n  const getVacationsByStatus = useCallback(\n    (status) => {\n      if (!status) return vacations;\n      return vacations.filter((vacation) => vacation.status === status);\n    },\n    [vacations]\n  );\n\n  // Fonction pour forcer un rafraîchissement des données\n  const refreshVacations = useCallback(() => {\n    return fetchVacations(true);\n  }, [fetchVacations]);\n\n  return {\n    vacations,\n    loading,\n    error,\n    fetchVacations,\n    refreshVacations,\n    createVacation,\n    updateVacation,\n    deleteVacation,\n    updateVacationStatus,\n    getVacationsByStatus,\n    approveVacation: (id) => updateVacationStatus(id, \"approved\"),\n    rejectVacation: (id, comment) =>\n      updateVacationStatus(id, \"rejected\", comment),\n  };\n};\n\nexport default useVacations;\n","import {\n  Alert,\n  Box,\n  Button,\n  Container,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\n/**\n * Composant pour afficher un message d'erreur avec une option pour réessayer\n * @param {Object} props - Les propriétés du composant\n * @param {string} props.message - Le message d'erreur à afficher\n * @param {Function} props.onRetry - Fonction à appeler lors du clic sur le bouton \"Réessayer\"\n * @param {boolean} props.showHomeButton - Indique si le bouton \"Retour à l'accueil\" doit être affiché\n */\nconst ErrorDisplay = ({ message, onRetry, showHomeButton = true }) => {\n  const navigate = useNavigate();\n\n  const handleGoHome = () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 8, mb: 8 }}>\n      <Paper\n        elevation={3}\n        sx={{\n          p: 4,\n          borderRadius: 2,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n        }}\n      >\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom color=\"error\">\n          Oups ! Une erreur est survenue\n        </Typography>\n\n        <Box sx={{ width: \"100%\", mt: 2, mb: 4 }}>\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {message ||\n              \"Une erreur inattendue s'est produite. Veuillez réessayer ultérieurement.\"}\n          </Alert>\n        </Box>\n\n        <Box sx={{ display: \"flex\", gap: 2, mt: 2 }}>\n          {onRetry && (\n            <Button variant=\"contained\" color=\"primary\" onClick={onRetry}>\n              Réessayer\n            </Button>\n          )}\n\n          {showHomeButton && (\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleGoHome}>\n              Retour à l'accueil\n            </Button>\n          )}\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ErrorDisplay;\n","import { Box, CircularProgress, Container, Typography } from \"@mui/material\";\n\n/**\n * Composant pour afficher un écran de chargement\n * @param {Object} props - Les propriétés du composant\n * @param {string} props.message - Le message à afficher pendant le chargement\n * @param {number} props.size - La taille du spinner de chargement\n */\nconst LoadingScreen = ({ message = \"Chargement en cours...\", size = 60 }) => {\n  return (\n    <Container\n      maxWidth=\"xl\"\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"50vh\",\n        py: 8,\n      }}\n    >\n      <CircularProgress\n        size={size}\n        thickness={4}\n        color=\"primary\"\n        sx={{ mb: 3 }}\n      />\n\n      <Box sx={{ textAlign: \"center\" }}>\n        <Typography\n          variant=\"h6\"\n          component=\"h2\"\n          color=\"text.secondary\"\n          sx={{\n            animation: \"pulse 1.5s infinite ease-in-out\",\n            \"@keyframes pulse\": {\n              \"0%\": { opacity: 0.6 },\n              \"50%\": { opacity: 1 },\n              \"100%\": { opacity: 0.6 },\n            },\n          }}\n        >\n          {message}\n        </Typography>\n\n        <Typography\n          variant=\"body2\"\n          color=\"text.secondary\"\n          sx={{ mt: 2, maxWidth: 500, mx: \"auto\" }}\n        >\n          Merci de patienter pendant que nous chargeons vos données...\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoadingScreen;\n","import { Box, Divider, Typography } from \"@mui/material\";\n\n/**\n * Composant d'en-tête de page avec titre, sous-titre et icône\n * @param {Object} props - Les propriétés du composant\n * @param {string} props.title - Le titre principal de la page\n * @param {string} props.subtitle - Le sous-titre de la page\n * @param {string} props.icon - L'icône à afficher (emoji ou composant)\n * @param {Object} props.action - Un élément d'action à afficher (bouton, etc.)\n */\nconst PageHeader = ({ title, subtitle, icon, action }) => {\n  return (\n    <Box sx={{ mb: 4 }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          mb: 1,\n        }}\n      >\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          {icon && (\n            <Box\n              sx={{\n                fontSize: { xs: \"2rem\", md: \"2.5rem\" },\n                mr: 2,\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              {icon}\n            </Box>\n          )}\n\n          <Box>\n            <Typography\n              variant=\"h4\"\n              component=\"h1\"\n              sx={{\n                fontWeight: \"bold\",\n                fontSize: { xs: \"1.5rem\", sm: \"2rem\", md: \"2.25rem\" },\n              }}\n            >\n              {title}\n            </Typography>\n\n            {subtitle && (\n              <Typography\n                variant=\"subtitle1\"\n                color=\"text.secondary\"\n                sx={{ mt: 0.5 }}\n              >\n                {subtitle}\n              </Typography>\n            )}\n          </Box>\n        </Box>\n\n        {action && <Box sx={{ ml: 2 }}>{action}</Box>}\n      </Box>\n\n      <Divider sx={{ mt: 2, mb: 3 }} />\n    </Box>\n  );\n};\n\nexport default PageHeader;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { fr } from \"date-fns/locale\";\nimport { useEffect, useState } from \"react\";\nimport { VACATION_TYPES } from \"../../config/constants\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useEmployees from \"../../hooks/useEmployees\";\nimport { getWorkingDaysCount } from \"../../utils/dateUtils\";\n\n/**\n * Formulaire de création/édition de congé\n */\nconst VacationForm = ({ open, onClose, onSubmit, vacation, currentUser }) => {\n  const { user } = useAuth();\n  const { employees, loading: loadingEmployees } = useEmployees();\n  const [formData, setFormData] = useState({\n    employeeId: \"\",\n    startDate: null,\n    endDate: null,\n    type: \"paid\",\n    reason: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [fileName, setFileName] = useState(\"\");\n  const [daysCount, setDaysCount] = useState(0);\n  const [quotaExceeded, setQuotaExceeded] = useState(false);\n\n  // Initialiser le formulaire avec les données du congé à éditer\n  useEffect(() => {\n    if (vacation) {\n      setFormData({\n        employeeId: vacation.employeeId || \"\",\n        startDate: vacation.startDate ? new Date(vacation.startDate) : null,\n        endDate: vacation.endDate ? new Date(vacation.endDate) : null,\n        type: vacation.type || \"paid\",\n        reason: vacation.reason || \"\",\n      });\n    } else {\n      // Initialiser avec l'ID de l'utilisateur courant pour une nouvelle demande\n      setFormData({\n        employeeId: currentUser?.id || \"\",\n        startDate: null,\n        endDate: null,\n        type: \"paid\",\n        reason: \"\",\n      });\n    }\n    setErrors({});\n  }, [vacation, currentUser]);\n\n  // Gérer les changements dans les champs du formulaire\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n    // Effacer l'erreur pour ce champ\n    if (errors[name]) {\n      setErrors((prev) => ({\n        ...prev,\n        [name]: null,\n      }));\n    }\n  };\n\n  // Gérer les changements de date\n  const handleDateChange = (name, date) => {\n    setFormData((prev) => ({\n      ...prev,\n      [name]: date,\n    }));\n    // Effacer l'erreur pour ce champ\n    if (errors[name]) {\n      setErrors((prev) => ({\n        ...prev,\n        [name]: null,\n      }));\n    }\n  };\n\n  // Valider le formulaire\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.employeeId) {\n      newErrors.employeeId = \"L'identifiant de l'employé est requis\";\n    }\n\n    if (!formData.startDate) {\n      newErrors.startDate = \"La date de début est requise\";\n    }\n\n    if (!formData.endDate) {\n      newErrors.endDate = \"La date de fin est requise\";\n    }\n\n    if (\n      formData.startDate &&\n      formData.endDate &&\n      formData.startDate > formData.endDate\n    ) {\n      newErrors.endDate =\n        \"La date de fin doit être postérieure à la date de début\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Soumettre le formulaire\n  const handleSubmit = () => {\n    if (validateForm()) {\n      // Formater les dates au format ISO (YYYY-MM-DD)\n      const formattedData = {\n        ...formData,\n        startDate: formData.startDate\n          ? formData.startDate.toISOString().split(\"T\")[0]\n          : null,\n        endDate: formData.endDate\n          ? formData.endDate.toISOString().split(\"T\")[0]\n          : null,\n      };\n      onSubmit(formattedData);\n    }\n  };\n\n  // Calculer le nombre de jours entre les dates sélectionnées\n  useEffect(() => {\n    if (formData.startDate && formData.endDate) {\n      const start = new Date(formData.startDate);\n      const end = new Date(formData.endDate);\n\n      // Vérifier que la date de fin est après la date de début\n      if (end < start) {\n        setErrors((prev) => ({\n          ...prev,\n          endDate: \"La date de fin doit être après la date de début\",\n        }));\n        setDaysCount(0);\n        return;\n      }\n\n      // Calculer le nombre de jours ouvrés\n      const count = getWorkingDaysCount(start, end);\n      setDaysCount(count);\n      setErrors((prev) => ({ ...prev, endDate: null }));\n\n      // Vérifier si le quota est dépassé (uniquement pour les congés payés et RTT)\n      if (formData.type === \"paid\" || formData.type === \"rtt\") {\n        const vacationType = VACATION_TYPES.find(\n          (t) => t.value === formData.type\n        );\n        const defaultQuota = vacationType ? vacationType.defaultQuota : 0;\n\n        // TODO: Récupérer le quota restant de l'employé depuis l'API\n        // Pour l'instant, on utilise le quota par défaut\n        const remainingQuota = defaultQuota;\n\n        setQuotaExceeded(count > remainingQuota);\n      } else {\n        setQuotaExceeded(false);\n      }\n    } else {\n      setDaysCount(0);\n      setQuotaExceeded(false);\n    }\n  }, [formData.startDate, formData.endDate, formData.type]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // Vérifier la taille du fichier (max 5MB)\n      if (file.size > 5 * 1024 * 1024) {\n        console.error(\"Le fichier est trop volumineux (max 5MB)\");\n        return;\n      }\n\n      setFileName(file.name);\n      setFormData((prev) => ({\n        ...prev,\n        attachment: file,\n      }));\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"sm\"\n      fullWidth\n      aria-labelledby=\"vacation-form-dialog-title\"\n    >\n      <DialogTitle id=\"vacation-form-dialog-title\">\n        {vacation\n          ? \"Modifier la demande de congé\"\n          : \"Nouvelle demande de congé\"}\n      </DialogTitle>\n      <DialogContent>\n        <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={fr}>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12}>\n              <FormControl fullWidth error={!!errors.type}>\n                <InputLabel id=\"type-label\">Type de congé</InputLabel>\n                <Select\n                  labelId=\"type-label\"\n                  id=\"type\"\n                  name=\"type\"\n                  value={formData.type}\n                  onChange={handleChange}\n                  label=\"Type de congé\"\n                >\n                  {VACATION_TYPES.map((type) => (\n                    <MenuItem key={type.value} value={type.value}>\n                      {type.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {errors.type && <FormHelperText>{errors.type}</FormHelperText>}\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <DatePicker\n                label=\"Date de début\"\n                value={formData.startDate}\n                onChange={(date) => handleDateChange(\"startDate\", date)}\n                slotProps={{\n                  textField: {\n                    fullWidth: true,\n                    error: !!errors.startDate,\n                    helperText: errors.startDate,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <DatePicker\n                label=\"Date de fin\"\n                value={formData.endDate}\n                onChange={(date) => handleDateChange(\"endDate\", date)}\n                slotProps={{\n                  textField: {\n                    fullWidth: true,\n                    error: !!errors.endDate,\n                    helperText: errors.endDate,\n                  },\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                id=\"reason\"\n                name=\"reason\"\n                label=\"Motif (optionnel)\"\n                multiline\n                rows={3}\n                fullWidth\n                value={formData.reason}\n                onChange={handleChange}\n                error={!!errors.reason}\n                helperText={errors.reason}\n              />\n            </Grid>\n          </Grid>\n        </LocalizationProvider>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Annuler</Button>\n        <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n          {vacation ? \"Mettre à jour\" : \"Créer\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default VacationForm;\n","import { Cancel, CheckCircle, Delete, Edit } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { format } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { useState } from \"react\";\n\n/**\n * Composant pour afficher la liste des congés\n */\nconst VacationList = ({\n  vacations,\n  onEdit,\n  onDelete,\n  onApprove,\n  onReject,\n  currentUser,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [rejectDialogOpen, setRejectDialogOpen] = useState(false);\n  const [selectedVacation, setSelectedVacation] = useState(null);\n  const [rejectionReason, setRejectionReason] = useState(\"\");\n\n  // Gérer le changement de page\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  // Gérer le changement du nombre de lignes par page\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Ouvrir la boîte de dialogue de confirmation de suppression\n  const handleOpenDeleteDialog = (vacation) => {\n    setSelectedVacation(vacation);\n    setDeleteDialogOpen(true);\n  };\n\n  // Fermer la boîte de dialogue de confirmation de suppression\n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setSelectedVacation(null);\n  };\n\n  // Confirmer la suppression\n  const handleConfirmDelete = () => {\n    if (selectedVacation) {\n      onDelete(selectedVacation.id);\n    }\n    handleCloseDeleteDialog();\n  };\n\n  // Ouvrir la boîte de dialogue de rejet\n  const handleOpenRejectDialog = (vacation) => {\n    setSelectedVacation(vacation);\n    setRejectDialogOpen(true);\n    setRejectionReason(\"\");\n  };\n\n  // Fermer la boîte de dialogue de rejet\n  const handleCloseRejectDialog = () => {\n    setRejectDialogOpen(false);\n    setSelectedVacation(null);\n    setRejectionReason(\"\");\n  };\n\n  // Confirmer le rejet\n  const handleConfirmReject = () => {\n    if (selectedVacation) {\n      onReject(selectedVacation.id, rejectionReason);\n    }\n    handleCloseRejectDialog();\n  };\n\n  // Formater une date\n  const formatDate = (dateString) => {\n    if (!dateString) return \"-\";\n    try {\n      return format(new Date(dateString), \"dd MMMM yyyy\", { locale: fr });\n    } catch (error) {\n      console.error(\"Erreur lors du formatage de la date:\", error);\n      return dateString;\n    }\n  };\n\n  // Obtenir la couleur du statut\n  const getStatusColor = (status) => {\n    switch (status) {\n      case \"pending\":\n        return \"warning\";\n      case \"approved\":\n        return \"success\";\n      case \"rejected\":\n        return \"error\";\n      default:\n        return \"default\";\n    }\n  };\n\n  // Obtenir le libellé du statut\n  const getStatusLabel = (status) => {\n    switch (status) {\n      case \"pending\":\n        return \"En attente\";\n      case \"approved\":\n        return \"Approuvé\";\n      case \"rejected\":\n        return \"Rejeté\";\n      default:\n        return status;\n    }\n  };\n\n  // Vérifier si l'utilisateur peut modifier un congé\n  const canEditVacation = (vacation) => {\n    // L'utilisateur peut modifier ses propres congés en attente\n    return (\n      currentUser &&\n      vacation.employeeId === currentUser.id &&\n      vacation.status === \"pending\"\n    );\n  };\n\n  // Vérifier si l'utilisateur peut supprimer un congé\n  const canDeleteVacation = (vacation) => {\n    // L'utilisateur peut supprimer ses propres congés en attente\n    return (\n      currentUser &&\n      vacation.employeeId === currentUser.id &&\n      vacation.status === \"pending\"\n    );\n  };\n\n  // Vérifier si l'utilisateur peut approuver/rejeter un congé\n  const canApproveRejectVacation = (vacation) => {\n    // Seuls les administrateurs peuvent approuver/rejeter les congés\n    return (\n      currentUser &&\n      currentUser.role === \"admin\" &&\n      vacation.status === \"pending\"\n    );\n  };\n\n  // Afficher un message si aucun congé n'est disponible\n  if (!vacations || vacations.length === 0) {\n    return (\n      <Paper sx={{ p: 3, textAlign: \"center\" }}>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Aucune demande de congé disponible.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  // Afficher la liste des congés sous forme de tableau\n  return (\n    <Box>\n      <TableContainer component={Paper} sx={{ boxShadow: \"none\" }}>\n        <Table size={isMobile ? \"small\" : \"medium\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Employé</TableCell>\n              <TableCell>Date de début</TableCell>\n              <TableCell>Date de fin</TableCell>\n              <TableCell>Durée</TableCell>\n              <TableCell>Statut</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {vacations\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((vacation) => (\n                <TableRow key={vacation.id}>\n                  <TableCell>{vacation.employeeName}</TableCell>\n                  <TableCell>{formatDate(vacation.startDate)}</TableCell>\n                  <TableCell>{formatDate(vacation.endDate)}</TableCell>\n                  <TableCell>{vacation.duration}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={getStatusLabel(vacation.status)}\n                      color={getStatusColor(vacation.status)}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                      {canEditVacation(vacation) && (\n                        <Tooltip title=\"Modifier\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onEdit(vacation)}\n                          >\n                            <Edit fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n\n                      {canDeleteVacation(vacation) && (\n                        <Tooltip title=\"Supprimer\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleOpenDeleteDialog(vacation)}\n                          >\n                            <Delete fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n\n                      {canApproveRejectVacation(vacation) && (\n                        <>\n                          <Tooltip title=\"Approuver\">\n                            <IconButton\n                              size=\"small\"\n                              color=\"success\"\n                              onClick={() => onApprove(vacation.id)}\n                            >\n                              <CheckCircle fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n\n                          <Tooltip title=\"Rejeter\">\n                            <IconButton\n                              size=\"small\"\n                              color=\"error\"\n                              onClick={() => handleOpenRejectDialog(vacation)}\n                            >\n                              <Cancel fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        </>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={vacations.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        labelRowsPerPage=\"Lignes par page:\"\n        labelDisplayedRows={({ from, to, count }) =>\n          `${from}-${to} sur ${count}`\n        }\n      />\n\n      {/* Boîte de dialogue de confirmation de suppression */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={handleCloseDeleteDialog}\n        aria-labelledby=\"delete-dialog-title\"\n        aria-describedby=\"delete-dialog-description\"\n      >\n        <DialogTitle id=\"delete-dialog-title\">\n          Confirmer la suppression\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"delete-dialog-description\">\n            Êtes-vous sûr de vouloir supprimer cette demande de congé ? Cette\n            action est irréversible.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDeleteDialog}>Annuler</Button>\n          <Button onClick={handleConfirmDelete} color=\"error\" autoFocus>\n            Supprimer\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Boîte de dialogue de rejet */}\n      <Dialog\n        open={rejectDialogOpen}\n        onClose={handleCloseRejectDialog}\n        aria-labelledby=\"reject-dialog-title\"\n        aria-describedby=\"reject-dialog-description\"\n      >\n        <DialogTitle id=\"reject-dialog-title\">\n          Motif de rejet de la demande\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"reject-dialog-description\">\n            Veuillez indiquer le motif du rejet de cette demande de congé.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"rejectionReason\"\n            label=\"Motif du rejet\"\n            type=\"text\"\n            fullWidth\n            multiline\n            rows={3}\n            value={rejectionReason}\n            onChange={(e) => setRejectionReason(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseRejectDialog}>Annuler</Button>\n          <Button\n            onClick={handleConfirmReject}\n            color=\"error\"\n            disabled={!rejectionReason.trim()}\n          >\n            Rejeter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default VacationList;\n","import { Add, Refresh } from \"@mui/icons-material\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Tab,\n  Tabs,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport ErrorDisplay from \"../components/ui/ErrorDisplay\";\nimport LoadingScreen from \"../components/ui/LoadingScreen\";\nimport PageHeader from \"../components/ui/PageHeader\";\nimport VacationForm from \"../components/vacations/VacationForm\";\nimport VacationList from \"../components/vacations/VacationList\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useVacations from \"../hooks/useVacations\";\n\n/**\n * Page de gestion des congés\n */\nconst Vacations = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const [tabValue, setTabValue] = useState(0);\n  const [showForm, setShowForm] = useState(false);\n  const [selectedVacation, setSelectedVacation] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const { user } = useAuth();\n  const {\n    vacations,\n    loading,\n    error,\n    createVacation,\n    updateVacation,\n    deleteVacation,\n    updateVacationStatus,\n    getVacationsByStatus,\n    refreshVacations,\n  } = useVacations();\n\n  // Nettoyer les ressources lors du démontage du composant\n  useEffect(() => {\n    return () => {\n      // Aucun nettoyage spécifique nécessaire, tout est géré dans le hook useVacations\n    };\n  }, []);\n\n  // Fonction pour rafraîchir manuellement les données\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    try {\n      await refreshVacations();\n      toast.success(\"Données des congés rafraîchies\");\n    } catch (error) {\n      toast.error(\"Erreur lors du rafraîchissement des données\");\n    } finally {\n      setRefreshing(false);\n    }\n  };\n\n  // Gérer le changement d'onglet\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  // Ouvrir le formulaire pour créer un nouveau congé\n  const handleOpenCreateForm = () => {\n    setSelectedVacation(null);\n    setShowForm(true);\n  };\n\n  // Ouvrir le formulaire pour éditer un congé existant\n  const handleOpenEditForm = (vacation) => {\n    setSelectedVacation(vacation);\n    setShowForm(true);\n  };\n\n  // Fermer le formulaire\n  const handleCloseForm = () => {\n    setShowForm(false);\n    setSelectedVacation(null);\n  };\n\n  // Soumettre le formulaire\n  const handleSubmitForm = async (data) => {\n    try {\n      if (selectedVacation) {\n        // Mise à jour d'un congé existant\n        await updateVacation(selectedVacation.id, data);\n      } else {\n        // Création d'un nouveau congé\n        await createVacation(data);\n      }\n      handleCloseForm();\n    } catch (error) {\n      console.error(\"Erreur lors de la soumission du formulaire:\", error);\n      toast.error(\n        \"Une erreur est survenue lors de la soumission du formulaire\"\n      );\n    }\n  };\n\n  // Supprimer un congé\n  const handleDeleteVacation = async (id) => {\n    try {\n      await deleteVacation(id);\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression du congé:\", error);\n      toast.error(\"Une erreur est survenue lors de la suppression du congé\");\n    }\n  };\n\n  // Approuver un congé\n  const handleApproveVacation = async (id) => {\n    try {\n      await updateVacationStatus(id, \"approved\");\n    } catch (error) {\n      console.error(\"Erreur lors de l'approbation du congé:\", error);\n      toast.error(\"Une erreur est survenue lors de l'approbation du congé\");\n    }\n  };\n\n  // Rejeter un congé\n  const handleRejectVacation = async (id, comment) => {\n    try {\n      await updateVacationStatus(id, \"rejected\", comment);\n    } catch (error) {\n      console.error(\"Erreur lors du rejet du congé:\", error);\n      toast.error(\"Une erreur est survenue lors du rejet du congé\");\n    }\n  };\n\n  // Filtrer les congés en fonction de l'onglet sélectionné\n  const getFilteredVacations = () => {\n    switch (tabValue) {\n      case 0:\n        return vacations; // Tous les congés\n      case 1:\n        return getVacationsByStatus(\"pending\"); // Congés en attente\n      case 2:\n        return getVacationsByStatus(\"approved\"); // Congés approuvés\n      case 3:\n        return getVacationsByStatus(\"rejected\"); // Congés rejetés\n      default:\n        return vacations;\n    }\n  };\n\n  // Afficher un écran de chargement pendant le chargement des données\n  if (loading && !refreshing) {\n    return <LoadingScreen message=\"Chargement des congés...\" />;\n  }\n\n  // Afficher un message d'erreur en cas d'erreur\n  if (error && !refreshing) {\n    return <ErrorDisplay message={error} />;\n  }\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n      <PageHeader\n        title=\"Gestion des congés\"\n        subtitle=\"Consultez et gérez les demandes de congés\"\n        icon=\"🏖️\"\n      />\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper\n            sx={{\n              p: 2,\n              display: \"flex\",\n              flexDirection: \"column\",\n              borderRadius: 2,\n              boxShadow: 3,\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2,\n              }}\n            >\n              <Typography variant=\"h6\" component=\"h2\">\n                Liste des demandes de congés\n              </Typography>\n              <Box>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<Refresh />}\n                  onClick={handleRefresh}\n                  disabled={refreshing}\n                  sx={{ mr: 1 }}\n                >\n                  {refreshing ? \"Rafraîchissement...\" : \"Rafraîchir\"}\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<Add />}\n                  onClick={handleOpenCreateForm}\n                >\n                  Nouvelle demande\n                </Button>\n              </Box>\n            </Box>\n\n            <Tabs\n              value={tabValue}\n              onChange={handleTabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant={isMobile ? \"scrollable\" : \"fullWidth\"}\n              scrollButtons={isMobile ? \"auto\" : false}\n              sx={{ mb: 2 }}\n            >\n              <Tab label=\"Tous\" />\n              <Tab label=\"En attente\" />\n              <Tab label=\"Approuvés\" />\n              <Tab label=\"Rejetés\" />\n            </Tabs>\n\n            <VacationList\n              vacations={getFilteredVacations()}\n              onEdit={handleOpenEditForm}\n              onDelete={handleDeleteVacation}\n              onApprove={handleApproveVacation}\n              onReject={handleRejectVacation}\n              currentUser={user}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Formulaire de création/édition de congé */}\n      <VacationForm\n        open={showForm}\n        onClose={handleCloseForm}\n        onSubmit={handleSubmitForm}\n        vacation={selectedVacation}\n        currentUser={user}\n      />\n    </Container>\n  );\n};\n\nexport default Vacations;\n"],"names":["useVacations","vacations","setVacations","useState","loading","setLoading","error","setError","api","useApi","isComponentMountedRef","useRef","pollingIntervalRef","useEffect","current","clearInterval","retryApiCall","useCallback","async","apiCall","maxRetries","arguments","length","undefined","delay","lastError","retryCount","err","retryDelay","Math","pow","console","log","Promise","resolve","setTimeout","fetchVacations","forceRefresh","cachedData","localStorage","getItem","cachedTimestamp","Date","getTime","parseInt","parsedData","JSON","parse","e","loadVacations","data","get","API_ENDPOINTS","VACATIONS","Array","isArray","formattedData","map","vacation","startDate","start_date","endDate","end_date","duration","start","end","setHours","workableDays","currentDate","getDay","setDate","getDate","employeeName","employee_name","employeeId","employee_id","approvedAt","approved_at","approvedBy","approved_by","rejectedAt","rejected_at","rejectedBy","rejected_by","rejectionReason","rejection_reason","createdAt","created_at","updatedAt","updated_at","setItem","stringify","toString","message","timeoutId","clearTimeout","setInterval","createVacation","vacationData","errorMsg","toast","success","type","reason","status","includes","toISOString","split","token","response","post","prevVacations","_error$response","_error$response$data","_error$response2","_error$response2$data","errorMessage","result","updateVacation","id","put","_response$data","ok","Error","prev","deleteVacation","delete","_response$data2","filter","updateVacationStatus","comment","_response$data3","getVacationsByStatus","refreshVacations","approveVacation","rejectVacation","_ref","onRetry","showHomeButton","navigate","useNavigate","_jsx","Container","maxWidth","sx","mt","mb","children","_jsxs","Paper","elevation","p","borderRadius","display","flexDirection","alignItems","textAlign","Typography","variant","component","gutterBottom","color","Box","width","Alert","severity","gap","Button","onClick","handleGoHome","size","justifyContent","minHeight","py","CircularProgress","thickness","animation","opacity","mx","title","subtitle","icon","action","fontSize","xs","md","mr","fontWeight","sm","ml","Divider","open","onClose","onSubmit","currentUser","user","useAuth","employees","loadingEmployees","useEmployees","formData","setFormData","errors","setErrors","fileName","setFileName","daysCount","setDaysCount","quotaExceeded","setQuotaExceeded","handleChange","name","value","target","handleDateChange","date","count","getWorkingDaysCount","vacationType","VACATION_TYPES","find","t","defaultQuota","Dialog","fullWidth","DialogTitle","DialogContent","LocalizationProvider","dateAdapter","AdapterDateFns","adapterLocale","fr","Grid","container","spacing","item","FormControl","InputLabel","Select","labelId","onChange","label","MenuItem","FormHelperText","DatePicker","slotProps","textField","helperText","TextField","multiline","rows","DialogActions","handleSubmit","validateForm","newErrors","Object","keys","onEdit","onDelete","onApprove","onReject","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","page","setPage","rowsPerPage","setRowsPerPage","deleteDialogOpen","setDeleteDialogOpen","rejectDialogOpen","setRejectDialogOpen","selectedVacation","setSelectedVacation","setRejectionReason","handleCloseDeleteDialog","handleCloseRejectDialog","formatDate","dateString","format","locale","getStatusColor","getStatusLabel","canEditVacation","canDeleteVacation","canApproveRejectVacation","role","TableContainer","boxShadow","Table","TableHead","TableRow","TableCell","align","TableBody","slice","Chip","Tooltip","IconButton","Edit","handleOpenDeleteDialog","Delete","_Fragment","CheckCircle","handleOpenRejectDialog","Cancel","TablePagination","rowsPerPageOptions","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","_ref2","from","to","DialogContentText","handleConfirmDelete","autoFocus","margin","handleConfirmReject","disabled","trim","Vacations","tabValue","setTabValue","showForm","setShowForm","refreshing","setRefreshing","handleCloseForm","LoadingScreen","ErrorDisplay","PageHeader","startIcon","Refresh","Add","handleOpenCreateForm","Tabs","handleTabChange","newValue","indicatorColor","textColor","scrollButtons","Tab","VacationList","getFilteredVacations","VacationForm"],"sourceRoot":""}