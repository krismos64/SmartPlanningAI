{"version":3,"file":"static/js/618.94856047.chunk.js","mappings":"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","sources":["services/api.js","pages/auth/Register.js"],"sourcesContent":["import { API_ENDPOINTS, apiRequest } from \"../config/api\";\n\nexport const AuthService = {\n  login: async (email, password) => {\n    console.log(\"üîê Tentative de connexion avec:\", { email, password: \"***\" });\n    try {\n      const response = await apiRequest(API_ENDPOINTS.LOGIN, \"POST\", {\n        email,\n        password,\n      });\n\n      if (response.error) {\n        console.error(\"‚ùå Erreur de connexion:\", response.error);\n        return { success: false, message: response.error };\n      }\n\n      if (response.token) {\n        console.log(\"‚úÖ Connexion r√©ussie, token re√ßu\");\n        localStorage.setItem(\"token\", response.token);\n        localStorage.setItem(\n          \"user\",\n          JSON.stringify({\n            id: response.id,\n            email: response.email,\n            role: response.role,\n            first_name: response.first_name,\n            last_name: response.last_name,\n          })\n        );\n        return { success: true, user: response };\n      } else {\n        console.error(\"‚ùå Connexion √©chou√©e: pas de token re√ßu\");\n        return { success: false, message: \"Erreur d'authentification\" };\n      }\n    } catch (error) {\n      console.error(\"‚ùå Erreur lors de la connexion:\", error);\n      return {\n        success: false,\n        message: error.message || \"Erreur de connexion\",\n      };\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      const response = await apiRequest(API_ENDPOINTS.REGISTER, \"POST\", {\n        ...userData,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n      });\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, user: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur d'inscription\",\n      };\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    return { success: true };\n  },\n\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem(\"user\");\n    if (!userStr) return null;\n\n    try {\n      return JSON.parse(userStr);\n    } catch (error) {\n      console.error(\"Erreur lors de la r√©cup√©ration de l'utilisateur:\", error);\n      return null;\n    }\n  },\n};\n\nexport const EmployeeService = {\n  getAll: async () => {\n    try {\n      const response = await apiRequest(API_ENDPOINTS.EMPLOYEES.BASE, \"GET\");\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, employees: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la r√©cup√©ration des employ√©s\",\n      };\n    }\n  },\n\n  getById: async (id) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.EMPLOYEES.BY_ID(id),\n        \"GET\"\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return {\n        ...response,\n        first_name: response.first_name,\n        last_name: response.last_name,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la r√©cup√©ration de l'employ√©\",\n      };\n    }\n  },\n\n  create: async (employeeData) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.EMPLOYEES.BASE,\n        \"POST\",\n        employeeData\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, employee: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la cr√©ation de l'employ√©\",\n      };\n    }\n  },\n\n  update: async (id, employeeData) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.EMPLOYEES.BY_ID(id),\n        \"PUT\",\n        employeeData\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, employee: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la mise √† jour de l'employ√©\",\n      };\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.EMPLOYEES.BY_ID(id),\n        \"DELETE\"\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la suppression de l'employ√©\",\n      };\n    }\n  },\n};\n\nexport const VacationService = {\n  getAll: async () => {\n    try {\n      const response = await apiRequest(API_ENDPOINTS.VACATIONS, \"GET\");\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, vacations: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la r√©cup√©ration des cong√©s\",\n      };\n    }\n  },\n\n  getById: async (id) => {\n    try {\n      const response = await apiRequest(\n        `${API_ENDPOINTS.VACATIONS}/${id}`,\n        \"GET\"\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, vacation: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la r√©cup√©ration du cong√©\",\n      };\n    }\n  },\n\n  create: async (vacationData) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.VACATIONS,\n        \"POST\",\n        vacationData\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, vacation: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la cr√©ation du cong√©\",\n      };\n    }\n  },\n\n  update: async (id, vacationData) => {\n    try {\n      const response = await apiRequest(\n        `${API_ENDPOINTS.VACATIONS}/${id}`,\n        \"PUT\",\n        vacationData\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, vacation: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la mise √† jour du cong√©\",\n      };\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      const response = await apiRequest(\n        `${API_ENDPOINTS.VACATIONS}/${id}`,\n        \"DELETE\"\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la suppression du cong√©\",\n      };\n    }\n  },\n};\n\nexport const ActivityService = {\n  getAll: async () => {\n    try {\n      const response = await apiRequest(API_ENDPOINTS.ACTIVITIES.LIST, \"GET\");\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, activities: response };\n    } catch (error) {\n      return {\n        success: false,\n        message:\n          error.message || \"Erreur lors de la r√©cup√©ration des activit√©s\",\n      };\n    }\n  },\n\n  create: async (activityData) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.ACTIVITIES.CREATE,\n        \"POST\",\n        activityData\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, activity: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la cr√©ation de l'activit√©\",\n      };\n    }\n  },\n\n  update: async (id, activityData) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.ACTIVITIES.UPDATE(id),\n        \"PUT\",\n        activityData\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true, activity: response };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la mise √† jour de l'activit√©\",\n      };\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      const response = await apiRequest(\n        API_ENDPOINTS.ACTIVITIES.DELETE(id),\n        \"DELETE\"\n      );\n\n      if (response.error) {\n        return { success: false, message: response.error };\n      }\n\n      return { success: true };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || \"Erreur lors de la suppression de l'activit√©\",\n      };\n    }\n  },\n};\n","import Lottie from \"lottie-react\";\nimport { useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\nimport planningAnimation from \"../../assets/animations/planning-animation.json\";\nimport { useNotification } from \"../../components/ui/Notification\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { AuthService } from \"../../services/api\";\n\n// Animations\nconst fadeInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\n// Composants stylis√©s\nconst RegisterContainer = styled.div`\n  width: 100%;\n  max-width: 400px;\n  padding: 2rem;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  animation: ${fadeInUp} 0.5s ease-out;\n`;\n\nconst RegisterHeader = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst LogoAnimation = styled.div`\n  width: 120px;\n  height: 120px;\n  margin: 0 auto;\n  margin-bottom: ${({ theme }) => theme.spacing.md};\n  animation: ${pulse} 2s infinite ease-in-out;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst Input = styled.input`\n  padding: 0.75rem;\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.error : theme.colors.border)};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  font-size: 1rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme, error }) =>\n      error ? theme.colors.error : theme.colors.primary};\n    box-shadow: 0 0 0 2px\n      ${({ theme, error }) =>\n        error ? `${theme.colors.error}33` : `${theme.colors.primary}33`};\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${({ theme }) => theme.colors.error};\n  font-size: 0.875rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}dd`};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.text.disabled};\n    cursor: not-allowed;\n  }\n`;\n\nconst LinkContainer = styled.div`\n  margin-top: 1rem;\n  text-align: center;\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n\n  a {\n    color: ${({ theme }) => theme.colors.primary};\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n// Composant Register\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    company: \"\",\n    phone: \"\",\n    jobTitle: \"\",\n    profileImage: null,\n  });\n\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    company: \"\",\n    phone: \"\",\n    jobTitle: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [profileImagePreview, setProfileImagePreview] = useState(null);\n  const fileInputRef = useRef(null);\n\n  const { register } = useAuth();\n  const { showNotification } = useNotification();\n  const navigate = useNavigate();\n\n  // Mise √† jour du formulaire\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // G√©rer le clic sur le bouton d'upload\n  const handleAvatarUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // G√©rer le changement de fichier\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // V√©rifier la taille du fichier (max 5MB)\n      if (file.size > 5 * 1024 * 1024) {\n        showNotification({\n          type: \"error\",\n          title: \"Fichier trop volumineux\",\n          message: \"La taille de l'image ne doit pas d√©passer 5MB\",\n        });\n        return;\n      }\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        // Pr√©visualisation de l'image\n        setProfileImagePreview(reader.result);\n\n        // Stocker l'image en base64 (sans le pr√©fixe data:image/jpeg;base64,)\n        const base64String = reader.result.split(\",\")[1];\n\n        // V√©rifier la taille de la cha√Æne base64\n        if (base64String.length > 2 * 1024 * 1024) {\n          // ~2MB en base64\n          showNotification({\n            type: \"error\",\n            title: \"Image trop volumineuse\",\n            message:\n              \"Veuillez choisir une image de plus petite taille ou de qualit√© inf√©rieure\",\n          });\n          return;\n        }\n\n        setFormData((prev) => ({\n          ...prev,\n          profileImage: base64String,\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Validation du formulaire\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.email) {\n      newErrors.email = \"L'email est requis\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = \"L'email n'est pas valide\";\n    }\n\n    if (!formData.password) {\n      newErrors.password = \"Le mot de passe est requis\";\n    } else if (formData.password.length < 6) {\n      newErrors.password =\n        \"Le mot de passe doit contenir au moins 6 caract√®res\";\n    }\n\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = \"La confirmation du mot de passe est requise\";\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = \"Les mots de passe ne correspondent pas\";\n    }\n\n    if (!formData.first_name) {\n      newErrors.first_name = \"Le pr√©nom est requis\";\n    }\n\n    if (!formData.last_name) {\n      newErrors.last_name = \"Le nom est requis\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Soumission du formulaire\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const { confirmPassword, ...registrationData } = formData;\n      const result = await AuthService.register(registrationData);\n\n      if (result.success) {\n        showNotification({\n          type: \"success\",\n          message:\n            \"Inscription r√©ussie ! Vous pouvez maintenant vous connecter.\",\n        });\n        navigate(\"/login\");\n      } else {\n        showNotification({\n          type: \"error\",\n          message: result.message || \"Erreur lors de l'inscription\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de l'inscription:\", error);\n      showNotification({\n        type: \"error\",\n        message: \"Une erreur est survenue lors de l'inscription\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"calc(100vh - 200px)\",\n      }}\n    >\n      <RegisterContainer>\n        <RegisterHeader>\n          <LogoAnimation>\n            <Lottie animationData={planningAnimation} loop={true} />\n          </LogoAnimation>\n          <h1>Cr√©er un compte</h1>\n          <p>Rejoignez SmartPlanning AI d√®s aujourd'hui</p>\n        </RegisterHeader>\n\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"first_name\">Pr√©nom *</Label>\n            <Input\n              id=\"first_name\"\n              name=\"first_name\"\n              type=\"text\"\n              value={formData.first_name}\n              onChange={handleChange}\n              placeholder=\"Entrez votre pr√©nom\"\n              error={!!errors.first_name}\n            />\n            {errors.first_name && (\n              <ErrorMessage>{errors.first_name}</ErrorMessage>\n            )}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"last_name\">Nom *</Label>\n            <Input\n              id=\"last_name\"\n              name=\"last_name\"\n              type=\"text\"\n              value={formData.last_name}\n              onChange={handleChange}\n              placeholder=\"Entrez votre nom\"\n              error={!!errors.last_name}\n            />\n            {errors.last_name && (\n              <ErrorMessage>{errors.last_name}</ErrorMessage>\n            )}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"email\">Email *</Label>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"Entrez votre email\"\n              error={!!errors.email}\n            />\n            {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"password\">Mot de passe *</Label>\n            <Input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Entrez votre mot de passe\"\n              error={!!errors.password}\n            />\n            {errors.password && <ErrorMessage>{errors.password}</ErrorMessage>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"confirmPassword\">Confirmer le mot de passe *</Label>\n            <Input\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              placeholder=\"Confirmez votre mot de passe\"\n              error={!!errors.confirmPassword}\n            />\n            {errors.confirmPassword && (\n              <ErrorMessage>{errors.confirmPassword}</ErrorMessage>\n            )}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"jobTitle\">Fonction</Label>\n            <Input\n              id=\"jobTitle\"\n              name=\"jobTitle\"\n              type=\"text\"\n              value={formData.jobTitle}\n              onChange={handleChange}\n              placeholder=\"Votre fonction (optionnel)\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"company\">Entreprise</Label>\n            <Input\n              id=\"company\"\n              name=\"company\"\n              type=\"text\"\n              value={formData.company}\n              onChange={handleChange}\n              placeholder=\"Votre entreprise (optionnel)\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"phone\">T√©l√©phone</Label>\n            <Input\n              id=\"phone\"\n              name=\"phone\"\n              type=\"text\"\n              value={formData.phone}\n              onChange={handleChange}\n              placeholder=\"Votre num√©ro de t√©l√©phone (optionnel)\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label>Photo de profil (optionnel)</Label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"1rem\",\n                marginTop: \"0.5rem\",\n              }}\n            >\n              {profileImagePreview && (\n                <div\n                  style={{\n                    width: \"60px\",\n                    height: \"60px\",\n                    borderRadius: \"50%\",\n                    overflow: \"hidden\",\n                    border: \"1px solid #ddd\",\n                  }}\n                >\n                  <img\n                    src={profileImagePreview}\n                    alt=\"Aper√ßu\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      objectFit: \"cover\",\n                    }}\n                  />\n                </div>\n              )}\n              <Button\n                type=\"button\"\n                onClick={handleAvatarUploadClick}\n                style={{\n                  backgroundColor: \"#f0f0f0\",\n                  color: \"#333\",\n                  padding: \"0.5rem 1rem\",\n                }}\n              >\n                Choisir une image\n              </Button>\n              <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={handleFileChange}\n                accept=\"image/*\"\n                style={{ display: \"none\" }}\n              />\n            </div>\n          </FormGroup>\n\n          <div\n            style={{ fontSize: \"0.8rem\", color: \"#666\", marginBottom: \"1rem\" }}\n          >\n            * Champs obligatoires\n          </div>\n\n          <Button type=\"submit\" disabled={isLoading}>\n            {isLoading ? \"Inscription en cours...\" : \"S'inscrire\"}\n          </Button>\n        </Form>\n\n        <LinkContainer>\n          Vous avez d√©j√† un compte ? <Link to=\"/login\">Se connecter</Link>\n        </LinkContainer>\n      </RegisterContainer>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["AuthService","async","response","apiRequest","API_ENDPOINTS","REGISTER","userData","first_name","last_name","error","success","message","user","fadeInUp","keyframes","pulse","RegisterContainer","styled","div","_ref","theme","colors","surface","_ref2","borderRadius","medium","_ref3","shadows","RegisterHeader","LogoAnimation","_ref4","spacing","md","Form","form","FormGroup","Label","label","_ref5","text","primary","Input","input","_ref6","border","_ref7","small","_ref8","_ref9","ErrorMessage","_ref10","Button","button","_ref11","_ref12","_ref13","_ref14","disabled","LinkContainer","_ref15","secondary","_ref16","Register","formData","setFormData","useState","email","password","confirmPassword","company","phone","jobTitle","profileImage","errors","setErrors","isLoading","setIsLoading","profileImagePreview","setProfileImagePreview","fileInputRef","useRef","register","useAuth","showNotification","useNotification","navigate","useNavigate","handleChange","e","name","value","target","prev","_jsx","style","display","justifyContent","alignItems","minHeight","children","_jsxs","Lottie","animationData","planningAnimation","loop","onSubmit","preventDefault","validateForm","newErrors","test","length","Object","keys","registrationData","result","type","console","htmlFor","id","onChange","placeholder","gap","marginTop","width","height","overflow","src","alt","objectFit","onClick","handleAvatarUploadClick","current","click","backgroundColor","color","padding","ref","file","files","size","title","reader","FileReader","onloadend","base64String","split","readAsDataURL","accept","fontSize","marginBottom","Link","to"],"sourceRoot":""}