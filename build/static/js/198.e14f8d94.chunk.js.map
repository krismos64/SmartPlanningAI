{"version":3,"file":"static/js/198.e14f8d94.chunk.js","mappings":"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","sources":["pages/Profile.js","hooks/useUserName.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNotification } from \"../components/ui/Notification\";\nimport { API_URL } from \"../config/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useUserName } from \"../hooks/useUserName\";\n\n// Composants stylisés\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  padding: 2rem;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.5rem;\n`;\n\nconst PageDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: 1.1rem;\n`;\n\nconst ProfileCard = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.sm}) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst AvatarContainer = styled.div`\n  position: relative;\n  width: 100px;\n  height: 100px;\n`;\n\nconst Avatar = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 2.5rem;\n  font-weight: bold;\n  overflow: hidden;\n`;\n\nconst AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst AvatarUploadButton = styled.button`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  font-size: 1rem;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primaryDark};\n  }\n`;\n\nconst HiddenFileInput = styled.input`\n  display: none;\n`;\n\nconst ProfileInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ProfileName = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 0.5rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst ProfileRole = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst ProfileEmail = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: 0.9rem;\n`;\n\nconst ProfileForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nconst FormSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst FormLabel = styled.label`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-weight: 500;\n`;\n\nconst FormInput = styled.input`\n  padding: 0.75rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.error : theme.colors.border)};\n  background-color: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: 1rem;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.text.tertiary};\n  }\n`;\n\nconst ErrorMessage = styled.p`\n  color: ${({ theme }) => theme.colors.error};\n  font-size: 0.8rem;\n  margin-top: 0.25rem;\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 1rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst PrimaryButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  border: none;\n\n  &:hover:not(:disabled) {\n    background-color: ${({ theme }) => theme.colors.primaryDark};\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n\n  &:hover:not(:disabled) {\n    background-color: ${({ theme }) => theme.colors.background};\n  }\n`;\n\n// Composant Profile\nconst Profile = () => {\n  const { user, updateUser } = useAuth();\n  const { showNotification } = useNotification();\n  const fileInputRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [profileImage, setProfileImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const { first_name, last_name, fullName, initials } = useUserName(user);\n\n  const [formData, setFormData] = useState({\n    first_name: user?.first_name || \"\",\n    last_name: user?.last_name || \"\",\n    email: user?.email || \"\",\n    company: user?.company || \"\",\n    phone: user?.phone || \"\",\n    jobTitle: user?.jobTitle || \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        first_name: user.first_name || \"\",\n        last_name: user.last_name || \"\",\n        email: user.email || \"\",\n        company: user.company || \"\",\n        phone: user.phone || \"\",\n        jobTitle: user.jobTitle || \"\",\n      });\n    }\n  }, [user]);\n\n  const getUserInitials = () => {\n    return initials;\n  };\n\n  const getUserFullName = () => {\n    return fullName;\n  };\n\n  const getUserRole = () => {\n    if (!user) return \"Utilisateur\";\n    switch (user.role) {\n      case \"admin\":\n        return \"Administrateur\";\n      case \"manager\":\n        return \"Gestionnaire\";\n      case \"employee\":\n        return \"Employé\";\n      default:\n        return \"Utilisateur\";\n    }\n  };\n\n  const handleAvatarUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 5 * 1024 * 1024) {\n        showNotification({\n          type: \"error\",\n          title: \"Fichier trop volumineux\",\n          message: \"La taille de l'image ne doit pas dépasser 5MB\",\n        });\n        return;\n      }\n\n      const compressImage = (\n        file,\n        maxWidth = 800,\n        maxHeight = 800,\n        quality = 0.7\n      ) => {\n        return new Promise((resolve) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = (event) => {\n            const img = new Image();\n            img.src = event.target.result;\n            img.onload = () => {\n              const canvas = document.createElement(\"canvas\");\n              let width = img.width;\n              let height = img.height;\n\n              if (width > height) {\n                if (width > maxWidth) {\n                  height = Math.round((height * maxWidth) / width);\n                  width = maxWidth;\n                }\n              } else {\n                if (height > maxHeight) {\n                  width = Math.round((width * maxHeight) / height);\n                  height = maxHeight;\n                }\n              }\n\n              canvas.width = width;\n              canvas.height = height;\n\n              const ctx = canvas.getContext(\"2d\");\n              ctx.drawImage(img, 0, 0, width, height);\n\n              const dataUrl = canvas.toDataURL(\"image/jpeg\", quality);\n              resolve(dataUrl);\n            };\n          };\n        });\n      };\n\n      compressImage(file).then((compressedDataUrl) => {\n        setPreviewUrl(compressedDataUrl);\n\n        const base64String = compressedDataUrl.split(\",\")[1];\n\n        if (base64String.length > 2 * 1024 * 1024) {\n          showNotification({\n            type: \"error\",\n            title: \"Image trop volumineuse\",\n            message:\n              \"Veuillez choisir une image de plus petite taille ou de qualité inférieure\",\n          });\n          return;\n        }\n\n        setProfileImage(base64String);\n      });\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.email) {\n      newErrors.email = \"L'email est requis\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = \"L'email n'est pas valide\";\n    }\n\n    if (!formData.first_name) {\n      newErrors.first_name = \"Le prénom est requis\";\n    }\n\n    if (!formData.last_name) {\n      newErrors.last_name = \"Le nom est requis\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const dataToSend = {\n        ...formData,\n        ...(profileImage ? { profileImage } : {}),\n      };\n\n      console.log(\"Envoi des données de profil:\", {\n        ...dataToSend,\n        profileImageLength: dataToSend.profileImage\n          ? dataToSend.profileImage.length\n          : 0,\n      });\n\n      console.log(\"URL de l'API:\", `${API_URL}/api/auth/profile`);\n\n      if (\n        dataToSend.profileImage &&\n        dataToSend.profileImage.length > 1 * 1024 * 1024\n      ) {\n        showNotification({\n          type: \"warning\",\n          title: \"Image trop volumineuse\",\n          message:\n            \"La photo de profil semble poser problème pour être sauvegardée. Essayez avec une image plus petite.\",\n        });\n        setIsSubmitting(false);\n        return;\n      }\n\n      const response = await fetch(`${API_URL}/api/auth/profile`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(dataToSend),\n        credentials: \"include\",\n      });\n\n      console.log(\"Réponse reçue:\", response.status, response.statusText);\n\n      if (!response.ok) {\n        let errorMessage = \"Erreur lors de la mise à jour du profil\";\n\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.message || errorMessage;\n        } catch (e) {\n          // Si la réponse n'est pas du JSON valide, utiliser le message d'erreur par défaut\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      const data = await response.json();\n\n      updateUser(data);\n\n      setFormData({\n        first_name: data.first_name || \"\",\n        last_name: data.last_name || \"\",\n        email: data.email || \"\",\n        company: data.company || \"\",\n        phone: data.phone || \"\",\n        jobTitle: data.jobTitle || \"\",\n      });\n\n      setPreviewUrl(null);\n\n      showNotification({\n        type: \"success\",\n        title: \"Profil mis à jour\",\n        message: \"Vos informations ont été mises à jour avec succès\",\n      });\n    } catch (error) {\n      console.error(\"Erreur lors de la mise à jour du profil:\", error);\n\n      showNotification({\n        type: \"error\",\n        title: \"Erreur\",\n        message:\n          error.message ||\n          \"Une erreur est survenue lors de la mise à jour du profil\",\n      });\n\n      if (\n        error.message.includes(\"fetch\") ||\n        error.message.includes(\"network\")\n      ) {\n        showNotification({\n          type: \"warning\",\n          title: \"Problème avec l'image\",\n          message:\n            \"La photo de profil semble poser problème pour être sauvegardée. Essayez avec une image plus petite.\",\n        });\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (user) {\n      setFormData({\n        first_name: user.first_name || \"\",\n        last_name: user.last_name || \"\",\n        first_name: user.firstName || \"\",\n        last_name: user.lastName || \"\",\n        email: user.email || \"\",\n        phone: user.phone || \"\",\n        company: user.company || \"\",\n        jobTitle: user.jobTitle || \"\",\n      });\n    }\n    setPreviewUrl(null);\n    setErrors({});\n    setIsEditing(false);\n  };\n\n  return (\n    <ProfileContainer>\n      <PageHeader>\n        <PageTitle>Mon profil</PageTitle>\n        <PageDescription>Gérez vos informations personnelles.</PageDescription>\n      </PageHeader>\n\n      <ProfileCard>\n        <ProfileHeader>\n          <AvatarContainer>\n            <Avatar>\n              {previewUrl ? (\n                <AvatarImage src={previewUrl} alt=\"Photo de profil\" />\n              ) : user?.profileImage ? (\n                <AvatarImage\n                  src={`data:image/jpeg;base64,${user.profileImage}`}\n                  alt=\"Photo de profil\"\n                />\n              ) : (\n                getUserInitials()\n              )}\n            </Avatar>\n            {isEditing && (\n              <>\n                <AvatarUploadButton\n                  onClick={handleAvatarUploadClick}\n                  title=\"Changer la photo de profil\"\n                >\n                  <i className=\"fas fa-camera\"></i>\n                </AvatarUploadButton>\n                <HiddenFileInput\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handleImageChange}\n                  accept=\"image/*\"\n                />\n              </>\n            )}\n          </AvatarContainer>\n          <ProfileInfo>\n            <ProfileName>{getUserFullName()}</ProfileName>\n            <ProfileRole>{getUserRole()}</ProfileRole>\n            <ProfileEmail>{user?.email}</ProfileEmail>\n          </ProfileInfo>\n        </ProfileHeader>\n\n        {!isEditing ? (\n          <FormActions>\n            <PrimaryButton onClick={() => setIsEditing(true)}>\n              Modifier mon profil\n            </PrimaryButton>\n          </FormActions>\n        ) : (\n          <ProfileForm onSubmit={handleSubmit}>\n            <FormSection>\n              <SectionTitle>Informations personnelles</SectionTitle>\n              <FormGroup>\n                <FormLabel htmlFor=\"first_name\">Prénom</FormLabel>\n                <FormInput\n                  id=\"first_name\"\n                  name=\"first_name\"\n                  value={formData.first_name}\n                  onChange={handleChange}\n                  placeholder=\"Votre prénom\"\n                  error={errors.first_name}\n                />\n                {errors.first_name && (\n                  <ErrorMessage>{errors.first_name}</ErrorMessage>\n                )}\n              </FormGroup>\n\n              <FormGroup>\n                <FormLabel htmlFor=\"last_name\">Nom</FormLabel>\n                <FormInput\n                  id=\"last_name\"\n                  name=\"last_name\"\n                  value={formData.last_name}\n                  onChange={handleChange}\n                  placeholder=\"Votre nom\"\n                  error={errors.last_name}\n                />\n                {errors.last_name && (\n                  <ErrorMessage>{errors.last_name}</ErrorMessage>\n                )}\n              </FormGroup>\n\n              <FormGroup>\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\n                <FormInput\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Votre email\"\n                  error={errors.email}\n                />\n                {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\n              </FormGroup>\n\n              <FormGroup>\n                <FormLabel htmlFor=\"jobTitle\">Fonction</FormLabel>\n                <FormInput\n                  id=\"jobTitle\"\n                  name=\"jobTitle\"\n                  value={formData.jobTitle}\n                  onChange={handleChange}\n                  placeholder=\"Votre fonction\"\n                />\n              </FormGroup>\n            </FormSection>\n\n            <FormSection>\n              <SectionTitle>Coordonnées</SectionTitle>\n              <FormGroup>\n                <FormLabel htmlFor=\"phone\">Téléphone</FormLabel>\n                <FormInput\n                  id=\"phone\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                  placeholder=\"Votre numéro de téléphone\"\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <FormLabel htmlFor=\"company\">Entreprise</FormLabel>\n                <FormInput\n                  id=\"company\"\n                  name=\"company\"\n                  value={formData.company}\n                  onChange={handleChange}\n                  placeholder=\"Votre entreprise\"\n                />\n              </FormGroup>\n            </FormSection>\n\n            <FormActions>\n              <SecondaryButton type=\"button\" onClick={handleCancel}>\n                Annuler\n              </SecondaryButton>\n              <PrimaryButton type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting\n                  ? \"Enregistrement...\"\n                  : \"Enregistrer les modifications\"}\n              </PrimaryButton>\n            </FormActions>\n          </ProfileForm>\n        )}\n      </ProfileCard>\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n","import { useMemo } from \"react\";\n\nexport const useUserName = (user) => {\n  const first_name = useMemo(() => user?.first_name || \"\", [user]);\n\n  const last_name = useMemo(() => user?.last_name || \"\", [user]);\n\n  const fullName = useMemo(() => {\n    if (first_name && last_name) {\n      return `${first_name} ${last_name}`;\n    }\n    return user?.email || \"Utilisateur inconnu\";\n  }, [first_name, last_name, user]);\n\n  const initials = useMemo(() => {\n    if (first_name && last_name) {\n      return `${first_name[0]}${last_name[0]}`.toUpperCase();\n    }\n    return user?.email?.[0]?.toUpperCase() || \"U\";\n  }, [first_name, last_name, user]);\n\n  return {\n    first_name,\n    last_name,\n    fullName,\n    initials,\n  };\n};\n"],"names":["ProfileContainer","styled","div","PageHeader","PageTitle","h1","_ref","theme","colors","text","primary","PageDescription","p","_ref2","secondary","ProfileCard","_ref3","surface","_ref4","borderRadius","medium","_ref5","shadows","ProfileHeader","_ref6","breakpoints","sm","AvatarContainer","Avatar","_ref7","AvatarImage","img","AvatarUploadButton","button","_ref8","_ref9","small","_ref10","primaryDark","HiddenFileInput","input","ProfileInfo","ProfileName","h2","_ref11","ProfileRole","_ref12","ProfileEmail","_ref13","ProfileForm","form","FormSection","SectionTitle","h3","_ref14","_ref15","border","FormGroup","FormLabel","label","_ref16","FormInput","_ref17","_ref18","error","_ref19","background","_ref20","_ref21","_ref22","tertiary","ErrorMessage","_ref23","FormActions","Button","_ref24","PrimaryButton","_ref25","_ref26","SecondaryButton","_ref27","_ref28","_ref29","Profile","user","updateUser","useAuth","showNotification","useNotification","fileInputRef","useRef","isLoading","setIsLoading","useState","isEditing","setIsEditing","profileImage","setProfileImage","previewUrl","setPreviewUrl","first_name","last_name","fullName","initials","useMemo","email","_user$email","_user$email$","toUpperCase","useUserName","formData","setFormData","company","phone","jobTitle","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","handleChange","e","name","value","target","prev","_jsxs","children","_jsx","src","alt","_Fragment","onClick","handleAvatarUploadClick","current","click","title","className","type","ref","onChange","file","files","size","message","compressImage","maxWidth","arguments","length","undefined","maxHeight","quality","Promise","resolve","reader","FileReader","readAsDataURL","onload","event","Image","result","canvas","document","createElement","width","height","Math","round","getContext","drawImage","dataUrl","toDataURL","then","compressedDataUrl","base64String","split","accept","getUserRole","role","onSubmit","async","preventDefault","token","localStorage","getItem","dataToSend","console","log","profileImageLength","API_URL","response","fetch","method","headers","Authorization","body","JSON","stringify","credentials","status","statusText","ok","errorMessage","json","Error","data","includes","htmlFor","id","placeholder","handleCancel","firstName","lastName","disabled"],"sourceRoot":""}