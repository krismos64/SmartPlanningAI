{"version":3,"file":"static/js/786.d13f75c0.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/stats/animation-count.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.index = getElementIndex(event.currentTarget);\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", (lostPointerEvent, lostPointerInfo) => {\n            const index = getElementIndex(lostPointerEvent.currentTarget);\n            /**\n             * If the pointer has lost capture because it's moved in the DOM\n             * then we need to re-capture it.\n             */\n            if (index !== this.index) {\n                capturePointer(lostPointerEvent, \"set\");\n            }\n            else {\n                this.handlePointerUp(lostPointerEvent, lostPointerInfo);\n            }\n        }));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\nfunction getElementIndex(element) {\n    if (!element.parentNode)\n        return -1;\n    return Array.from(element.parentNode.children).indexOf(element);\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.10\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","capturePointer","action","actionName","target","Element","pointerId","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","isOutside","isTrusted","rect","getBoundingClientRect","left","top","right","innerWidth","bottom","innerHeight","clientX","clientY","cancelEvent","addEventListener","canAddKeyboardAccessibility","element","useGlobalTarget","HTMLElement","tagName","tabIndex","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","schedule","queue","process","frameData","frameloop","push","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","activeAnimations","layout","mainThread","waapi","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","isRefObject","ref","PanSession","handlers","transformPagePoint","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","getElementIndex","hasPointerCapture","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","lostPointerEvent","lostPointerInfo","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","parentNode","children","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","microtask","cancelMicrotask","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","updateDimensions","motion","createDomVisualElement"],"sourceRoot":""}