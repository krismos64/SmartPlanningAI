{"version":3,"file":"static/js/764.719754f3.chunk.js","mappings":"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","sources":["hooks/useVacations.js","pages/Stats.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { API_ENDPOINTS } from \"../config/api\";\nimport useApi from \"./useApi\";\n\n/**\n * Hook personnalisé pour gérer les congés\n * Version sans WebSocket pour éviter les problèmes de navigation\n */\nconst useVacations = () => {\n  const [vacations, setVacations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const api = useApi();\n  const isComponentMountedRef = useRef(true);\n  const pollingIntervalRef = useRef(null);\n  const POLLING_INTERVAL = 60000; // 60 secondes entre chaque vérification\n\n  // Marquer le composant comme monté/démonté\n  useEffect(() => {\n    isComponentMountedRef.current = true;\n\n    return () => {\n      isComponentMountedRef.current = false;\n\n      // Nettoyer l'intervalle de polling lors du démontage\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n        pollingIntervalRef.current = null;\n      }\n    };\n  }, []);\n\n  /**\n   * Fonction utilitaire pour réessayer une requête API\n   * @param {Function} apiCall - Fonction d'appel API à réessayer\n   * @param {number} maxRetries - Nombre maximum de tentatives\n   * @param {number} delay - Délai entre les tentatives (en ms)\n   * @returns {Promise} - Résultat de l'appel API\n   */\n  const retryApiCall = useCallback(\n    async (apiCall, maxRetries = 3, delay = 1000) => {\n      let lastError = null;\n      let retryCount = 0;\n\n      while (retryCount < maxRetries) {\n        try {\n          return await apiCall();\n        } catch (err) {\n          lastError = err;\n          retryCount++;\n\n          // Si c'est la dernière tentative, ne pas attendre\n          if (retryCount < maxRetries) {\n            // Utiliser un délai exponentiel\n            const retryDelay = delay * Math.pow(2, retryCount - 1);\n            console.log(\n              `Tentative ${retryCount}/${maxRetries} échouée, nouvelle tentative dans ${retryDelay}ms`\n            );\n            await new Promise((resolve) => setTimeout(resolve, retryDelay));\n          }\n        }\n      }\n\n      // Si toutes les tentatives ont échoué, lancer l'erreur\n      throw lastError;\n    },\n    []\n  );\n\n  // Fonction pour charger les congés\n  const fetchVacations = useCallback(\n    async (forceRefresh = false) => {\n      if (!isComponentMountedRef.current) return;\n\n      let retryCount = 0;\n      const maxRetries = 2;\n\n      // Vérifier si les données sont déjà en cache et récentes (moins de 5 minutes)\n      const cachedData = localStorage.getItem(\"cachedVacations\");\n      const cachedTimestamp = localStorage.getItem(\"cachedVacationsTimestamp\");\n\n      if (!forceRefresh && cachedData && cachedTimestamp) {\n        const now = new Date().getTime();\n        const cacheTime = parseInt(cachedTimestamp);\n        const fiveMinutes = 5 * 60 * 1000;\n\n        // Si le cache est récent (moins de 5 minutes), utiliser les données en cache\n        if (now - cacheTime < fiveMinutes) {\n          try {\n            const parsedData = JSON.parse(cachedData);\n            console.log(\"Utilisation des données en cache pour les congés\");\n            if (isComponentMountedRef.current) {\n              setVacations(parsedData);\n              setLoading(false);\n            }\n            return;\n          } catch (e) {\n            console.error(\"Erreur lors de la lecture du cache:\", e);\n            // Continuer avec le chargement normal si le cache est invalide\n          }\n        }\n      }\n\n      const loadVacations = async () => {\n        if (retryCount >= maxRetries || !isComponentMountedRef.current) {\n          if (isComponentMountedRef.current) {\n            setError(\n              \"Erreur lors du chargement des congés après plusieurs tentatives\"\n            );\n            setLoading(false);\n          }\n          return;\n        }\n\n        try {\n          console.log(\"Chargement des congés...\");\n          const token = localStorage.getItem(\"token\");\n\n          if (!token) {\n            console.error(\"Token d'authentification manquant\");\n            if (isComponentMountedRef.current) {\n              setError(\"Vous devez être connecté pour accéder à ces données\");\n              setLoading(false);\n            }\n            return;\n          }\n\n          const data = await api.get(API_ENDPOINTS.VACATIONS);\n          console.log(\"Données des congés reçues:\", data);\n\n          if (!isComponentMountedRef.current) return;\n\n          if (Array.isArray(data)) {\n            // Convertir les propriétés de snake_case à camelCase\n            const formattedData = data.map((vacation) => {\n              // Convertir les dates pour le calcul de la durée\n              const startDate = vacation.start_date || vacation.startDate;\n              const endDate = vacation.end_date || vacation.endDate;\n\n              // Calculer la durée en jours ouvrables selon la législation française\n              let duration = \"-\";\n              if (startDate && endDate) {\n                const start = new Date(startDate);\n                const end = new Date(endDate);\n\n                // Réinitialiser les heures pour éviter les problèmes de comparaison\n                start.setHours(0, 0, 0, 0);\n                end.setHours(0, 0, 0, 0);\n\n                // Compter les jours ouvrables (lundi au samedi, hors jours fériés)\n                let workableDays = 0;\n                const currentDate = new Date(start);\n\n                while (currentDate <= end) {\n                  // Si ce n'est pas un dimanche (0 = dimanche, 1-6 = lundi-samedi)\n                  if (currentDate.getDay() !== 0) {\n                    workableDays++;\n                  }\n\n                  // Passer au jour suivant\n                  currentDate.setDate(currentDate.getDate() + 1);\n                }\n\n                duration = `${workableDays} jour${\n                  workableDays > 1 ? \"s\" : \"\"\n                } ouvrable${workableDays > 1 ? \"s\" : \"\"}`;\n              }\n\n              // Créer un nouvel objet avec les propriétés converties\n              return {\n                ...vacation,\n                // Assurer que employeeName est défini, même si employee_name ne l'est pas\n                employeeName:\n                  vacation.employee_name ||\n                  vacation.employeeName ||\n                  \"Employé inconnu\",\n                // Convertir les dates si nécessaire\n                startDate: startDate,\n                endDate: endDate,\n                // Ajouter la durée calculée\n                duration: duration,\n                // Autres propriétés qui pourraient être en snake_case\n                employeeId: vacation.employee_id || vacation.employeeId,\n                approvedAt: vacation.approved_at || vacation.approvedAt,\n                approvedBy: vacation.approved_by || vacation.approvedBy,\n                rejectedAt: vacation.rejected_at || vacation.rejectedAt,\n                rejectedBy: vacation.rejected_by || vacation.rejectedBy,\n                rejectionReason:\n                  vacation.rejection_reason || vacation.rejectionReason,\n                createdAt: vacation.created_at || vacation.createdAt,\n                updatedAt: vacation.updated_at || vacation.updatedAt,\n              };\n            });\n\n            console.log(\"Données des congés formatées:\", formattedData);\n\n            if (isComponentMountedRef.current) {\n              setVacations(formattedData);\n              setError(null);\n            }\n\n            // Mettre en cache les données formatées\n            try {\n              localStorage.setItem(\n                \"cachedVacations\",\n                JSON.stringify(formattedData)\n              );\n              localStorage.setItem(\n                \"cachedVacationsTimestamp\",\n                new Date().getTime().toString()\n              );\n            } catch (e) {\n              console.error(\"Erreur lors de la mise en cache des données:\", e);\n              // Continuer même si la mise en cache échoue\n            }\n          } else {\n            console.error(\"Format de données invalide:\", data);\n            if (isComponentMountedRef.current) {\n              setError(\"Format de données invalide\");\n            }\n          }\n\n          if (isComponentMountedRef.current) {\n            setLoading(false);\n          }\n        } catch (err) {\n          console.error(\"Erreur lors du chargement des congés:\", err);\n\n          if (isComponentMountedRef.current) {\n            setError(err.message || \"Erreur lors du chargement des congés\");\n          }\n\n          // Réessayer avec un délai exponentiel mais plus court\n          retryCount++;\n          const retryDelay = 500 * Math.pow(2, retryCount); // Délai plus court\n          console.log(\n            `Nouvelle tentative dans ${retryDelay}ms (${retryCount}/${maxRetries})`\n          );\n\n          // Utiliser setTimeout avec une vérification du montage\n          const timeoutId = setTimeout(() => {\n            if (isComponentMountedRef.current) {\n              loadVacations();\n            }\n          }, retryDelay);\n\n          // Nettoyer le timeout si le composant est démonté\n          return () => clearTimeout(timeoutId);\n        }\n      };\n\n      if (isComponentMountedRef.current) {\n        setLoading(true);\n        setError(null);\n      }\n\n      await loadVacations();\n    },\n    [api]\n  );\n\n  // Charger les congés au montage du composant et configurer le polling\n  useEffect(() => {\n    // Charger les données initiales\n    fetchVacations();\n\n    // Configurer un intervalle pour rafraîchir les données périodiquement\n    pollingIntervalRef.current = setInterval(() => {\n      if (isComponentMountedRef.current) {\n        console.log(\"Rafraîchissement périodique des données de congés\");\n        fetchVacations(true); // forceRefresh = true pour ignorer le cache\n      }\n    }, POLLING_INTERVAL);\n\n    // Nettoyer lors du démontage\n    return () => {\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n        pollingIntervalRef.current = null;\n      }\n    };\n  }, [fetchVacations]);\n\n  /**\n   * Crée une nouvelle demande de congé\n   */\n  const createVacation = useCallback(\n    async (vacationData) => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        console.log(\"Données originales de la demande de congé:\", vacationData);\n\n        // Vérifier que les données essentielles sont présentes\n        if (!vacationData.employeeId && !vacationData.employee_id) {\n          const errorMsg = \"L'identifiant de l'employé est requis\";\n          toast.error(errorMsg);\n          setLoading(false);\n          return { success: false, error: errorMsg };\n        }\n\n        if (\n          (!vacationData.startDate && !vacationData.start_date) ||\n          (!vacationData.endDate && !vacationData.end_date)\n        ) {\n          const errorMsg = \"Les dates de début et de fin sont requises\";\n          toast.error(errorMsg);\n          setLoading(false);\n          return { success: false, error: errorMsg };\n        }\n\n        // Formater les données pour correspondre à la structure de la base de données\n        const formattedData = {\n          employee_id: vacationData.employeeId || vacationData.employee_id,\n          start_date: vacationData.startDate || vacationData.start_date,\n          end_date: vacationData.endDate || vacationData.end_date,\n          type: vacationData.type || \"paid\",\n          reason: vacationData.reason || \"\",\n          status: \"pending\",\n        };\n\n        // Convertir les dates au format YYYY-MM-DD si elles ne le sont pas déjà\n        if (\n          formattedData.start_date &&\n          !formattedData.start_date.includes(\"-\")\n        ) {\n          const startDate = new Date(formattedData.start_date);\n          formattedData.start_date = startDate.toISOString().split(\"T\")[0];\n        }\n\n        if (formattedData.end_date && !formattedData.end_date.includes(\"-\")) {\n          const endDate = new Date(formattedData.end_date);\n          formattedData.end_date = endDate.toISOString().split(\"T\")[0];\n        }\n\n        console.log(\n          \"Données formatées pour la création de congé:\",\n          formattedData\n        );\n\n        // Récupérer le token d'authentification\n        const token = localStorage.getItem(\"token\");\n        console.log(\"Token d'authentification présent:\", !!token);\n\n        // Appel API avec retry en cas d'échec\n        const apiCall = async () => {\n          try {\n            const response = await api.post(\n              API_ENDPOINTS.VACATIONS,\n              formattedData\n            );\n            console.log(\"Réponse de l'API:\", response);\n\n            // Mettre à jour l'état local\n            setVacations((prevVacations) => [...prevVacations, response]);\n\n            // Notifier le succès\n            toast.success(\"Demande de congé créée avec succès\");\n\n            return { success: true, data: response };\n          } catch (error) {\n            console.error(\n              \"Erreur lors de la création de la demande de congé:\",\n              error\n            );\n\n            // Afficher un message d'erreur plus précis si disponible\n            const errorMessage =\n              error.response?.data?.message ||\n              error.response?.data?.error ||\n              error.message ||\n              \"Erreur lors de la création de la demande de congé\";\n\n            toast.error(errorMessage);\n            setError(errorMessage);\n\n            throw error;\n          }\n        };\n\n        // Exécuter l'appel API avec retry\n        const result = await retryApiCall(apiCall, 2, 1000);\n        setLoading(false);\n\n        // Rafraîchir les données après création\n        fetchVacations(true);\n\n        return result;\n      } catch (error) {\n        console.error(\n          \"Erreur finale lors de la création de la demande de congé:\",\n          error\n        );\n        setLoading(false);\n        setError(\n          error.message || \"Erreur lors de la création de la demande de congé\"\n        );\n        return { success: false, error: error.message };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Met à jour une demande de congé existante\n   */\n  const updateVacation = useCallback(\n    async (id, vacationData) => {\n      try {\n        const apiCall = async () => {\n          const response = await api.put(\n            `${API_ENDPOINTS.VACATIONS}/${id}`,\n            vacationData\n          );\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                \"Erreur lors de la mise à jour de la demande de congé\"\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        const data = await retryApiCall(apiCall);\n\n        setVacations((prev) =>\n          prev.map((vacation) => (vacation.id === id ? data : vacation))\n        );\n\n        toast.success(\"Demande de congé mise à jour avec succès\");\n\n        // Rafraîchir les données après mise à jour\n        fetchVacations(true);\n\n        return { success: true, vacation: data };\n      } catch (err) {\n        console.error(\n          \"Erreur lors de la mise à jour de la demande de congé:\",\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la mise à jour de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Supprime une demande de congé\n   */\n  const deleteVacation = useCallback(\n    async (id) => {\n      try {\n        const apiCall = async () => {\n          const response = await api.delete(`${API_ENDPOINTS.VACATIONS}/${id}`);\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                \"Erreur lors de la suppression de la demande de congé\"\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        await retryApiCall(apiCall);\n\n        setVacations((prev) => prev.filter((vacation) => vacation.id !== id));\n\n        toast.success(\"Demande de congé supprimée avec succès\");\n\n        // Rafraîchir les données après suppression\n        fetchVacations(true);\n\n        return { success: true };\n      } catch (err) {\n        console.error(\n          \"Erreur lors de la suppression de la demande de congé:\",\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la suppression de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Approuve ou rejette une demande de congé\n   */\n  const updateVacationStatus = useCallback(\n    async (id, status, comment = \"\") => {\n      try {\n        const apiCall = async () => {\n          const response = await api.put(\n            `${API_ENDPOINTS.VACATIONS}/${id}/status`,\n            {\n              status,\n              comment,\n            }\n          );\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                `Erreur lors de la ${\n                  status === \"approved\" ? \"validation\" : \"rejet\"\n                } de la demande de congé`\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        const data = await retryApiCall(apiCall);\n\n        setVacations((prev) =>\n          prev.map((vacation) => (vacation.id === id ? data : vacation))\n        );\n\n        toast.success(\n          `Demande de congé ${\n            status === \"approved\" ? \"approuvée\" : \"rejetée\"\n          } avec succès`\n        );\n\n        // Rafraîchir les données après mise à jour du statut\n        fetchVacations(true);\n\n        return { success: true, vacation: data };\n      } catch (err) {\n        console.error(\n          `Erreur lors de la ${\n            status === \"approved\" ? \"validation\" : \"rejet\"\n          } de la demande de congé:`,\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la ${\n            status === \"approved\" ? \"validation\" : \"rejet\"\n          } de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Filtre les congés par statut\n   * @param {string|null} status - Le statut à filtrer (pending, approved, rejected) ou null pour tous\n   * @returns {Array} - Les congés filtrés\n   */\n  const getVacationsByStatus = useCallback(\n    (status) => {\n      if (!status) return vacations;\n      return vacations.filter((vacation) => vacation.status === status);\n    },\n    [vacations]\n  );\n\n  // Fonction pour forcer un rafraîchissement des données\n  const refreshVacations = useCallback(() => {\n    return fetchVacations(true);\n  }, [fetchVacations]);\n\n  return {\n    vacations,\n    loading,\n    error,\n    fetchVacations,\n    refreshVacations,\n    createVacation,\n    updateVacation,\n    deleteVacation,\n    updateVacationStatus,\n    getVacationsByStatus,\n    approveVacation: (id) => updateVacationStatus(id, \"approved\"),\n    rejectVacation: (id, comment) =>\n      updateVacationStatus(id, \"rejected\", comment),\n  };\n};\n\nexport default useVacations;\n","import { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport {\n  FiBarChart2,\n  FiCheckCircle,\n  FiClock,\n  FiPieChart,\n  FiRefreshCw,\n  FiSun,\n  FiUsers,\n  FiXCircle,\n} from \"react-icons/fi\";\nimport styled from \"styled-components\";\nimport useEmployees from \"../hooks/useEmployees\";\nimport useVacations from \"../hooks/useVacations\";\n\n// Composants stylisés\nconst StatsContainer = styled.div`\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst PageHeader = styled.div`\n  margin-bottom: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n`;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.75rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0 0 0.5rem 0;\n`;\n\nconst PageDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: 1rem;\n  margin: 0;\n`;\n\nconst RefreshButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  border: none;\n  background-color: ${({ theme }) => theme.colors.primaryLight};\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary}22;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  svg {\n    transition: transform 0.3s ease;\n  }\n\n  &:hover svg {\n    transform: rotate(180deg);\n  }\n`;\n\nconst StatsGrid = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst StatsCard = styled(motion.div)`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${({ theme }) => theme.shadows.large};\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.5rem;\n`;\n\nconst CardTitle = styled.h2`\n  font-size: 1.25rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst CardIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n`;\n\nconst ChartContainer = styled.div`\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => `${theme.colors.background}66`};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  padding: 1rem;\n  position: relative;\n`;\n\nconst ChartPlaceholder = styled.div`\n  text-align: center;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: 0.875rem;\n`;\n\nconst StatValue = styled.div`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: ${({ theme, color }) => color || theme.colors.primary};\n  text-align: center;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-align: center;\n`;\n\nconst ProgressBar = styled.div`\n  height: 8px;\n  background-color: ${({ theme }) => `${theme.colors.border}`};\n  border-radius: 4px;\n  overflow: hidden;\n  margin-top: 0.5rem;\n\n  &::after {\n    content: \"\";\n    display: block;\n    height: 100%;\n    width: ${({ value }) => `${value}%`};\n    background-color: ${({ theme, color }) => color || theme.colors.primary};\n    border-radius: 4px;\n    transition: width 1s ease-in-out;\n  }\n`;\n\nconst StatsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StatsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 0.75rem 0;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst StatsItemLabel = styled.div`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst StatsItemValue = styled.div`\n  font-weight: 500;\n  color: ${({ theme, color }) => color || theme.colors.text.primary};\n`;\n\nconst StatusIndicator = styled.span`\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: ${({ color }) => color};\n  margin-right: 0.5rem;\n`;\n\nconst VacationTypesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  margin-top: 1rem;\n`;\n\nconst VacationTypeItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst VacationTypeLabel = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst VacationTypeBar = styled.div`\n  flex: 1;\n  height: 8px;\n  background-color: ${({ theme }) => theme.colors.border};\n  border-radius: 4px;\n  margin: 0 1rem;\n  overflow: hidden;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: ${({ percentage }) => `${percentage}%`};\n    background-color: ${({ color }) => color};\n    border-radius: 4px;\n    transition: width 1s ease-in-out;\n  }\n`;\n\nconst VacationTypeValue = styled.div`\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.text.primary};\n  min-width: 40px;\n  text-align: right;\n`;\n\nconst LoadingIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  color: ${({ theme }) => theme.colors.text.secondary};\n\n  svg {\n    animation: spin 1s linear infinite;\n    margin-right: 0.5rem;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.25rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0 0 1rem 0;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst VacationStatusGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst StatusCard = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${({ theme }) => theme.shadows.large};\n  }\n`;\n\nconst StatusIcon = styled.div`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.75rem;\n  margin-bottom: 1rem;\n`;\n\nconst StatusValue = styled.div`\n  font-size: 2rem;\n  font-weight: 600;\n  color: ${({ theme, color }) => color || theme.colors.text.primary};\n`;\n\nconst StatusLabel = styled.div`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin-top: 0.5rem;\n`;\n\n// Animations\nconst fadeInUp = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n};\n\nconst staggerContainer = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\n\n// Composant Stats\nconst Stats = () => {\n  const {\n    employees,\n    loading: employeesLoading,\n    fetchEmployees,\n  } = useEmployees();\n  const {\n    vacations,\n    loading: vacationsLoading,\n    fetchVacations,\n  } = useVacations();\n  const [stats, setStats] = useState({\n    employees: {\n      total: 0,\n      active: 0,\n      onVacation: 0,\n      departments: [],\n    },\n    vacations: {\n      total: 0,\n      pending: 0,\n      approved: 0,\n      rejected: 0,\n      byType: {\n        paid: 0,\n        unpaid: 0,\n        sick: 0,\n        other: 0,\n      },\n      byMonth: {},\n    },\n  });\n\n  const handleRefresh = () => {\n    fetchEmployees();\n    fetchVacations();\n  };\n\n  // Calculer les statistiques\n  useEffect(() => {\n    if (!employeesLoading && !vacationsLoading && employees && vacations) {\n      // Statistiques des employés\n      const totalEmployees = employees.length;\n\n      // Employés actuellement en congé\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      const employeesOnVacation = vacations\n        .filter((v) => {\n          const startDate = new Date(v.start_date);\n          const endDate = new Date(v.end_date);\n          startDate.setHours(0, 0, 0, 0);\n          endDate.setHours(23, 59, 59, 999);\n          return (\n            v.status === \"approved\" && today >= startDate && today <= endDate\n          );\n        })\n        .map((v) => v.employee_id);\n\n      // Éliminer les doublons\n      const uniqueEmployeesOnVacation = [...new Set(employeesOnVacation)];\n      const onVacationCount = uniqueEmployeesOnVacation.length;\n\n      // Employés actifs (non en congé)\n      const activeEmployees = totalEmployees - onVacationCount;\n\n      // Départements (à implémenter si les données sont disponibles)\n      const departments = [];\n\n      // Statistiques des congés\n      const totalVacations = vacations.length;\n      const pendingVacations = vacations.filter(\n        (v) => v.status === \"pending\"\n      ).length;\n      const approvedVacations = vacations.filter(\n        (v) => v.status === \"approved\"\n      ).length;\n      const rejectedVacations = vacations.filter(\n        (v) => v.status === \"rejected\"\n      ).length;\n\n      // Congés par type\n      const paidVacations = vacations.filter((v) => v.type === \"paid\").length;\n      const unpaidVacations = vacations.filter(\n        (v) => v.type === \"unpaid\"\n      ).length;\n      const sickVacations = vacations.filter((v) => v.type === \"sick\").length;\n      const otherVacations = vacations.filter((v) => v.type === \"other\").length;\n\n      // Congés par mois\n      const vacationsByMonth = {};\n\n      vacations.forEach((vacation) => {\n        const startDate = new Date(vacation.start_date);\n        const month = startDate.getMonth();\n        const year = startDate.getFullYear();\n        const key = `${year}-${month}`;\n\n        if (!vacationsByMonth[key]) {\n          vacationsByMonth[key] = {\n            month,\n            year,\n            count: 0,\n            approved: 0,\n            pending: 0,\n            rejected: 0,\n          };\n        }\n\n        vacationsByMonth[key].count++;\n\n        if (vacation.status === \"approved\") {\n          vacationsByMonth[key].approved++;\n        } else if (vacation.status === \"pending\") {\n          vacationsByMonth[key].pending++;\n        } else if (vacation.status === \"rejected\") {\n          vacationsByMonth[key].rejected++;\n        }\n      });\n\n      setStats({\n        employees: {\n          total: totalEmployees,\n          active: activeEmployees,\n          onVacation: onVacationCount,\n          departments,\n        },\n        vacations: {\n          total: totalVacations,\n          pending: pendingVacations,\n          approved: approvedVacations,\n          rejected: rejectedVacations,\n          byType: {\n            paid: paidVacations,\n            unpaid: unpaidVacations,\n            sick: sickVacations,\n            other: otherVacations,\n          },\n          byMonth: vacationsByMonth,\n        },\n      });\n    }\n  }, [employees, vacations, employeesLoading, vacationsLoading]);\n\n  // Calculer les pourcentages pour les types de congés\n  const getVacationTypePercentage = (type) => {\n    if (stats.vacations.total === 0) return 0;\n    return Math.round(\n      (stats.vacations.byType[type] / stats.vacations.total) * 100\n    );\n  };\n\n  // Calculer le taux de présence\n  const getPresenceRate = () => {\n    if (stats.employees.total === 0) return 0;\n    return Math.round((stats.employees.active / stats.employees.total) * 100);\n  };\n\n  // Calculer le taux d'approbation des congés\n  const getApprovalRate = () => {\n    const processedVacations =\n      stats.vacations.approved + stats.vacations.rejected;\n    if (processedVacations === 0) return 0;\n    return Math.round((stats.vacations.approved / processedVacations) * 100);\n  };\n\n  return (\n    <StatsContainer>\n      <PageHeader>\n        <HeaderLeft>\n          <PageTitle>Statistiques</PageTitle>\n          <PageDescription>\n            Consultez les statistiques et les analyses de votre organisation\n          </PageDescription>\n        </HeaderLeft>\n        <RefreshButton\n          onClick={handleRefresh}\n          disabled={employeesLoading || vacationsLoading}\n        >\n          <FiRefreshCw size={16} />\n          Actualiser\n        </RefreshButton>\n      </PageHeader>\n\n      {employeesLoading || vacationsLoading ? (\n        <LoadingIndicator>\n          <FiRefreshCw size={24} />\n          <div>Chargement des statistiques...</div>\n        </LoadingIndicator>\n      ) : (\n        <>\n          <SectionTitle>\n            <FiBarChart2 size={18} color=\"#4F46E5\" />\n            Vue d'ensemble\n          </SectionTitle>\n\n          <VacationStatusGrid>\n            <StatusCard>\n              <StatusIcon color=\"#4F46E5\">\n                <FiUsers />\n              </StatusIcon>\n              <StatusValue>{stats.employees.total}</StatusValue>\n              <StatusLabel>Employés au total</StatusLabel>\n            </StatusCard>\n\n            <StatusCard>\n              <StatusIcon color=\"#F59E0B\">\n                <FiClock />\n              </StatusIcon>\n              <StatusValue>{stats.vacations.pending}</StatusValue>\n              <StatusLabel>Demandes en attente</StatusLabel>\n            </StatusCard>\n\n            <StatusCard>\n              <StatusIcon color=\"#10B981\">\n                <FiCheckCircle />\n              </StatusIcon>\n              <StatusValue>{stats.vacations.approved}</StatusValue>\n              <StatusLabel>Demandes approuvées</StatusLabel>\n            </StatusCard>\n\n            <StatusCard>\n              <StatusIcon color=\"#EF4444\">\n                <FiXCircle />\n              </StatusIcon>\n              <StatusValue>{stats.vacations.rejected}</StatusValue>\n              <StatusLabel>Demandes rejetées</StatusLabel>\n            </StatusCard>\n          </VacationStatusGrid>\n\n          <StatsGrid\n            initial=\"hidden\"\n            animate=\"visible\"\n            variants={staggerContainer}\n          >\n            <StatsCard variants={fadeInUp}>\n              <CardHeader>\n                <CardTitle>\n                  <FiUsers size={18} color=\"#4F46E5\" />\n                  Employés\n                </CardTitle>\n                <CardIcon color=\"#4F46E5\">\n                  <FiUsers />\n                </CardIcon>\n              </CardHeader>\n              <ChartContainer>\n                {employeesLoading ? (\n                  <LoadingIndicator>\n                    <FiRefreshCw size={24} />\n                    <div>Chargement...</div>\n                  </LoadingIndicator>\n                ) : (\n                  <ChartPlaceholder>\n                    <StatValue color=\"#4F46E5\">\n                      {stats.employees.total}\n                    </StatValue>\n                    <StatLabel>Employés au total</StatLabel>\n                  </ChartPlaceholder>\n                )}\n              </ChartContainer>\n              <StatsList>\n                <StatsItem>\n                  <StatsItemLabel>\n                    <StatusIndicator color=\"#10B981\" />\n                    Actifs\n                  </StatsItemLabel>\n                  <StatsItemValue>{stats.employees.active}</StatsItemValue>\n                </StatsItem>\n                <StatsItem>\n                  <StatsItemLabel>\n                    <StatusIndicator color=\"#EC4899\" />\n                    En congé\n                  </StatsItemLabel>\n                  <StatsItemValue>{stats.employees.onVacation}</StatsItemValue>\n                </StatsItem>\n                <StatsItem>\n                  <StatsItemLabel>\n                    <StatusIndicator color=\"#4F46E5\" />\n                    Taux de présence\n                  </StatsItemLabel>\n                  <StatsItemValue>{getPresenceRate()}%</StatsItemValue>\n                </StatsItem>\n              </StatsList>\n              <ProgressBar value={getPresenceRate()} color=\"#4F46E5\" />\n            </StatsCard>\n\n            <StatsCard variants={fadeInUp}>\n              <CardHeader>\n                <CardTitle>\n                  <FiSun size={18} color=\"#EC4899\" />\n                  Types de congés\n                </CardTitle>\n                <CardIcon color=\"#EC4899\">\n                  <FiSun />\n                </CardIcon>\n              </CardHeader>\n              <ChartContainer>\n                {vacationsLoading ? (\n                  <LoadingIndicator>\n                    <FiRefreshCw size={24} />\n                    <div>Chargement...</div>\n                  </LoadingIndicator>\n                ) : (\n                  <ChartPlaceholder>\n                    <StatValue color=\"#EC4899\">\n                      {stats.vacations.total}\n                    </StatValue>\n                    <StatLabel>Demandes de congés</StatLabel>\n                  </ChartPlaceholder>\n                )}\n              </ChartContainer>\n              <VacationTypesList>\n                <VacationTypeItem>\n                  <VacationTypeLabel>\n                    <StatusIndicator color=\"#4F46E5\" />\n                    Congés payés\n                  </VacationTypeLabel>\n                  <VacationTypeBar\n                    percentage={getVacationTypePercentage(\"paid\")}\n                    color=\"#4F46E5\"\n                  />\n                  <VacationTypeValue>\n                    {stats.vacations.byType.paid}\n                  </VacationTypeValue>\n                </VacationTypeItem>\n\n                <VacationTypeItem>\n                  <VacationTypeLabel>\n                    <StatusIndicator color=\"#F59E0B\" />\n                    Congés non payés\n                  </VacationTypeLabel>\n                  <VacationTypeBar\n                    percentage={getVacationTypePercentage(\"unpaid\")}\n                    color=\"#F59E0B\"\n                  />\n                  <VacationTypeValue>\n                    {stats.vacations.byType.unpaid}\n                  </VacationTypeValue>\n                </VacationTypeItem>\n\n                <VacationTypeItem>\n                  <VacationTypeLabel>\n                    <StatusIndicator color=\"#10B981\" />\n                    Congés maladie\n                  </VacationTypeLabel>\n                  <VacationTypeBar\n                    percentage={getVacationTypePercentage(\"sick\")}\n                    color=\"#10B981\"\n                  />\n                  <VacationTypeValue>\n                    {stats.vacations.byType.sick}\n                  </VacationTypeValue>\n                </VacationTypeItem>\n\n                <VacationTypeItem>\n                  <VacationTypeLabel>\n                    <StatusIndicator color=\"#8B5CF6\" />\n                    Autres congés\n                  </VacationTypeLabel>\n                  <VacationTypeBar\n                    percentage={getVacationTypePercentage(\"other\")}\n                    color=\"#8B5CF6\"\n                  />\n                  <VacationTypeValue>\n                    {stats.vacations.byType.other}\n                  </VacationTypeValue>\n                </VacationTypeItem>\n              </VacationTypesList>\n            </StatsCard>\n\n            <StatsCard variants={fadeInUp}>\n              <CardHeader>\n                <CardTitle>\n                  <FiPieChart size={18} color=\"#10B981\" />\n                  Statut des demandes\n                </CardTitle>\n                <CardIcon color=\"#10B981\">\n                  <FiPieChart />\n                </CardIcon>\n              </CardHeader>\n              <ChartContainer>\n                {vacationsLoading ? (\n                  <LoadingIndicator>\n                    <FiRefreshCw size={24} />\n                    <div>Chargement...</div>\n                  </LoadingIndicator>\n                ) : (\n                  <ChartPlaceholder>\n                    <StatValue color=\"#10B981\">{getApprovalRate()}%</StatValue>\n                    <StatLabel>Taux d'approbation</StatLabel>\n                  </ChartPlaceholder>\n                )}\n              </ChartContainer>\n              <StatsList>\n                <StatsItem>\n                  <StatsItemLabel>\n                    <StatusIndicator color=\"#F59E0B\" />\n                    En attente\n                  </StatsItemLabel>\n                  <StatsItemValue color=\"#F59E0B\">\n                    {stats.vacations.pending}\n                  </StatsItemValue>\n                </StatsItem>\n                <StatsItem>\n                  <StatsItemLabel>\n                    <StatusIndicator color=\"#10B981\" />\n                    Approuvées\n                  </StatsItemLabel>\n                  <StatsItemValue color=\"#10B981\">\n                    {stats.vacations.approved}\n                  </StatsItemValue>\n                </StatsItem>\n                <StatsItem>\n                  <StatsItemLabel>\n                    <StatusIndicator color=\"#EF4444\" />\n                    Rejetées\n                  </StatsItemLabel>\n                  <StatsItemValue color=\"#EF4444\">\n                    {stats.vacations.rejected}\n                  </StatsItemValue>\n                </StatsItem>\n              </StatsList>\n              <ProgressBar value={getApprovalRate()} color=\"#10B981\" />\n            </StatsCard>\n          </StatsGrid>\n        </>\n      )}\n    </StatsContainer>\n  );\n};\n\nexport default Stats;\n"],"names":["useVacations","vacations","setVacations","useState","loading","setLoading","error","setError","api","useApi","isComponentMountedRef","useRef","pollingIntervalRef","useEffect","current","clearInterval","retryApiCall","useCallback","async","apiCall","maxRetries","arguments","length","undefined","delay","lastError","retryCount","err","retryDelay","Math","pow","console","log","Promise","resolve","setTimeout","fetchVacations","forceRefresh","cachedData","localStorage","getItem","cachedTimestamp","Date","getTime","parseInt","parsedData","JSON","parse","e","loadVacations","data","get","API_ENDPOINTS","VACATIONS","Array","isArray","formattedData","map","vacation","startDate","start_date","endDate","end_date","duration","start","end","setHours","workableDays","currentDate","getDay","setDate","getDate","employeeName","employee_name","employeeId","employee_id","approvedAt","approved_at","approvedBy","approved_by","rejectedAt","rejected_at","rejectedBy","rejected_by","rejectionReason","rejection_reason","createdAt","created_at","updatedAt","updated_at","setItem","stringify","toString","message","timeoutId","clearTimeout","setInterval","createVacation","vacationData","errorMsg","toast","success","type","reason","status","includes","toISOString","split","token","response","post","prevVacations","_error$response","_error$response$data","_error$response2","_error$response2$data","errorMessage","result","updateVacation","id","put","_response$data","ok","Error","prev","deleteVacation","delete","_response$data2","filter","updateVacationStatus","comment","_response$data3","getVacationsByStatus","refreshVacations","approveVacation","rejectVacation","StatsContainer","styled","div","PageHeader","_ref","theme","breakpoints","md","HeaderLeft","PageTitle","h1","_ref2","colors","text","primary","PageDescription","p","_ref3","secondary","RefreshButton","button","_ref4","borderRadius","medium","_ref5","primaryLight","_ref6","_ref7","StatsGrid","motion","StatsCard","_ref8","surface","_ref9","_ref10","shadows","_ref11","large","CardHeader","CardTitle","h2","_ref12","CardIcon","_ref13","color","_ref14","ChartContainer","_ref15","background","_ref16","small","ChartPlaceholder","_ref17","StatValue","_ref18","StatLabel","_ref19","ProgressBar","_ref20","border","_ref21","value","_ref22","StatsList","ul","StatsItem","li","_ref23","StatsItemLabel","_ref24","StatsItemValue","_ref25","StatusIndicator","span","_ref26","VacationTypesList","VacationTypeItem","VacationTypeLabel","_ref27","VacationTypeBar","_ref28","_ref29","percentage","_ref30","VacationTypeValue","_ref31","LoadingIndicator","_ref32","SectionTitle","_ref33","VacationStatusGrid","StatusCard","_ref34","_ref35","_ref36","_ref37","StatusIcon","_ref38","_ref39","StatusValue","_ref40","StatusLabel","_ref41","fadeInUp","hidden","opacity","y","visible","transition","staggerContainer","staggerChildren","Stats","employees","employeesLoading","fetchEmployees","useEmployees","vacationsLoading","stats","setStats","total","active","onVacation","departments","pending","approved","rejected","byType","paid","unpaid","sick","other","byMonth","totalEmployees","today","employeesOnVacation","v","onVacationCount","Set","activeEmployees","totalVacations","pendingVacations","approvedVacations","rejectedVacations","paidVacations","unpaidVacations","sickVacations","otherVacations","vacationsByMonth","forEach","month","getMonth","year","getFullYear","key","count","getVacationTypePercentage","round","getPresenceRate","getApprovalRate","processedVacations","_jsxs","children","_jsx","onClick","handleRefresh","disabled","FiRefreshCw","size","_Fragment","FiBarChart2","FiUsers","FiClock","FiCheckCircle","FiXCircle","initial","animate","variants","FiSun","FiPieChart"],"sourceRoot":""}