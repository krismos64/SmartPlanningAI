{"version":3,"file":"static/js/760.e8852f7c.chunk.js","mappings":"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","sources":["hooks/useEmployees.js","hooks/useApi.js","components/dashboard/DashboardStats.js","hooks/useActivities.js","components/dashboard/RecentActivities.js","components/ui/SearchBar.js","pages/Dashboard.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { API_ENDPOINTS } from \"../config/api\";\nimport useApi from \"./useApi\";\n\n/**\n * Hook personnalisé pour gérer les employés\n */\nconst useEmployees = () => {\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const api = useApi();\n\n  /**\n   * Récupère tous les employés\n   */\n  const fetchEmployees = useCallback(async () => {\n    if (!loading) setLoading(true);\n    try {\n      const response = await api.get(API_ENDPOINTS.EMPLOYEES.BASE);\n\n      if (response.ok) {\n        // S'assurer que les données sont un tableau\n        const employeesData = Array.isArray(response.data) ? response.data : [];\n        setEmployees(employeesData);\n        setError(null);\n      } else {\n        throw new Error(\n          response.data?.message || \"Erreur lors du chargement des employés\"\n        );\n      }\n    } catch (err) {\n      console.error(\"Erreur lors du chargement des employés:\", err);\n      setError(\"Erreur lors du chargement des employés\");\n      toast.error(\"Erreur lors du chargement des employés\");\n      // En cas d'erreur, s'assurer que employees reste un tableau vide\n      setEmployees([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [api, loading]);\n\n  /**\n   * Récupère un employé par son ID\n   */\n  const fetchEmployeeById = useCallback(\n    async (id) => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const response = await api.get(API_ENDPOINTS.EMPLOYEES.BY_ID(id));\n\n        if (response.ok) {\n          return response.data;\n        } else {\n          throw new Error(\n            response.data?.message ||\n              \"Erreur lors de la récupération de l'employé\"\n          );\n        }\n      } catch (err) {\n        console.error(\n          `Erreur lors de la récupération de l'employé #${id}:`,\n          err\n        );\n        setError(err.message || \"Erreur lors de la récupération de l'employé\");\n        toast.error(\"Erreur lors de la récupération de l'employé\");\n        return null;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [api]\n  );\n\n  /**\n   * Crée un nouvel employé\n   */\n  const createEmployee = useCallback(\n    async (employeeData) => {\n      setLoading(true);\n      try {\n        const response = await api.post(\n          API_ENDPOINTS.EMPLOYEES.BASE,\n          employeeData\n        );\n\n        if (response && response.id) {\n          // Mettre à jour la liste des employés\n          setEmployees((prevEmployees) => [...prevEmployees, response]);\n          setError(null);\n          return response;\n        } else {\n          // Si la réponse est un objet mais ne contient pas d'employé, vérifier s'il y a un message d'erreur\n          if (response && typeof response === \"object\") {\n            if (response.message && response.message.includes(\"erreur\")) {\n              return { success: false, error: response.message };\n            }\n\n            // Si la réponse est l'employé lui-même\n            if (response.id) {\n              setEmployees((prev) => [...prev, response]);\n              return { success: true, employee: response };\n            }\n          }\n\n          // Fallback pour les anciennes API qui renvoient directement l'employé\n          setEmployees((prev) => [...prev, response]);\n          return { success: true, employee: response };\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la création de l'employé:\", err);\n\n        // Extraire un message d'erreur plus précis si possible\n        let errorMessage = \"Erreur lors de la création de l'employé\";\n\n        if (err.response && err.response.data) {\n          errorMessage = err.response.data.message || errorMessage;\n        } else if (err.message) {\n          errorMessage = err.message;\n        }\n\n        return { success: false, error: errorMessage };\n      } finally {\n        setLoading(false);\n      }\n    },\n    [api]\n  );\n\n  /**\n   * Met à jour un employé existant\n   */\n  const updateEmployee = useCallback(\n    async (id, employeeData) => {\n      setLoading(true);\n      try {\n        const response = await api.put(\n          `${API_ENDPOINTS.EMPLOYEES.BASE}/${id}`,\n          employeeData\n        );\n\n        if (response) {\n          // Mettre à jour la liste des employés\n          setEmployees((prevEmployees) =>\n            prevEmployees.map((emp) =>\n              emp.id === id ? { ...emp, ...response.data } : emp\n            )\n          );\n          setError(null);\n          return response.data;\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la mise à jour de l'employé:\", err);\n        return { success: false, error: err.message || \"Erreur inconnue\" };\n      } finally {\n        setLoading(false);\n      }\n    },\n    [api]\n  );\n\n  /**\n   * Supprime un employé\n   */\n  const deleteEmployee = useCallback(\n    async (id) => {\n      setLoading(true);\n      try {\n        const response = await api.delete(\n          `${API_ENDPOINTS.EMPLOYEES.BASE}/${id}`\n        );\n\n        if (response) {\n          // Mettre à jour la liste des employés\n          setEmployees((prevEmployees) =>\n            prevEmployees.filter((emp) => emp.id !== id)\n          );\n          return { success: true };\n        } else {\n          const errorMessage =\n            response?.message || \"Erreur lors de la suppression de l'employé\";\n          console.error(\"Erreur API:\", errorMessage);\n          return { success: false, error: errorMessage };\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la suppression de l'employé:\", err);\n        return { success: false, error: err.message || \"Erreur inconnue\" };\n      } finally {\n        setLoading(false);\n      }\n    },\n    [api]\n  );\n\n  /**\n   * Filtre les employés par statut\n   * @param {string|null} status - Le statut à filtrer (active, inactive, vacation, sick) ou null pour tous\n   * @returns {Array} - Les employés filtrés\n   */\n  const getEmployeesByStatus = useCallback(\n    (status) => {\n      if (!status || status === \"all\") return employees;\n      return employees.filter((employee) => employee.status === status);\n    },\n    [employees]\n  );\n\n  /**\n   * Récupère le solde d'heures d'un employé\n   */\n  const fetchEmployeeHourBalance = useCallback(\n    async (id) => {\n      try {\n        // Ajouter un délai aléatoire pour éviter les requêtes simultanées\n        const randomDelay = Math.floor(Math.random() * 200);\n        await new Promise((resolve) => setTimeout(resolve, randomDelay));\n\n        const response = await api.get(`/api/hour-balance/${id}`);\n\n        // Vérifier si la réponse contient hour_balance ou balance\n        if (\n          response &&\n          (response.hour_balance !== undefined ||\n            response.balance !== undefined)\n        ) {\n          const balance =\n            response.hour_balance !== undefined\n              ? response.hour_balance\n              : response.balance;\n\n          // Mettre à jour l'état local des employés avec le nouveau solde d'heures\n          setEmployees((prev) =>\n            prev.map((emp) =>\n              emp.id === id ? { ...emp, hour_balance: balance } : emp\n            )\n          );\n          return balance;\n        } else {\n          console.warn(\n            `Avertissement: Format de réponse inattendu pour l'employé #${id}`\n          );\n          return 0; // Retourner 0 par défaut\n        }\n      } catch (err) {\n        // Éviter de logger l'erreur complète pour ne pas surcharger la console\n        console.warn(\n          `Avertissement: Impossible de récupérer le solde d'heures pour l'employé #${id}`\n        );\n\n        // Ne pas mettre à jour l'état pour éviter des re-rendus en cascade\n        return 0; // Retourner 0 par défaut en cas d'erreur\n      }\n    },\n    [api, setEmployees]\n  );\n\n  /**\n   * Récupère le solde d'heures pour tous les employés\n   * Utilise une approche séquentielle pour éviter de surcharger le navigateur\n   */\n  const fetchAllEmployeesHourBalances = useCallback(async () => {\n    // Variable pour suivre si la fonction est déjà en cours d'exécution\n    if (window._isFetchingHourBalances) {\n      return;\n    }\n\n    try {\n      // Marquer comme en cours d'exécution\n      window._isFetchingHourBalances = true;\n\n      // Traiter les employés un par un au lieu de par lots\n      for (const employee of employees) {\n        try {\n          await fetchEmployeeHourBalance(employee.id);\n          // Attendre 300ms entre chaque requête\n          await new Promise((resolve) => setTimeout(resolve, 300));\n        } catch (error) {\n          // Ignorer les erreurs individuelles et continuer avec le prochain employé\n          console.warn(\n            `Erreur pour l'employé ${employee.id}, continuons avec le suivant`\n          );\n        }\n      }\n    } catch (err) {\n      console.error(\"Erreur lors de la récupération des soldes d'heures:\", err);\n    } finally {\n      // Marquer comme terminé\n      window._isFetchingHourBalances = false;\n    }\n  }, [employees, fetchEmployeeHourBalance]);\n\n  // Charger les employés au montage du composant\n  useEffect(() => {\n    let mounted = true;\n    let retryCount = 0;\n    const maxRetries = 3;\n\n    const loadEmployees = async () => {\n      if (retryCount >= maxRetries) {\n        if (mounted) {\n          setError(\n            \"Erreur lors du chargement des employés après plusieurs tentatives\"\n          );\n          setLoading(false);\n        }\n        return;\n      }\n\n      try {\n        const token = localStorage.getItem(\"token\");\n\n        if (!token) {\n          console.error(\"Token d'authentification manquant\");\n          setError(\"Vous devez être connecté pour accéder à ces données\");\n          setLoading(false);\n          return;\n        }\n\n        const data = await api.get(API_ENDPOINTS.EMPLOYEES.BASE);\n\n        if (mounted) {\n          if (Array.isArray(data)) {\n            setEmployees(data);\n            setError(null);\n          } else {\n            console.error(\"Format de données invalide:\", data);\n            setError(\"Format de données invalide\");\n          }\n          setLoading(false);\n        }\n      } catch (err) {\n        if (mounted) {\n          console.error(\"Erreur lors du chargement des employés:\", err);\n          setError(err.message || \"Erreur lors du chargement des employés\");\n\n          // Réessayer avec un délai exponentiel\n          retryCount++;\n          setTimeout(loadEmployees, 1000 * Math.pow(2, retryCount));\n        }\n      }\n    };\n\n    loadEmployees();\n\n    return () => {\n      mounted = false;\n    };\n  }, [api]);\n\n  // Charger les soldes d'heures après avoir chargé les employés\n  // Utiliser une référence pour suivre si l'effet a déjà été exécuté\n  const hourBalancesLoaded = useRef(false);\n\n  useEffect(() => {\n    // Ne charger les soldes d'heures que si les employés sont chargés et que l'effet n'a pas encore été exécuté\n    if (employees.length > 0 && !hourBalancesLoaded.current) {\n      // Marquer l'effet comme exécuté\n      hourBalancesLoaded.current = true;\n\n      // Ajouter un délai avant de charger les soldes d'heures\n      // pour s'assurer que le composant est complètement monté\n      const timer = setTimeout(() => {\n        fetchAllEmployeesHourBalances();\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [employees.length, fetchAllEmployeesHourBalances]);\n\n  return {\n    employees,\n    loading,\n    error,\n    fetchEmployees,\n    fetchEmployeeById,\n    createEmployee,\n    updateEmployee,\n    deleteEmployee,\n    getEmployeesByStatus,\n    fetchEmployeeHourBalance,\n    fetchAllEmployeesHourBalances,\n  };\n};\n\nexport default useEmployees;\n","import { useCallback, useMemo } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { API_URL } from \"../config/api\";\n\n/**\n * Hook personnalisé pour effectuer des appels API\n * @returns {Object} Méthodes pour effectuer des requêtes API\n */\nconst useApi = () => {\n  const handleResponse = useCallback(async (response) => {\n    try {\n      // Récupérer les en-têtes pour le débogage\n      const headers = {};\n      response.headers.forEach((value, key) => {\n        headers[key] = value;\n      });\n\n      console.log(\"Réponse du serveur:\", {\n        url: response.url,\n        status: response.status,\n        statusText: response.statusText,\n        headers: headers,\n      });\n\n      // Vérifier si la réponse est au format JSON\n      const contentType = response.headers.get(\"content-type\");\n      const isJson = contentType && contentType.includes(\"application/json\");\n\n      // Récupérer le corps de la réponse\n      let data;\n      if (isJson) {\n        data = await response.json();\n        console.log(\"Données JSON reçues:\", data);\n      } else {\n        const text = await response.text();\n        console.warn(\"Réponse non-JSON reçue:\", text);\n        try {\n          // Essayer de parser le texte comme JSON\n          data = JSON.parse(text);\n          console.log(\"Texte parsé comme JSON:\", data);\n        } catch (e) {\n          data = { message: text };\n        }\n      }\n\n      // Gérer les différents codes de statut\n      if (response.ok) {\n        return data;\n      } else {\n        // Gérer les erreurs d'authentification (401, 403)\n        if (response.status === 401 || response.status === 403) {\n          console.error(\"Erreur d'authentification:\", data);\n          toast.error(\n            \"Session expirée ou accès non autorisé. Veuillez vous reconnecter.\"\n          );\n\n          // Supprimer le token et l'utilisateur du localStorage\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"user\");\n\n          // Rediriger vers la page de connexion après un délai\n          setTimeout(() => {\n            window.location.href = \"/login\";\n          }, 2000);\n        }\n\n        // Gérer les erreurs serveur (500)\n        if (response.status === 500) {\n          console.error(\"Erreur serveur:\", data);\n          console.error(\"URL:\", response.url);\n          console.error(\"Méthode:\", response.method);\n\n          // Journaliser plus de détails pour le débogage\n          if (data.error) {\n            console.error(\"Détails de l'erreur:\", data.error);\n          }\n          if (data.stack) {\n            console.error(\"Stack trace:\", data.stack);\n          }\n        }\n\n        // Construire un message d'erreur détaillé\n        const errorMessage =\n          data.message ||\n          data.error ||\n          response.statusText ||\n          \"Erreur inconnue\";\n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.response = { status: response.status, data };\n\n        throw error;\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du traitement de la réponse:\", error);\n      throw error;\n    }\n  }, []);\n\n  const api = useMemo(() => {\n    const get = async (endpoint) => {\n      try {\n        console.log(`[API] GET ${endpoint}`);\n        const token = localStorage.getItem(\"token\");\n\n        if (!token) {\n          console.error(\n            \"Token d'authentification manquant pour la requête GET\"\n          );\n          toast.error(\"Vous devez être connecté pour accéder à ces données\");\n          setTimeout(() => {\n            window.location.href = \"/login\";\n          }, 2000);\n          return { ok: false, status: 401, data: [] };\n        }\n\n        // Ajouter un timeout pour éviter que les requêtes ne restent bloquées\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 secondes de timeout\n\n        try {\n          const response = await fetch(`${API_URL}${endpoint}`, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            credentials: \"include\",\n            signal: controller.signal,\n          });\n\n          // Annuler le timeout\n          clearTimeout(timeoutId);\n\n          return await handleResponse(response);\n        } catch (fetchError) {\n          // Gérer spécifiquement les erreurs d'abort\n          if (fetchError.name === \"AbortError\") {\n            console.warn(`La requête ${endpoint} a été interrompue (timeout)`);\n            throw new Error(`Timeout de la requête après 5 secondes`);\n          }\n          throw fetchError;\n        }\n      } catch (error) {\n        console.error(`[API] GET ${endpoint} Error:`, error);\n\n        // Si l'erreur est liée à l'authentification, rediriger vers la page de connexion\n        if (error.status === 401 || error.status === 403) {\n          toast.error(\"Session expirée. Veuillez vous reconnecter.\");\n          setTimeout(() => {\n            window.location.href = \"/login\";\n          }, 2000);\n        } else {\n          // Ne pas afficher de toast pour les erreurs de timeout ou de réseau\n          // pour éviter de surcharger l'interface\n          if (\n            !error.message.includes(\"Timeout\") &&\n            !error.message.includes(\"fetch\")\n          ) {\n            toast.error(\n              error.message || \"Erreur lors de la récupération des données\"\n            );\n          }\n        }\n\n        throw error;\n      }\n    };\n\n    // Fonction utilitaire pour convertir camelCase en snake_case\n    const camelToSnakeCase = (str) => {\n      return str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n    };\n\n    const post = async (endpoint, data) => {\n      try {\n        // Vérifier que les données sont valides\n        if (!data || typeof data !== \"object\") {\n          console.error(\"Données invalides pour la requête POST:\", data);\n          throw new Error(\"Données invalides pour la requête POST\");\n        }\n\n        // Convertir les données en snake_case pour le backend\n        const snakeCaseData = {};\n        for (const key in data) {\n          snakeCaseData[camelToSnakeCase(key)] = data[key];\n        }\n\n        // Récupérer le token d'authentification\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          console.error(\"Token d'authentification manquant\");\n          throw new Error(\n            \"Vous devez être connecté pour effectuer cette action\"\n          );\n        }\n\n        // Configurer les en-têtes de la requête\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        };\n\n        // Journaliser les détails de la requête (sans le token complet)\n        console.log(\"Détails de la requête POST:\", {\n          endpoint,\n          dataSize: JSON.stringify(snakeCaseData).length,\n          headers: { ...headers, Authorization: \"Bearer [MASQUÉ]\" },\n        });\n\n        // Effectuer la requête avec un timeout\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 secondes de timeout\n\n        const response = await fetch(`${API_URL}${endpoint}`, {\n          method: \"POST\",\n          headers,\n          body: JSON.stringify(snakeCaseData),\n          signal: controller.signal,\n        });\n\n        // Annuler le timeout\n        clearTimeout(timeoutId);\n\n        // Traiter la réponse\n        return handleResponse(response);\n      } catch (error) {\n        // Gérer les erreurs spécifiques\n        if (error.name === \"AbortError\") {\n          console.error(\"La requête a été interrompue (timeout):\", error);\n          throw new Error(\n            \"La requête a pris trop de temps, veuillez réessayer\"\n          );\n        }\n\n        if (\n          error.message.includes(\"NetworkError\") ||\n          error.message.includes(\"Failed to fetch\")\n        ) {\n          console.error(\"Erreur réseau lors de la requête POST:\", error);\n          throw new Error(\n            \"Problème de connexion au serveur, veuillez vérifier votre connexion internet\"\n          );\n        }\n\n        // Journaliser et propager l'erreur\n        console.error(\"Erreur lors de la requête POST:\", error);\n        throw error;\n      }\n    };\n\n    const put = async (endpoint, data) => {\n      try {\n        console.log(`[API] PUT ${endpoint}`, data);\n        const token = localStorage.getItem(\"token\");\n\n        // S'assurer que les données sont sérialisables\n        const cleanData = JSON.parse(JSON.stringify(data));\n\n        // Convertir les données en snake_case pour le backend\n        const snakeCaseData = {};\n        for (const key in cleanData) {\n          snakeCaseData[camelToSnakeCase(key)] = cleanData[key];\n        }\n\n        const response = await fetch(`${API_URL}${endpoint}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token ? `Bearer ${token}` : \"\",\n          },\n          body: JSON.stringify(snakeCaseData),\n        });\n\n        const result = await handleResponse(response);\n        console.log(`[API] PUT ${endpoint} Response:`, result);\n        return result;\n      } catch (error) {\n        console.error(`[API] PUT ${endpoint} Error:`, error);\n        return {\n          ok: false,\n          status: 0,\n          data: { message: error.message || \"Erreur lors de la requête PUT\" },\n          headers: new Headers(),\n        };\n      }\n    };\n\n    const del = async (endpoint) => {\n      try {\n        console.log(`[API] DELETE ${endpoint}`);\n        const token = localStorage.getItem(\"token\");\n        const response = await fetch(`${API_URL}${endpoint}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token ? `Bearer ${token}` : \"\",\n          },\n          credentials: \"include\",\n        });\n\n        const result = await handleResponse(response);\n        console.log(`[API] DELETE ${endpoint} Response:`, result);\n        return result;\n      } catch (error) {\n        console.error(`[API] DELETE ${endpoint} Error:`, error);\n        return {\n          ok: false,\n          status: 0,\n          data: {\n            message: error.message || \"Erreur lors de la requête DELETE\",\n          },\n          headers: new Headers(),\n        };\n      }\n    };\n\n    return {\n      get,\n      post,\n      put,\n      delete: del,\n    };\n  }, [handleResponse]);\n\n  return api;\n};\n\nexport default useApi;\n","import { FiUsers } from \"react-icons/fi\";\nimport styled from \"styled-components\";\nimport useEmployees from \"../../hooks/useEmployees\";\n\n// Composants stylisés\nconst StatsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst StatCard = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StatHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst StatTitle = styled.h3`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0;\n`;\n\nconst StatIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.5rem;\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst DashboardStats = () => {\n  const { employees, loading: employeesLoading } = useEmployees();\n\n  return (\n    <StatsContainer>\n      {employeesLoading ? (\n        <LoadingIndicator>Chargement des statistiques...</LoadingIndicator>\n      ) : (\n        <>\n          <StatCard>\n            <StatHeader>\n              <StatTitle>Total employés</StatTitle>\n              <StatIcon color=\"#4F46E5\">\n                <FiUsers />\n              </StatIcon>\n            </StatHeader>\n            <StatValue>{employees?.length || 0}</StatValue>\n          </StatCard>\n        </>\n      )}\n    </StatsContainer>\n  );\n};\n\nexport default DashboardStats;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { FiCheck, FiEdit, FiPlus, FiTrash2, FiX } from \"react-icons/fi\";\nimport { API_ENDPOINTS } from \"../config/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useApi from \"./useApi\";\nimport useWebSocket from \"./useWebSocket\";\n\n/**\n * Hook personnalisé pour gérer les activités\n */\nconst useActivities = () => {\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const api = useApi();\n  const { user } = useAuth();\n\n  // Utiliser le hook WebSocket pour recevoir les mises à jour en temps réel\n  const {\n    activities: wsActivities,\n    socket,\n    requestActivitiesUpdate,\n    fallbackMode,\n  } = useWebSocket();\n\n  /**\n   * Récupère toutes les activités\n   * @param {boolean} refresh - Indique si on doit forcer le rafraîchissement des données\n   */\n  const fetchActivities = useCallback(\n    async (refresh = false) => {\n      try {\n        setLoading(true);\n        const response = await api.get(API_ENDPOINTS.ACTIVITIES.BASE);\n\n        // Vérifier si la réponse est un tableau ou contient des données valides\n        if (response && (Array.isArray(response) || response.data)) {\n          // S'assurer que les données sont un tableau\n          const activitiesData = Array.isArray(response)\n            ? response\n            : Array.isArray(response.data)\n            ? response.data\n            : [];\n\n          setActivities(activitiesData);\n          setError(null);\n        } else {\n          throw new Error(\n            \"Erreur lors du chargement des activités: format de réponse invalide\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors du chargement des activités:\", err);\n        setError(\"Erreur lors du chargement des activités\");\n        toast.error(\"Erreur lors du chargement des activités\");\n        // En cas d'erreur, s'assurer que activities reste un tableau vide\n        setActivities([]);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [api]\n  );\n\n  const createActivity = useCallback(\n    async (activityData) => {\n      try {\n        const response = await api.post(\n          API_ENDPOINTS.ACTIVITIES.BASE,\n          activityData\n        );\n\n        if (response.ok) {\n          setActivities((prev) => [...prev, response.data]);\n          toast.success(\"Activité créée avec succès\");\n          return { success: true, activity: response.data };\n        } else {\n          throw new Error(\n            response.data?.message || \"Erreur lors de la création de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la création de l'activité:\", err);\n        toast.error(\"Erreur lors de la création de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  const updateActivity = useCallback(\n    async (id, activityData) => {\n      try {\n        const response = await api.put(\n          `${API_ENDPOINTS.ACTIVITIES.BASE}/${id}`,\n          activityData\n        );\n\n        if (response.ok) {\n          setActivities((prev) =>\n            prev.map((activity) =>\n              activity.id === id ? { ...activity, ...response.data } : activity\n            )\n          );\n          toast.success(\"Activité mise à jour avec succès\");\n          return { success: true, activity: response.data };\n        } else {\n          throw new Error(\n            response.data?.message ||\n              \"Erreur lors de la mise à jour de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la mise à jour de l'activité:\", err);\n        toast.error(\"Erreur lors de la mise à jour de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  const deleteActivity = useCallback(\n    async (id) => {\n      try {\n        const response = await api.delete(\n          `${API_ENDPOINTS.ACTIVITIES.BASE}/${id}`\n        );\n\n        if (response.ok) {\n          setActivities((prev) =>\n            prev.filter((activity) => activity.id !== id)\n          );\n          toast.success(\"Activité supprimée avec succès\");\n          return { success: true };\n        } else {\n          throw new Error(\n            response.data?.message ||\n              \"Erreur lors de la suppression de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la suppression de l'activité:\", err);\n        toast.error(\"Erreur lors de la suppression de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  /**\n   * Formate la description d'une activité\n   * @param {Object} activity - L'activité à formater\n   * @returns {string} - La description formatée\n   */\n  const formatActivityDescription = useCallback((activity) => {\n    if (!activity) return \"\";\n\n    const { type, entity_type, entity_id, user_id, details, user } = activity;\n\n    // Obtenir le nom de l'utilisateur qui a effectué l'action\n    const userName = user && user.name ? user.name : \"Un utilisateur\";\n\n    // Pour les activités de type \"update\" sur les employés, utiliser un format spécifique\n    if (type === \"update\" && entity_type === \"employee\" && details) {\n      if (details.employeeName) {\n        return `${userName} a modifié l'employé ${details.employeeName}`;\n      }\n    }\n\n    // Formater le type d'entité\n    const entityName =\n      {\n        employee: \"un employé\",\n        schedule: \"un planning\",\n        vacation: \"une demande de congé\",\n        shift: \"un horaire\",\n        user: \"un utilisateur\",\n      }[entity_type] || entity_type;\n\n    // Formater le type d'action\n    const actionType =\n      {\n        create: \"a créé\",\n        update: \"a modifié\",\n        delete: \"a supprimé\",\n        approve: \"a approuvé\",\n        reject: \"a rejeté\",\n      }[type] || type;\n\n    // Construire la description\n    let description = `${userName} ${actionType} ${entityName}`;\n\n    // Ajouter des détails si disponibles\n    if (details) {\n      if (typeof details === \"string\") {\n        description += ` : ${details}`;\n      } else if (typeof details === \"object\") {\n        // Ne pas ajouter les détails sous forme d'objet pour éviter [object Object]\n        if (details.employeeName && entity_type === \"employee\") {\n          description += ` : ${details.employeeName}`;\n        }\n      }\n    }\n\n    return description;\n  }, []);\n\n  /**\n   * Formate la date d'une activité\n   * @param {string} timestamp - Le timestamp à formater\n   * @returns {string} - La date formatée\n   */\n  const formatActivityDate = useCallback((timestamp) => {\n    if (!timestamp) return \"\";\n\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffSec = Math.floor(diffMs / 1000);\n    const diffMin = Math.floor(diffSec / 60);\n    const diffHour = Math.floor(diffMin / 60);\n    const diffDay = Math.floor(diffHour / 24);\n\n    // Formater la date en fonction de son ancienneté\n    if (diffSec < 60) {\n      return \"à l'instant\";\n    } else if (diffMin < 60) {\n      return `il y a ${diffMin} minute${diffMin > 1 ? \"s\" : \"\"}`;\n    } else if (diffHour < 24) {\n      return `il y a ${diffHour} heure${diffHour > 1 ? \"s\" : \"\"}`;\n    } else if (diffDay < 7) {\n      return `il y a ${diffDay} jour${diffDay > 1 ? \"s\" : \"\"}`;\n    } else {\n      return date.toLocaleDateString(\"fr-FR\", {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n      });\n    }\n  }, []);\n\n  /**\n   * Obtient l'icône en fonction du type d'activité\n   * @param {string} type - Le type d'activité\n   * @returns {JSX.Element} - L'icône correspondante\n   */\n  const getActivityIcon = useCallback((type) => {\n    switch (type) {\n      case \"create\":\n        return <FiPlus />;\n      case \"update\":\n        return <FiEdit />;\n      case \"delete\":\n        return <FiTrash2 />;\n      case \"approve\":\n        return <FiCheck />;\n      case \"reject\":\n        return <FiX />;\n      default:\n        return null;\n    }\n  }, []);\n\n  // Mettre à jour les activités lorsque de nouvelles activités sont reçues via WebSocket\n  useEffect(() => {\n    if (\n      wsActivities &&\n      Array.isArray(wsActivities) &&\n      wsActivities.length > 0\n    ) {\n      console.log(\"Nouvelles activités reçues via WebSocket:\", wsActivities);\n\n      setActivities((prevActivities) => {\n        // S'assurer que prevActivities est un tableau\n        const prevActivitiesArray = Array.isArray(prevActivities)\n          ? prevActivities\n          : [];\n\n        // Créer un nouvel ensemble d'activités en combinant les anciennes et les nouvelles\n        const newActivitiesMap = new Map();\n\n        // Ajouter d'abord les nouvelles activités\n        wsActivities.forEach((activity) => {\n          newActivitiesMap.set(activity.id, activity);\n        });\n\n        // Ajouter les anciennes activités qui ne sont pas dans les nouvelles\n        prevActivitiesArray.forEach((activity) => {\n          if (!newActivitiesMap.has(activity.id)) {\n            newActivitiesMap.set(activity.id, activity);\n          }\n        });\n\n        // Convertir la Map en tableau et trier par date (plus récent en premier)\n        return Array.from(newActivitiesMap.values()).sort(\n          (a, b) => new Date(b.timestamp) - new Date(a.timestamp)\n        );\n      });\n\n      // Indiquer que le chargement est terminé\n      setLoading(false);\n    }\n  }, [wsActivities]);\n\n  // Charger les activités au montage du composant\n  useEffect(() => {\n    fetchActivities(); // Forcer le rafraîchissement initial\n\n    // Mettre à jour les activités toutes les 2 minutes\n    const interval = setInterval(() => {\n      fetchActivities(); // Forcer le rafraîchissement\n    }, 2 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, [fetchActivities]);\n\n  // Écouter les changements de connexion WebSocket\n  useEffect(() => {\n    if (socket && !fallbackMode) {\n      console.log(\"WebSocket connecté, on va rafraîchir les activités\");\n      requestActivitiesUpdate();\n    } else if (fallbackMode) {\n      console.log(\"Mode de secours WebSocket actif, utilisation de l'API REST\");\n      fetchActivities();\n    }\n  }, [socket, requestActivitiesUpdate, fallbackMode, fetchActivities]);\n\n  // Écouter les changements de mode de secours\n  useEffect(() => {\n    if (fallbackMode) {\n      console.log(\n        \"Passage en mode de secours, récupération des activités via API REST\"\n      );\n      fetchActivities();\n    }\n  }, [fallbackMode, fetchActivities]);\n\n  return {\n    activities,\n    loading,\n    error,\n    fetchActivities,\n    createActivity,\n    updateActivity,\n    deleteActivity,\n    getActivityIcon,\n    formatActivityDescription,\n    formatActivityDate,\n  };\n};\n\nexport default useActivities;\n","import { format } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { motion } from \"framer-motion\";\nimport {\n  FiCalendar,\n  FiCheck,\n  FiClock,\n  FiEdit,\n  FiInfo,\n  FiPlus,\n  FiRefreshCw,\n  FiTrash2,\n  FiX,\n} from \"react-icons/fi\";\nimport styled, { keyframes } from \"styled-components\";\nimport useActivities from \"../../hooks/useActivities\";\n\n// Animations\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0 0 0 0 rgba(79, 70, 229, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(79, 70, 229, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(79, 70, 229, 0);\n  }\n`;\n\n// Composants stylisés\nconst ActivitiesContainer = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  margin-bottom: 1.5rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.shadows.large};\n  }\n`;\n\nconst ActivitiesHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  padding-bottom: 0.75rem;\n`;\n\nconst ActivitiesTitle = styled.h3`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n\n  svg {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst RefreshButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: ${({ theme }) => theme.colors.primaryLight};\n  border: none;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  font-size: 0.875rem;\n  padding: 0.5rem 0.75rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.primary}22;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  svg {\n    transition: transform 0.3s ease;\n  }\n\n  &:hover svg {\n    transform: rotate(180deg);\n  }\n`;\n\nconst ActivitiesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst ActivityItem = styled(motion.div)`\n  display: flex;\n  align-items: flex-start;\n  padding: 0.75rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  transition: all 0.3s ease;\n  border-left: 3px solid ${({ color }) => color};\n  background-color: ${({ theme, color }) => `${color}08`};\n\n  &:hover {\n    background-color: ${({ theme, color }) => `${color}15`};\n    transform: translateX(5px);\n  }\n`;\n\nconst ActivityIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  margin-right: 1rem;\n  flex-shrink: 0;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: scale(1.1);\n    animation: ${pulse} 1.5s infinite;\n  }\n`;\n\nconst ActivityContent = styled.div`\n  flex: 1;\n`;\n\nconst ActivityDescription = styled.div`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  line-height: 1.4;\n`;\n\nconst ActivityMeta = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  font-size: 0.75rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst ActivityTime = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n`;\n\nconst ActivityDate = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n\n  svg {\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.error};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst ViewAllButton = styled.button`\n  display: block;\n  width: 100%;\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.primary};\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  padding: 0.75rem;\n  margin-top: 1.5rem;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-weight: 500;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary};\n    color: white;\n  }\n`;\n\nconst Badge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ color }) => color};\n  color: white;\n  border-radius: 12px;\n  padding: 0.25rem 0.5rem;\n  font-size: 0.7rem;\n  font-weight: 500;\n  margin-left: 0.5rem;\n`;\n\n// Fonction pour obtenir la couleur en fonction du type d'activité\nconst getActivityColor = (type) => {\n  switch (type) {\n    case \"create\":\n      return \"#10B981\"; // vert\n    case \"update\":\n      return \"#F59E0B\"; // orange\n    case \"delete\":\n      return \"#EF4444\"; // rouge\n    case \"approve\":\n      return \"#3B82F6\"; // bleu\n    case \"reject\":\n      return \"#EC4899\"; // rose\n    case \"system\":\n      return \"#8B5CF6\"; // violet\n    default:\n      return \"#4F46E5\"; // indigo (par défaut)\n  }\n};\n\n// Fonction pour obtenir l'icône en fonction du type d'activité\nconst getActivityIcon = (type) => {\n  switch (type) {\n    case \"create\":\n      return <FiPlus />;\n    case \"update\":\n      return <FiEdit />;\n    case \"delete\":\n      return <FiTrash2 />;\n    case \"approve\":\n      return <FiCheck />;\n    case \"reject\":\n      return <FiX />;\n    case \"system\":\n      return <FiInfo />;\n    default:\n      return <FiInfo />;\n  }\n};\n\n// Fonction pour obtenir le libellé en fonction du type d'activité\nconst getActivityTypeLabel = (type) => {\n  switch (type) {\n    case \"create\":\n      return \"Création\";\n    case \"update\":\n      return \"Modification\";\n    case \"delete\":\n      return \"Suppression\";\n    case \"approve\":\n      return \"Approbation\";\n    case \"reject\":\n      return \"Rejet\";\n    case \"system\":\n      return \"Système\";\n    default:\n      return \"Information\";\n  }\n};\n\n// Fonction pour formater la date et l'heure\nconst formatDateTime = (timestamp) => {\n  if (!timestamp) return { date: \"\", time: \"\" };\n\n  const date = new Date(timestamp);\n\n  return {\n    date: format(date, \"dd MMMM yyyy\", { locale: fr }),\n    time: format(date, \"HH:mm:ss\", { locale: fr }),\n  };\n};\n\nconst RecentActivities = () => {\n  const {\n    activities,\n    loading,\n    error,\n    fetchActivities,\n    formatActivityDescription,\n    formatActivityDate,\n  } = useActivities();\n\n  const handleRefresh = () => {\n    fetchActivities(true);\n  };\n\n  // S'assurer que activities est un tableau\n  const activitiesList = Array.isArray(activities) ? activities : [];\n\n  // Variantes d'animation pour les éléments de la liste\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 100,\n        damping: 10,\n      },\n    },\n  };\n\n  return (\n    <ActivitiesContainer>\n      <ActivitiesHeader>\n        <ActivitiesTitle>\n          <FiClock size={18} /> Activités récentes\n          {!loading && activitiesList.length > 0 && (\n            <Badge color=\"#4F46E5\">{activitiesList.length}</Badge>\n          )}\n        </ActivitiesTitle>\n        <RefreshButton onClick={handleRefresh} disabled={loading}>\n          <FiRefreshCw size={16} className={loading ? \"animate-spin\" : \"\"} />\n          Actualiser\n        </RefreshButton>\n      </ActivitiesHeader>\n\n      {loading ? (\n        <LoadingIndicator>\n          <FiRefreshCw size={32} />\n          <div>Chargement des activités...</div>\n        </LoadingIndicator>\n      ) : error ? (\n        <ErrorMessage>\n          <FiX size={32} />\n          <div>Une erreur est survenue lors du chargement des activités.</div>\n        </ErrorMessage>\n      ) : activitiesList.length === 0 ? (\n        <EmptyMessage>\n          <FiInfo size={32} />\n          <div>Aucune activité récente.</div>\n        </EmptyMessage>\n      ) : (\n        <>\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            <ActivitiesList>\n              {activitiesList.slice(0, 5).map((activity, index) => {\n                const color = getActivityColor(activity.type);\n                const { date, time } = formatDateTime(activity.timestamp);\n\n                return (\n                  <ActivityItem\n                    key={activity.id || index}\n                    color={color}\n                    variants={itemVariants}\n                    whileHover={{ scale: 1.01 }}\n                  >\n                    <ActivityIcon color={color}>\n                      {getActivityIcon(activity.type)}\n                    </ActivityIcon>\n                    <ActivityContent>\n                      <ActivityDescription>\n                        {formatActivityDescription(activity)}\n                        <Badge color={color}>\n                          {getActivityTypeLabel(activity.type)}\n                        </Badge>\n                      </ActivityDescription>\n                      <ActivityMeta>\n                        <ActivityTime>\n                          <FiClock size={12} /> {time}\n                        </ActivityTime>\n                        <ActivityDate>\n                          <FiCalendar size={12} /> {date}\n                        </ActivityDate>\n                      </ActivityMeta>\n                    </ActivityContent>\n                  </ActivityItem>\n                );\n              })}\n            </ActivitiesList>\n          </motion.div>\n\n          {activitiesList.length > 5 && (\n            <ViewAllButton>\n              Voir toutes les activités ({activitiesList.length})\n            </ViewAllButton>\n          )}\n        </>\n      )}\n    </ActivitiesContainer>\n  );\n};\n\nexport default RecentActivities;\n","import { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\n// Composants stylisés\nconst SearchContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: ${({ expanded }) => (expanded ? \"600px\" : \"300px\")};\n  transition: max-width 0.3s ease;\n`;\n\nconst SearchInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border: 1px solid\n    ${({ theme, focused }) =>\n      focused ? theme.colors.primary : theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 0.5rem 1rem;\n  box-shadow: ${({ theme, focused }) =>\n    focused ? `0 0 0 2px ${theme.colors.primary}22` : \"none\"};\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${({ theme, focused }) =>\n      focused ? theme.colors.primary : `${theme.colors.primary}88`};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin-right: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SearchInput = styled.input`\n  flex: 1;\n  border: none;\n  background: none;\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  outline: none;\n  padding: 0.25rem 0;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.text.disabled};\n  }\n`;\n\nconst ClearButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  cursor: pointer;\n  padding: 0.25rem;\n  margin-left: 0.5rem;\n  border-radius: 50%;\n  display: ${({ visible }) => (visible ? \"flex\" : \"none\")};\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst AdvancedButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  cursor: pointer;\n  padding: 0.25rem;\n  margin-left: 0.5rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  transform: ${({ expanded }) => (expanded ? \"rotate(180deg)\" : \"rotate(0)\")};\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst SearchResults = styled.div`\n  position: absolute;\n  top: calc(100% + 0.5rem);\n  left: 0;\n  right: 0;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.large};\n  max-height: 400px;\n  overflow-y: auto;\n  z-index: 100;\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n`;\n\nconst ResultGroup = styled.div`\n  padding: 0.5rem 0;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  }\n`;\n\nconst ResultGroupTitle = styled.div`\n  padding: 0.5rem 1rem;\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n`;\n\nconst ResultItem = styled.div`\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n  }\n`;\n\nconst ResultIcon = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: ${({ theme, color }) =>\n    color ? `${color}22` : `${theme.colors.primary}22`};\n  color: ${({ theme, color }) => color || theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n`;\n\nconst ResultContent = styled.div`\n  flex: 1;\n`;\n\nconst ResultTitle = styled.div`\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.25rem;\n`;\n\nconst ResultDescription = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst HighlightedText = styled.span`\n  background-color: ${({ theme }) => `${theme.colors.primary}33`};\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 0.25rem;\n  border-radius: 2px;\n`;\n\nconst NoResults = styled.div`\n  padding: 1.5rem;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst AdvancedFilters = styled.div`\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  margin-top: 0.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n`;\n\nconst FiltersGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst FilterLabel = styled.label`\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst FilterSelect = styled.select`\n  padding: 0.5rem;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  background-color: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: 0.875rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst FilterActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n  margin-top: 1rem;\n`;\n\nconst FilterButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  ${({ primary, theme }) =>\n    primary\n      ? `\n    background-color: ${theme.colors.primary};\n    color: white;\n    border: 1px solid ${theme.colors.primary};\n    \n    &:hover {\n      background-color: ${theme.colors.primary}dd;\n    }\n  `\n      : `\n    background-color: transparent;\n    color: ${theme.colors.text.primary};\n    border: 1px solid ${theme.colors.border};\n    \n    &:hover {\n      background-color: ${theme.colors.background};\n      border-color: ${theme.colors.text.secondary};\n    }\n  `}\n`;\n\n// Icônes\nconst SearchSvg = () => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ClearSvg = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M18 6L6 18M6 6L18 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChevronSvg = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M19 9L12 16L5 9\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n// Données fictives pour les résultats de recherche\nconst getSearchResults = (query, filters) => {\n  if (!query) return [];\n\n  const employees = [\n    {\n      id: 1,\n      type: \"employee\",\n      name: \"Sophie Martin\",\n      role: \"Designer\",\n      icon: \"👩‍🎨\",\n      color: \"#4F46E5\",\n    },\n    {\n      id: 2,\n      type: \"employee\",\n      name: \"Thomas Dubois\",\n      role: \"Développeur\",\n      icon: \"👨‍💻\",\n      color: \"#4F46E5\",\n    },\n    {\n      id: 3,\n      type: \"employee\",\n      name: \"Julie Lefebvre\",\n      role: \"Marketing\",\n      icon: \"👩‍💼\",\n      color: \"#4F46E5\",\n    },\n    {\n      id: 4,\n      type: \"employee\",\n      name: \"Nicolas Moreau\",\n      role: \"Comptable\",\n      icon: \"👨‍💼\",\n      color: \"#4F46E5\",\n    },\n  ];\n\n  const events = [\n    {\n      id: 1,\n      type: \"event\",\n      name: \"Réunion d'équipe\",\n      date: \"15 Mars 2023\",\n      icon: \"📅\",\n      color: \"#10B981\",\n    },\n    {\n      id: 2,\n      type: \"event\",\n      name: \"Présentation client\",\n      date: \"22 Mars 2023\",\n      icon: \"📊\",\n      color: \"#10B981\",\n    },\n    {\n      id: 3,\n      type: \"event\",\n      name: \"Formation Excel\",\n      date: \"5 Avril 2023\",\n      icon: \"📚\",\n      color: \"#10B981\",\n    },\n  ];\n\n  const vacations = [\n    {\n      id: 1,\n      type: \"vacation\",\n      name: \"Congés d'été\",\n      employee: \"Sophie Martin\",\n      icon: \"🏖️\",\n      color: \"#F59E0B\",\n    },\n    {\n      id: 2,\n      type: \"vacation\",\n      name: \"RTT\",\n      employee: \"Thomas Dubois\",\n      icon: \"🏖️\",\n      color: \"#F59E0B\",\n    },\n    {\n      id: 3,\n      type: \"vacation\",\n      name: \"Congé maladie\",\n      employee: \"Julie Lefebvre\",\n      icon: \"🏖️\",\n      color: \"#F59E0B\",\n    },\n  ];\n\n  // Filtrer les résultats en fonction de la requête\n  const lowercaseQuery = query.toLowerCase();\n\n  let filteredEmployees = employees.filter(\n    (employee) =>\n      employee.name.toLowerCase().includes(lowercaseQuery) ||\n      employee.role.toLowerCase().includes(lowercaseQuery)\n  );\n\n  let filteredEvents = events.filter(\n    (event) =>\n      event.name.toLowerCase().includes(lowercaseQuery) ||\n      event.date.toLowerCase().includes(lowercaseQuery)\n  );\n\n  let filteredVacations = vacations.filter(\n    (vacation) =>\n      vacation.name.toLowerCase().includes(lowercaseQuery) ||\n      vacation.employee.toLowerCase().includes(lowercaseQuery)\n  );\n\n  // Appliquer les filtres avancés\n  if (filters.type !== \"all\") {\n    if (filters.type === \"employees\") {\n      filteredEvents = [];\n      filteredVacations = [];\n    } else if (filters.type === \"events\") {\n      filteredEmployees = [];\n      filteredVacations = [];\n    } else if (filters.type === \"vacations\") {\n      filteredEmployees = [];\n      filteredEvents = [];\n    }\n  }\n\n  // Regrouper les résultats\n  const results = [];\n\n  if (filteredEmployees.length > 0) {\n    results.push({\n      title: \"Employés\",\n      items: filteredEmployees,\n    });\n  }\n\n  if (filteredEvents.length > 0) {\n    results.push({\n      title: \"Événements\",\n      items: filteredEvents,\n    });\n  }\n\n  if (filteredVacations.length > 0) {\n    results.push({\n      title: \"Congés\",\n      items: filteredVacations,\n    });\n  }\n\n  return results;\n};\n\n// Composant principal\nconst SearchBar = ({ placeholder = \"Rechercher...\", onSearch }) => {\n  const [query, setQuery] = useState(\"\");\n  const [focused, setFocused] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [results, setResults] = useState([]);\n  const [filters, setFilters] = useState({\n    type: \"all\",\n    date: \"all\",\n    status: \"all\",\n  });\n\n  const searchRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Gérer les clics en dehors du composant\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (searchRef.current && !searchRef.current.contains(event.target)) {\n        setFocused(false);\n        setShowResults(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  // Mettre à jour les résultats lorsque la requête ou les filtres changent\n  useEffect(() => {\n    if (query.length > 0) {\n      const searchResults = getSearchResults(query, filters);\n      setResults(searchResults);\n      setShowResults(true);\n    } else {\n      setResults([]);\n      setShowResults(false);\n    }\n  }, [query, filters]);\n\n  const handleInputChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleInputFocus = () => {\n    setFocused(true);\n    if (query.length > 0) {\n      setShowResults(true);\n    }\n  };\n\n  const handleClear = () => {\n    setQuery(\"\");\n    inputRef.current.focus();\n  };\n\n  const toggleAdvanced = () => {\n    setExpanded(!expanded);\n    setShowFilters(!showFilters);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const resetFilters = () => {\n    setFilters({\n      type: \"all\",\n      date: \"all\",\n      status: \"all\",\n    });\n  };\n\n  const handleResultClick = (item) => {\n    if (onSearch) {\n      onSearch(item);\n    }\n    setShowResults(false);\n  };\n\n  // Mettre en surbrillance les termes de recherche\n  const highlightText = (text, query) => {\n    if (!query) return text;\n\n    const parts = text.split(new RegExp(`(${query})`, \"gi\"));\n    return parts.map((part, index) =>\n      part.toLowerCase() === query.toLowerCase() ? (\n        <HighlightedText key={index}>{part}</HighlightedText>\n      ) : (\n        part\n      )\n    );\n  };\n\n  return (\n    <div ref={searchRef}>\n      <SearchContainer expanded={expanded}>\n        <SearchInputWrapper focused={focused}>\n          <SearchIcon>\n            <SearchSvg />\n          </SearchIcon>\n          <SearchInput\n            ref={inputRef}\n            type=\"text\"\n            placeholder={placeholder}\n            value={query}\n            onChange={handleInputChange}\n            onFocus={handleInputFocus}\n          />\n          <ClearButton\n            visible={query.length > 0}\n            onClick={handleClear}\n            aria-label=\"Effacer la recherche\"\n          >\n            <ClearSvg />\n          </ClearButton>\n          <AdvancedButton\n            expanded={expanded}\n            onClick={toggleAdvanced}\n            aria-label=\"Recherche avancée\"\n          >\n            <ChevronSvg />\n          </AdvancedButton>\n        </SearchInputWrapper>\n\n        <AdvancedFilters visible={showFilters}>\n          <FiltersGrid>\n            <FilterGroup>\n              <FilterLabel htmlFor=\"type\">Type</FilterLabel>\n              <FilterSelect\n                id=\"type\"\n                name=\"type\"\n                value={filters.type}\n                onChange={handleFilterChange}\n              >\n                <option value=\"all\">Tous</option>\n                <option value=\"employees\">Employés</option>\n                <option value=\"events\">Événements</option>\n                <option value=\"vacations\">Congés</option>\n              </FilterSelect>\n            </FilterGroup>\n\n            <FilterGroup>\n              <FilterLabel htmlFor=\"date\">Date</FilterLabel>\n              <FilterSelect\n                id=\"date\"\n                name=\"date\"\n                value={filters.date}\n                onChange={handleFilterChange}\n              >\n                <option value=\"all\">Toutes les dates</option>\n                <option value=\"today\">Aujourd'hui</option>\n                <option value=\"week\">Cette semaine</option>\n                <option value=\"month\">Ce mois</option>\n                <option value=\"year\">Cette année</option>\n              </FilterSelect>\n            </FilterGroup>\n\n            <FilterGroup>\n              <FilterLabel htmlFor=\"status\">Statut</FilterLabel>\n              <FilterSelect\n                id=\"status\"\n                name=\"status\"\n                value={filters.status}\n                onChange={handleFilterChange}\n              >\n                <option value=\"all\">Tous les statuts</option>\n                <option value=\"active\">Actif</option>\n                <option value=\"pending\">En attente</option>\n                <option value=\"completed\">Terminé</option>\n              </FilterSelect>\n            </FilterGroup>\n          </FiltersGrid>\n\n          <FilterActions>\n            <FilterButton onClick={resetFilters}>Réinitialiser</FilterButton>\n            <FilterButton primary>Appliquer</FilterButton>\n          </FilterActions>\n        </AdvancedFilters>\n\n        <SearchResults visible={showResults && results.length > 0}>\n          {results.map((group, groupIndex) => (\n            <ResultGroup key={groupIndex}>\n              <ResultGroupTitle>{group.title}</ResultGroupTitle>\n              {group.items.map((item, itemIndex) => (\n                <ResultItem\n                  key={`${groupIndex}-${itemIndex}`}\n                  onClick={() => handleResultClick(item)}\n                >\n                  <ResultIcon color={item.color}>{item.icon}</ResultIcon>\n                  <ResultContent>\n                    <ResultTitle>{highlightText(item.name, query)}</ResultTitle>\n                    <ResultDescription>\n                      {item.type === \"employee\" &&\n                        highlightText(item.role, query)}\n                      {item.type === \"event\" && highlightText(item.date, query)}\n                      {item.type === \"vacation\" &&\n                        highlightText(item.employee, query)}\n                    </ResultDescription>\n                  </ResultContent>\n                </ResultItem>\n              ))}\n            </ResultGroup>\n          ))}\n        </SearchResults>\n\n        {showResults && query.length > 0 && results.length === 0 && (\n          <SearchResults visible={true}>\n            <NoResults>Aucun résultat trouvé pour \"{query}\"</NoResults>\n          </SearchResults>\n        )}\n      </SearchContainer>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import Lottie from \"lottie-react\";\nimport styled from \"styled-components\";\nimport robotAnimation from \"../assets/animations/robot.json\";\nimport DashboardStats from \"../components/dashboard/DashboardStats\";\nimport RecentActivities from \"../components/dashboard/RecentActivities\";\nimport SearchBar from \"../components/ui/SearchBar\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\n// Composants stylisés\nconst DashboardContainer = styled.div`\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst DashboardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n`;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n`;\n\nconst AnimationContainer = styled.div`\n  width: 80px;\n  height: 80px;\n  flex-shrink: 0;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.75rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst PageDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0.5rem 0 0 0;\n`;\n\nconst WelcomeSection = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst WelcomeCard = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 2rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n\n  h1 {\n    font-size: 1.5rem;\n    color: ${({ theme }) => theme.colors.text.primary};\n    margin: 0 0 1rem 0;\n  }\n\n  p {\n    color: ${({ theme }) => theme.colors.text.secondary};\n    margin: 0;\n    line-height: 1.5;\n  }\n`;\n\nconst SearchSection = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst StatCard = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n`;\n\nconst StatHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst StatTitle = styled.h3`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0;\n`;\n\nconst StatIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst StatEmployeesList = styled.div`\n  margin-top: 0.75rem;\n  font-size: 0.75rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst EmployeeItem = styled.div`\n  padding: 0.25rem 0;\n  border-bottom: 1px solid ${({ theme }) => `${theme.colors.border}44`};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.25rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0 0 1rem 0;\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst ActivitiesSection = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  margin-bottom: 2rem;\n`;\n\nconst ActivityList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst ActivityItem = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 0.75rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n  }\n`;\n\nconst ActivityIcon = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  margin-right: 1rem;\n`;\n\nconst ActivityContent = styled.div`\n  flex: 1;\n`;\n\nconst ActivityTitle = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.25rem;\n`;\n\nconst ActivityMeta = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 0.75rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst ActivityTime = styled.span`\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n`;\n\nconst ActivityUser = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nconst ClockIcon = () => (\n  <svg\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    style={{ marginRight: \"4px\" }}\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"10\" />\n    <polyline points=\"12 6 12 12 16 14\" />\n  </svg>\n);\n\nconst UserIcon = () => (\n  <svg\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    style={{ marginRight: \"4px\" }}\n  >\n    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n    <circle cx=\"12\" cy=\"7\" r=\"4\" />\n  </svg>\n);\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst Dashboard = () => {\n  const { user } = useAuth();\n\n  // Fonction pour obtenir le prénom et le nom de l'utilisateur\n  const getUserFullName = () => {\n    if (!user) return \"Utilisateur\";\n    if (user.first_name && user.last_name) {\n      return `${user.first_name} ${user.last_name}`;\n    }\n    return user.username || \"Utilisateur\";\n  };\n\n  const handleSearch = (query) => {\n    // Implémentation de la recherche à ajouter\n    console.log(\"Recherche:\", query);\n  };\n\n  return (\n    <DashboardContainer>\n      <DashboardHeader>\n        <HeaderLeft>\n          <AnimationContainer>\n            <Lottie\n              animationData={robotAnimation}\n              loop={true}\n              style={{ width: \"100%\", height: \"100%\" }}\n            />\n          </AnimationContainer>\n          <TitleContainer>\n            <PageTitle>Tableau de bord</PageTitle>\n            <PageDescription>\n              Bienvenue sur votre assistant de planification intelligent\n            </PageDescription>\n          </TitleContainer>\n        </HeaderLeft>\n      </DashboardHeader>\n\n      <WelcomeSection>\n        <WelcomeCard>\n          <h1>Bonjour, {getUserFullName()}!</h1>\n          <p>\n            Bienvenue sur votre tableau de bord. Voici un aperçu de votre\n            activité récente.\n          </p>\n        </WelcomeCard>\n      </WelcomeSection>\n      <SearchSection>\n        <SearchBar\n          placeholder=\"Rechercher un employé, un événement...\"\n          onSearch={handleSearch}\n        />\n      </SearchSection>\n\n      <DashboardStats />\n      <RecentActivities />\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;\n"],"names":["useEmployees","employees","setEmployees","useState","loading","setLoading","error","setError","api","useApi","fetchEmployees","useCallback","async","response","get","API_ENDPOINTS","EMPLOYEES","BASE","_response$data","ok","Error","data","message","employeesData","Array","isArray","err","console","toast","fetchEmployeeById","BY_ID","id","_response$data2","createEmployee","post","employeeData","prevEmployees","includes","success","prev","employee","errorMessage","updateEmployee","put","map","emp","deleteEmployee","delete","filter","getEmployeesByStatus","status","fetchEmployeeHourBalance","randomDelay","Math","floor","random","Promise","resolve","setTimeout","undefined","hour_balance","balance","warn","fetchAllEmployeesHourBalances","window","_isFetchingHourBalances","useEffect","mounted","retryCount","loadEmployees","localStorage","getItem","pow","hourBalancesLoaded","useRef","length","current","timer","clearTimeout","handleResponse","headers","forEach","value","key","log","url","statusText","contentType","json","text","JSON","parse","e","removeItem","location","href","method","stack","useMemo","camelToSnakeCase","str","replace","letter","toLowerCase","endpoint","token","controller","AbortController","timeoutId","abort","fetch","API_URL","Authorization","credentials","signal","fetchError","name","snakeCaseData","dataSize","stringify","body","cleanData","result","Headers","StatsContainer","styled","div","StatCard","_ref","theme","colors","surface","_ref2","borderRadius","medium","_ref3","shadows","StatHeader","StatTitle","h3","_ref4","secondary","StatIcon","_ref5","color","_ref6","StatValue","_ref7","typography","fontWeights","bold","_ref8","primary","LoadingIndicator","_ref9","DashboardStats","employeesLoading","_jsx","children","_Fragment","_jsxs","FiUsers","useActivities","activities","setActivities","user","useAuth","wsActivities","socket","requestActivitiesUpdate","fallbackMode","useWebSocket","fetchActivities","ACTIVITIES","activitiesData","createActivity","activityData","activity","updateActivity","deleteActivity","_response$data3","formatActivityDescription","type","entity_type","entity_id","user_id","details","userName","employeeName","description","create","update","approve","reject","schedule","vacation","shift","formatActivityDate","timestamp","date","Date","diffMs","diffSec","diffMin","diffHour","diffDay","toLocaleDateString","day","month","year","getActivityIcon","FiPlus","FiEdit","FiTrash2","FiCheck","FiX","prevActivities","prevActivitiesArray","newActivitiesMap","Map","set","has","from","values","sort","a","b","interval","setInterval","clearInterval","pulse","keyframes","ActivitiesContainer","large","ActivitiesHeader","border","ActivitiesTitle","RefreshButton","button","primaryLight","small","_ref10","_ref11","ActivitiesList","ActivityItem","motion","_ref12","_ref13","_ref14","_ref15","ActivityIcon","_ref16","_ref17","ActivityContent","ActivityDescription","_ref18","ActivityMeta","_ref19","ActivityTime","ActivityDate","_ref20","ErrorMessage","_ref21","EmptyMessage","_ref22","ViewAllButton","_ref23","_ref24","_ref25","_ref26","Badge","span","_ref27","FiInfo","getActivityTypeLabel","RecentActivities","activitiesList","itemVariants","hidden","opacity","y","visible","transition","stiffness","damping","FiClock","size","onClick","handleRefresh","disabled","FiRefreshCw","className","variants","staggerChildren","initial","animate","slice","index","getActivityColor","time","format","locale","fr","formatDateTime","whileHover","scale","FiCalendar","SearchContainer","expanded","SearchInputWrapper","focused","SearchIcon","SearchInput","input","ClearButton","AdvancedButton","SearchResults","ResultGroup","ResultGroupTitle","semiBold","ResultItem","ResultIcon","ResultContent","ResultTitle","_ref28","_ref29","ResultDescription","_ref30","HighlightedText","_ref31","_ref32","NoResults","_ref33","AdvancedFilters","_ref34","_ref35","_ref36","_ref37","FiltersGrid","FilterGroup","FilterLabel","label","_ref38","_ref39","FilterSelect","select","_ref40","_ref41","_ref42","background","_ref43","_ref44","FilterActions","FilterButton","_ref45","_ref46","_ref47","SearchSvg","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ClearSvg","ChevronSvg","_ref48","placeholder","onSearch","query","setQuery","setFocused","setExpanded","showResults","setShowResults","showFilters","setShowFilters","results","setResults","filters","setFilters","searchRef","inputRef","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","searchResults","getSearchResults","lowercaseQuery","filteredEmployees","role","icon","filteredEvents","filteredVacations","push","title","items","handleFilterChange","highlightText","split","RegExp","part","ref","onChange","onFocus","handleInputFocus","handleClear","focus","toggleAdvanced","htmlFor","resetFilters","group","groupIndex","item","itemIndex","handleResultClick","DashboardContainer","DashboardHeader","breakpoints","md","HeaderLeft","AnimationContainer","TitleContainer","PageTitle","h1","PageDescription","p","WelcomeSection","WelcomeCard","SearchSection","h2","Dashboard","Lottie","animationData","robotAnimation","loop","style","first_name","last_name","username","SearchBar"],"sourceRoot":""}