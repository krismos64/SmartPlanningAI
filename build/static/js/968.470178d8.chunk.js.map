{"version":3,"file":"static/js/968.470178d8.chunk.js","mappings":"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","sources":["utils/activityUtils.js","pages/Activities.js","hooks/useApi.js","hooks/useActivities.js"],"sourcesContent":["import {\n  FiCheck,\n  FiEdit,\n  FiInfo,\n  FiPlus,\n  FiSun,\n  FiTrash2,\n  FiX,\n} from \"react-icons/fi\";\n\n/**\n * Obtient la couleur en fonction du type d'activité\n * @param {string} type - Le type d'activité\n * @param {string} entity_type - Le type d'entité\n * @returns {string} - La couleur correspondante\n */\nexport const getActivityColor = (type, entity_type) => {\n  // Si c'est une activité liée aux congés, utiliser une couleur spécifique\n  if (entity_type === \"vacation\") {\n    return \"#6366F1\"; // indigo pour les congés\n  }\n\n  // Sinon, utiliser la couleur en fonction du type d'activité\n  switch (type) {\n    case \"create\":\n      return \"#10B981\"; // vert\n    case \"update\":\n      return \"#F59E0B\"; // orange\n    case \"delete\":\n      return \"#EF4444\"; // rouge\n    case \"approve\":\n      return \"#3B82F6\"; // bleu\n    case \"reject\":\n      return \"#EC4899\"; // rose\n    case \"system\":\n      return \"#8B5CF6\"; // violet\n    case \"vacation_status_update\":\n      return \"#6366F1\"; // indigo\n    default:\n      return \"#4F46E5\"; // indigo (par défaut)\n  }\n};\n\n/**\n * Obtient l'icône en fonction du type d'activité\n * @param {string} type - Le type d'activité\n * @param {string} entity_type - Le type d'entité\n * @returns {JSX.Element} - L'icône correspondante\n */\nexport const getActivityIcon = (type, entity_type) => {\n  // Si c'est une activité liée aux congés, utiliser une icône spécifique\n  if (entity_type === \"vacation\") {\n    return <FiSun />;\n  }\n\n  // Sinon, utiliser l'icône en fonction du type d'activité\n  switch (type) {\n    case \"create\":\n      return <FiPlus />;\n    case \"update\":\n      return <FiEdit />;\n    case \"delete\":\n      return <FiTrash2 />;\n    case \"approve\":\n      return <FiCheck />;\n    case \"reject\":\n      return <FiX />;\n    case \"system\":\n      return <FiInfo />;\n    case \"vacation_status_update\":\n      return <FiSun />;\n    default:\n      return <FiInfo />;\n  }\n};\n\n/**\n * Traduit le type de congé en français\n * @param {string} type - Le type de congé en anglais\n * @returns {string} - Le type de congé en français\n */\nexport const translateVacationType = (type) => {\n  switch (type) {\n    case \"paid\":\n      return \"payé\";\n    case \"unpaid\":\n      return \"non payé\";\n    case \"sick\":\n      return \"maladie\";\n    case \"other\":\n      return \"autre\";\n    default:\n      return type || \"non spécifié\";\n  }\n};\n\n/**\n * Traduit le statut de congé en français\n * @param {string} status - Le statut de congé en anglais\n * @returns {string} - Le statut de congé en français\n */\nexport const translateVacationStatus = (status) => {\n  switch (status) {\n    case \"approved\":\n      return \"approuvé\";\n    case \"rejected\":\n      return \"rejeté\";\n    case \"pending\":\n      return \"en attente\";\n    default:\n      return status || \"non spécifié\";\n  }\n};\n\n/**\n * Obtient le libellé en fonction du type d'activité\n * @param {string} type - Le type d'activité\n * @param {string} entity_type - Le type d'entité\n * @param {Object} details - Les détails de l'activité\n * @returns {string} - Le libellé correspondant\n */\nexport const getActivityTypeLabel = (type, entity_type, details) => {\n  // Si c'est une activité liée aux congés, utiliser un libellé spécifique\n  if (entity_type === \"vacation\") {\n    // Récupérer le type de congé si disponible\n    let vacationType = \"\";\n    if (details && typeof details === \"object\") {\n      if (details.type) {\n        vacationType = translateVacationType(details.type);\n      } else if (details.vacation_type) {\n        vacationType = translateVacationType(details.vacation_type);\n      }\n    }\n\n    switch (type) {\n      case \"create\":\n        return `Nouvelle demande${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"update\":\n        return `Modification congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"delete\":\n        return `Suppression congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"approve\":\n        return `Approbation congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"reject\":\n        return `Rejet congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"vacation_status_update\":\n        // Récupérer le nouveau statut si disponible\n        let statusText = \"\";\n        if (details && typeof details === \"object\" && details.new_status) {\n          statusText = translateVacationStatus(details.new_status);\n        }\n        return `Congé ${statusText}${vacationType ? \" \" + vacationType : \"\"}`;\n      default:\n        return `Congé${vacationType ? \" \" + vacationType : \"\"}`;\n    }\n  }\n\n  // Sinon, utiliser le libellé en fonction du type d'activité\n  switch (type) {\n    case \"create\":\n      return \"Création\";\n    case \"update\":\n      return \"Modification\";\n    case \"delete\":\n      return \"Suppression\";\n    case \"approve\":\n      return \"Approbation\";\n    case \"reject\":\n      return \"Rejet\";\n    case \"system\":\n      return \"Système\";\n    case \"vacation_status_update\":\n      return \"Mise à jour statut\";\n    default:\n      return \"Information\";\n  }\n};\n","import { motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport {\n  FiCalendar,\n  FiCheck,\n  FiChevronDown,\n  FiClock,\n  FiEdit,\n  FiPlus,\n  FiRefreshCw,\n  FiSearch,\n  FiSun,\n  FiTrash2,\n  FiUser,\n  FiX,\n} from \"react-icons/fi\";\nimport styled from \"styled-components\";\nimport useActivities from \"../hooks/useActivities\";\nimport {\n  getActivityColor,\n  getActivityIcon,\n  getActivityTypeLabel,\n} from \"../utils/activityUtils\";\nimport { formatDateTime } from \"../utils/dateUtils\";\n\n// Composants stylisés\nconst PageContainer = styled.div`\n  padding: 2rem;\n`;\n\nconst PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.8rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n  flex-wrap: wrap;\n`;\n\nconst SearchInput = styled.div`\n  position: relative;\n  flex: 1;\n  min-width: 250px;\n\n  input {\n    width: 100%;\n    padding: 0.75rem 1rem 0.75rem 2.5rem;\n    border-radius: ${({ theme }) => theme.borderRadius.medium};\n    border: 1px solid ${({ theme }) => theme.colors.border};\n    background-color: ${({ theme }) => theme.colors.background};\n    color: ${({ theme }) => theme.colors.text.primary};\n    font-size: 0.9rem;\n\n    &:focus {\n      outline: none;\n      border-color: ${({ theme }) => theme.colors.primary};\n      box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.primaryLight};\n    }\n  }\n\n  svg {\n    position: absolute;\n    left: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.colors.text.secondary};\n  }\n`;\n\nconst FilterButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.primaryLight : theme.colors.background};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.primary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.backgroundAlt};\n    border-color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst FilterDropdown = styled.div`\n  position: relative;\n`;\n\nconst DropdownButton = styled(FilterButton)`\n  min-width: 150px;\n  justify-content: space-between;\n`;\n\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: calc(100% + 0.5rem);\n  left: 0;\n  width: 200px;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  z-index: 10;\n  overflow: hidden;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst DropdownItem = styled.div`\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  }\n\n  svg {\n    color: ${({ theme, selected }) =>\n      selected ? theme.colors.primary : \"transparent\"};\n  }\n`;\n\nconst ActiveFiltersContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;\n\nconst ActiveFilter = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 0.75rem;\n  background-color: ${({ theme, color }) =>\n    color ? `${color}15` : theme.colors.primaryLight};\n  border: 1px solid ${({ theme, color }) => color || theme.colors.primary};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  font-size: 0.8rem;\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.text.secondary};\n    padding: 0;\n    margin-left: 0.25rem;\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.error};\n    }\n  }\n`;\n\nconst DateRangeContainer = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n`;\n\nconst DateInput = styled.input`\n  padding: 0.75rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: 0.9rem;\n  width: 150px;\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.primaryLight};\n  }\n`;\n\nconst RefreshButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  border: none;\n  background-color: ${({ theme }) => theme.colors.primaryLight};\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary}22;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  svg {\n    transition: transform 0.3s ease;\n  }\n\n  &:hover svg {\n    transform: rotate(180deg);\n  }\n`;\n\nconst ActivitiesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst ActivityItem = styled(motion.div)`\n  display: flex;\n  align-items: flex-start;\n  padding: 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  transition: all 0.3s ease;\n  border-left: 3px solid ${({ color }) => color};\n  background-color: ${({ theme, color }) => `${color}08`};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n\n  &:hover {\n    background-color: ${({ theme, color }) => `${color}15`};\n    transform: translateX(5px);\n    box-shadow: ${({ theme }) => theme.shadows.medium};\n  }\n`;\n\nconst ActivityIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  margin-right: 1rem;\n  flex-shrink: 0;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n`;\n\nconst ActivityContent = styled.div`\n  flex: 1;\n`;\n\nconst ActivityDescription = styled.div`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  line-height: 1.4;\n`;\n\nconst Badge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ color }) => color};\n  color: white;\n  border-radius: 12px;\n  padding: 0.25rem 0.5rem;\n  font-size: 0.7rem;\n  font-weight: 500;\n  margin-left: 0.5rem;\n`;\n\nconst ActivityMeta = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  font-size: 0.75rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst ActivityTime = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n`;\n\nconst ActivityDate = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n`;\n\nconst ActivityEmployee = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.primary};\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n\n  svg {\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.error};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n  margin-top: 2rem;\n`;\n\nconst PaginationButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2rem;\n  height: 2rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.primaryLight : theme.colors.background};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.primary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primaryLight};\n    border-color: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    background-color: ${({ theme }) => theme.colors.background};\n    border-color: ${({ theme }) => theme.colors.border};\n    color: ${({ theme }) => theme.colors.text.secondary};\n  }\n`;\n\n// Fonction pour extraire les détails pertinents d'une activité\nconst extractActivityDetails = (activity) => {\n  if (!activity || !activity.details) return {};\n\n  let details = activity.details;\n  if (typeof details === \"string\") {\n    try {\n      details = JSON.parse(details);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  // Extraire les informations pertinentes\n  return {\n    employeeName: details.employee_name || \"\",\n    employeeId: details.employee_id || \"\",\n    vacationType: details.type || details.vacation_type || \"\",\n    startDate: details.start_date || \"\",\n    endDate: details.end_date || \"\",\n    status: details.status || details.new_status || \"\",\n    previousStatus: details.previous_status || \"\",\n  };\n};\n\n// Types d'activités disponibles\nconst ACTIVITY_TYPES = [\n  { id: \"create\", label: \"Création\", icon: <FiPlus /> },\n  { id: \"update\", label: \"Modification\", icon: <FiEdit /> },\n  { id: \"delete\", label: \"Suppression\", icon: <FiTrash2 /> },\n  { id: \"approve\", label: \"Approbation\", icon: <FiCheck /> },\n  { id: \"reject\", label: \"Rejet\", icon: <FiX /> },\n  {\n    id: \"vacation_status_update\",\n    label: \"Mise à jour statut\",\n    icon: <FiSun />,\n  },\n];\n\n// Types d'entités disponibles\nconst ENTITY_TYPES = [\n  { id: \"vacation\", label: \"Congés\", icon: <FiSun /> },\n  { id: \"employee\", label: \"Employés\", icon: <FiUser /> },\n  { id: \"schedule\", label: \"Planning\", icon: <FiCalendar /> },\n];\n\n// Types de congés disponibles\nconst VACATION_TYPES = [\n  { id: \"paid\", label: \"Congé payé\" },\n  { id: \"unpaid\", label: \"Congé non payé\" },\n  { id: \"sick\", label: \"Congé maladie\" },\n  { id: \"other\", label: \"Autre congé\" },\n];\n\nconst Activities = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [filters, setFilters] = useState({\n    activityTypes: [],\n    entityTypes: [],\n    vacationTypes: [],\n    dateRange: {\n      startDate: \"\",\n      endDate: \"\",\n    },\n  });\n\n  // États pour les dropdowns\n  const [openDropdown, setOpenDropdown] = useState(null);\n\n  const {\n    activities,\n    loading,\n    error,\n    fetchActivities,\n    formatActivityDescription,\n  } = useActivities();\n\n  const handleRefresh = () => {\n    fetchActivities(true);\n  };\n\n  // Gérer l'ouverture/fermeture des dropdowns\n  const toggleDropdown = (dropdown) => {\n    setOpenDropdown(openDropdown === dropdown ? null : dropdown);\n  };\n\n  // Gérer la sélection d'un filtre\n  const toggleFilter = (type, value) => {\n    setFilters((prev) => {\n      const currentFilters = [...prev[type]];\n      const index = currentFilters.indexOf(value);\n\n      if (index === -1) {\n        currentFilters.push(value);\n      } else {\n        currentFilters.splice(index, 1);\n      }\n\n      return {\n        ...prev,\n        [type]: currentFilters,\n      };\n    });\n\n    // Réinitialiser la pagination\n    setCurrentPage(1);\n  };\n\n  // Gérer la suppression d'un filtre\n  const removeFilter = (type, value) => {\n    setFilters((prev) => {\n      const currentFilters = [...prev[type]];\n      const index = currentFilters.indexOf(value);\n\n      if (index !== -1) {\n        currentFilters.splice(index, 1);\n      }\n\n      return {\n        ...prev,\n        [type]: currentFilters,\n      };\n    });\n  };\n\n  // Gérer la modification de la plage de dates\n  const handleDateChange = (field, value) => {\n    setFilters((prev) => ({\n      ...prev,\n      dateRange: {\n        ...prev.dateRange,\n        [field]: value,\n      },\n    }));\n\n    // Réinitialiser la pagination\n    setCurrentPage(1);\n  };\n\n  // Filtrer les activités en fonction des filtres sélectionnés\n  const filteredActivities = Array.isArray(activities)\n    ? activities.filter((activity) => {\n        // Filtrer par terme de recherche\n        const description = formatActivityDescription(activity);\n        const matchesSearch = description\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n\n        // Filtrer par type d'activité\n        const matchesActivityType =\n          filters.activityTypes.length === 0 ||\n          filters.activityTypes.includes(activity.type);\n\n        // Filtrer par type d'entité\n        const matchesEntityType =\n          filters.entityTypes.length === 0 ||\n          filters.entityTypes.includes(activity.entity_type);\n\n        // Filtrer par type de congé (uniquement pour les activités de type congé)\n        let matchesVacationType = true;\n        if (\n          activity.entity_type === \"vacation\" &&\n          filters.vacationTypes.length > 0\n        ) {\n          const details = extractActivityDetails(activity);\n          matchesVacationType = filters.vacationTypes.includes(\n            details.vacationType\n          );\n        }\n\n        // Filtrer par plage de dates\n        let matchesDateRange = true;\n        if (filters.dateRange.startDate || filters.dateRange.endDate) {\n          const activityDate = new Date(activity.timestamp);\n\n          if (filters.dateRange.startDate) {\n            const startDate = new Date(filters.dateRange.startDate);\n            startDate.setHours(0, 0, 0, 0);\n            matchesDateRange = matchesDateRange && activityDate >= startDate;\n          }\n\n          if (filters.dateRange.endDate) {\n            const endDate = new Date(filters.dateRange.endDate);\n            endDate.setHours(23, 59, 59, 999);\n            matchesDateRange = matchesDateRange && activityDate <= endDate;\n          }\n        }\n\n        return (\n          matchesSearch &&\n          matchesActivityType &&\n          matchesEntityType &&\n          matchesVacationType &&\n          matchesDateRange\n        );\n      })\n    : [];\n\n  // Calculer les activités à afficher pour la pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentActivities = filteredActivities.slice(\n    indexOfFirstItem,\n    indexOfLastItem\n  );\n\n  // Calculer le nombre total de pages\n  const totalPages = Math.ceil(filteredActivities.length / itemsPerPage);\n\n  // Générer les boutons de pagination\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  // Variantes d'animation pour les éléments de la liste\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 100,\n        damping: 10,\n      },\n    },\n  };\n\n  // Obtenir les filtres actifs pour l'affichage\n  const getActiveFilters = () => {\n    const activeFilters = [];\n\n    // Filtres de type d'activité\n    filters.activityTypes.forEach((type) => {\n      const activityType = ACTIVITY_TYPES.find((t) => t.id === type);\n      if (activityType) {\n        activeFilters.push({\n          type: \"activityTypes\",\n          id: type,\n          label: activityType.label,\n          color: getActivityColor(type, null),\n        });\n      }\n    });\n\n    // Filtres de type d'entité\n    filters.entityTypes.forEach((type) => {\n      const entityType = ENTITY_TYPES.find((t) => t.id === type);\n      if (entityType) {\n        activeFilters.push({\n          type: \"entityTypes\",\n          id: type,\n          label: entityType.label,\n          color: type === \"vacation\" ? \"#6366F1\" : \"#4F46E5\",\n        });\n      }\n    });\n\n    // Filtres de type de congé\n    filters.vacationTypes.forEach((type) => {\n      const vacationType = VACATION_TYPES.find((t) => t.id === type);\n      if (vacationType) {\n        activeFilters.push({\n          type: \"vacationTypes\",\n          id: type,\n          label: vacationType.label,\n          color: \"#6366F1\",\n        });\n      }\n    });\n\n    return activeFilters;\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageTitle>Historique des activités</PageTitle>\n        <RefreshButton onClick={handleRefresh} disabled={loading}>\n          <FiRefreshCw size={16} className={loading ? \"animate-spin\" : \"\"} />\n          Actualiser\n        </RefreshButton>\n      </PageHeader>\n\n      <FiltersContainer>\n        <SearchInput>\n          <FiSearch size={16} />\n          <input\n            type=\"text\"\n            placeholder=\"Rechercher dans les activités...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </SearchInput>\n\n        {/* Filtre par type d'activité */}\n        <FilterDropdown>\n          <DropdownButton\n            onClick={() => toggleDropdown(\"activityTypes\")}\n            active={filters.activityTypes.length > 0}\n          >\n            Type d'activité\n            <FiChevronDown size={16} />\n          </DropdownButton>\n          {openDropdown === \"activityTypes\" && (\n            <DropdownMenu>\n              {ACTIVITY_TYPES.map((type) => (\n                <DropdownItem\n                  key={type.id}\n                  onClick={() => toggleFilter(\"activityTypes\", type.id)}\n                  selected={filters.activityTypes.includes(type.id)}\n                >\n                  <FiCheck size={16} />\n                  {type.icon} {type.label}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          )}\n        </FilterDropdown>\n\n        {/* Filtre par type d'entité */}\n        <FilterDropdown>\n          <DropdownButton\n            onClick={() => toggleDropdown(\"entityTypes\")}\n            active={filters.entityTypes.length > 0}\n          >\n            Type d'entité\n            <FiChevronDown size={16} />\n          </DropdownButton>\n          {openDropdown === \"entityTypes\" && (\n            <DropdownMenu>\n              {ENTITY_TYPES.map((type) => (\n                <DropdownItem\n                  key={type.id}\n                  onClick={() => toggleFilter(\"entityTypes\", type.id)}\n                  selected={filters.entityTypes.includes(type.id)}\n                >\n                  <FiCheck size={16} />\n                  {type.icon} {type.label}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          )}\n        </FilterDropdown>\n\n        {/* Filtre par type de congé */}\n        <FilterDropdown>\n          <DropdownButton\n            onClick={() => toggleDropdown(\"vacationTypes\")}\n            active={filters.vacationTypes.length > 0}\n          >\n            Type de congé\n            <FiChevronDown size={16} />\n          </DropdownButton>\n          {openDropdown === \"vacationTypes\" && (\n            <DropdownMenu>\n              {VACATION_TYPES.map((type) => (\n                <DropdownItem\n                  key={type.id}\n                  onClick={() => toggleFilter(\"vacationTypes\", type.id)}\n                  selected={filters.vacationTypes.includes(type.id)}\n                >\n                  <FiCheck size={16} />\n                  {type.label}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          )}\n        </FilterDropdown>\n\n        {/* Filtre par plage de dates */}\n        <DateRangeContainer>\n          <DateInput\n            type=\"date\"\n            placeholder=\"Date de début\"\n            value={filters.dateRange.startDate}\n            onChange={(e) => handleDateChange(\"startDate\", e.target.value)}\n          />\n          <span>-</span>\n          <DateInput\n            type=\"date\"\n            placeholder=\"Date de fin\"\n            value={filters.dateRange.endDate}\n            onChange={(e) => handleDateChange(\"endDate\", e.target.value)}\n          />\n        </DateRangeContainer>\n      </FiltersContainer>\n\n      {/* Affichage des filtres actifs */}\n      {getActiveFilters().length > 0 && (\n        <ActiveFiltersContainer>\n          {getActiveFilters().map((filter) => (\n            <ActiveFilter\n              key={`${filter.type}-${filter.id}`}\n              color={filter.color}\n            >\n              {filter.label}\n              <button onClick={() => removeFilter(filter.type, filter.id)}>\n                <FiX size={14} />\n              </button>\n            </ActiveFilter>\n          ))}\n        </ActiveFiltersContainer>\n      )}\n\n      {loading ? (\n        <LoadingIndicator>\n          <FiRefreshCw size={32} />\n          <div>Chargement des activités...</div>\n        </LoadingIndicator>\n      ) : error ? (\n        <ErrorMessage>\n          <div>Une erreur est survenue lors du chargement des activités.</div>\n        </ErrorMessage>\n      ) : filteredActivities.length === 0 ? (\n        <EmptyMessage>\n          <div>Aucune activité trouvée.</div>\n        </EmptyMessage>\n      ) : (\n        <>\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            <ActivitiesList>\n              {currentActivities.map((activity, index) => {\n                const color = getActivityColor(\n                  activity.type,\n                  activity.entity_type\n                );\n                const { date, time } = formatDateTime(activity.timestamp);\n                const details = extractActivityDetails(activity);\n\n                return (\n                  <ActivityItem\n                    key={activity.id || index}\n                    color={color}\n                    variants={itemVariants}\n                    whileHover={{ scale: 1.01 }}\n                  >\n                    <ActivityIcon color={color}>\n                      {getActivityIcon(activity.type, activity.entity_type)}\n                    </ActivityIcon>\n                    <ActivityContent>\n                      <ActivityDescription>\n                        {formatActivityDescription(activity)}\n                        <Badge color={color}>\n                          {getActivityTypeLabel(\n                            activity.type,\n                            activity.entity_type,\n                            activity.details\n                          )}\n                        </Badge>\n                      </ActivityDescription>\n                      <ActivityMeta>\n                        <ActivityTime>\n                          <FiClock size={12} /> {time}\n                        </ActivityTime>\n                        <ActivityDate>\n                          <FiCalendar size={12} /> {date}\n                        </ActivityDate>\n                        {activity.entity_type === \"vacation\" &&\n                          details.employeeName && (\n                            <ActivityEmployee>\n                              <FiUser size={12} /> {details.employeeName}\n                            </ActivityEmployee>\n                          )}\n                      </ActivityMeta>\n                    </ActivityContent>\n                  </ActivityItem>\n                );\n              })}\n            </ActivitiesList>\n          </motion.div>\n\n          {totalPages > 1 && (\n            <Pagination>\n              <PaginationButton\n                onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\n                disabled={currentPage === 1}\n              >\n                &lt;\n              </PaginationButton>\n\n              {pageNumbers.map((number) => (\n                <PaginationButton\n                  key={number}\n                  active={currentPage === number}\n                  onClick={() => setCurrentPage(number)}\n                >\n                  {number}\n                </PaginationButton>\n              ))}\n\n              <PaginationButton\n                onClick={() =>\n                  setCurrentPage((prev) => Math.min(prev + 1, totalPages))\n                }\n                disabled={currentPage === totalPages}\n              >\n                &gt;\n              </PaginationButton>\n            </Pagination>\n          )}\n        </>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default Activities;\n","import { useCallback, useMemo } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { API_URL } from \"../config/api\";\n\n/**\n * Hook personnalisé pour effectuer des appels API\n * @returns {Object} Méthodes pour effectuer des requêtes API\n */\nconst useApi = () => {\n  const handleResponse = useCallback(async (response) => {\n    try {\n      // Récupérer les en-têtes pour le débogage\n      const headers = {};\n      response.headers.forEach((value, key) => {\n        headers[key] = value;\n      });\n\n      console.log(\"Réponse du serveur:\", {\n        url: response.url,\n        status: response.status,\n        statusText: response.statusText,\n        headers: headers,\n      });\n\n      // Vérifier si la réponse est au format JSON\n      const contentType = response.headers.get(\"content-type\");\n      const isJson = contentType && contentType.includes(\"application/json\");\n\n      // Récupérer le corps de la réponse\n      let data;\n      if (isJson) {\n        data = await response.json();\n        console.log(\"Données JSON reçues:\", data);\n      } else {\n        const text = await response.text();\n        console.warn(\"Réponse non-JSON reçue:\", text);\n        try {\n          // Essayer de parser le texte comme JSON\n          data = JSON.parse(text);\n          console.log(\"Texte parsé comme JSON:\", data);\n        } catch (e) {\n          data = { message: text };\n        }\n      }\n\n      // Gérer les différents codes de statut\n      if (response.ok) {\n        return data;\n      } else {\n        // Gérer les erreurs d'authentification (401, 403)\n        if (response.status === 401 || response.status === 403) {\n          console.error(\"Erreur d'authentification:\", data);\n\n          // Afficher un message d'erreur mais ne pas rediriger\n          toast.error(\n            \"Session expirée ou accès non autorisé. Veuillez vous reconnecter.\"\n          );\n\n          // Ne pas supprimer le token et l'utilisateur du localStorage\n          // Ne pas rediriger vers la page de connexion\n\n          // Lancer une erreur avec un message clair\n          const error = new Error(\n            \"Veuillez vous connecter pour accéder à cette page.\"\n          );\n          error.status = response.status;\n          error.response = { status: response.status, data };\n          throw error;\n        }\n\n        // Gérer les erreurs serveur (500)\n        if (response.status === 500) {\n          console.error(\"Erreur serveur:\", data);\n          console.error(\"URL:\", response.url);\n          console.error(\"Méthode:\", response.method);\n\n          // Journaliser plus de détails pour le débogage\n          if (data.error) {\n            console.error(\"Détails de l'erreur:\", data.error);\n          }\n          if (data.stack) {\n            console.error(\"Stack trace:\", data.stack);\n          }\n        }\n\n        // Construire un message d'erreur détaillé\n        const errorMessage =\n          data.message ||\n          data.error ||\n          response.statusText ||\n          \"Erreur inconnue\";\n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.response = { status: response.status, data };\n\n        throw error;\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du traitement de la réponse:\", error);\n      throw error;\n    }\n  }, []);\n\n  const api = useMemo(() => {\n    const get = async (endpoint) => {\n      try {\n        // Vérifier que l'URL est correcte\n        const apiUrl = API_URL || \"http://localhost:5001\"; // Utiliser l'URL correcte\n        console.log(`[API] GET ${apiUrl}${endpoint}`);\n\n        // Gestion spéciale pour les départements - ne pas afficher d'erreurs\n        const isDepartmentsEndpoint = endpoint.includes(\"/departments\");\n\n        const token = localStorage.getItem(\"token\");\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          ...(token && { Authorization: `Bearer ${token}` }),\n        };\n\n        const response = await fetch(`${apiUrl}${endpoint}`, {\n          method: \"GET\",\n          headers,\n        });\n\n        // Pour les requêtes autres que les départements, vérifier si la réponse est OK\n        if (!isDepartmentsEndpoint && !response.ok) {\n          const errorData = await response.json();\n          throw new Error(\n            errorData.message || `Erreur lors de la requête GET ${endpoint}`\n          );\n        }\n\n        const result = await handleResponse(response);\n\n        // Pour les départements, on retourne un objet structuré\n        if (isDepartmentsEndpoint) {\n          return {\n            ok: response.ok,\n            status: response.status,\n            data: result,\n            headers: response.headers,\n          };\n        }\n\n        // Pour les autres requêtes, on retourne directement les données\n        return result;\n      } catch (error) {\n        console.error(`[API] GET ${endpoint} Error:`, error);\n\n        // Vérifier si c'est une requête pour les départements\n        const isDepartmentsEndpoint = endpoint.includes(\"/departments\");\n\n        // Si c'est une requête pour les départements, retourner un objet structuré\n        if (isDepartmentsEndpoint) {\n          console.log(\"Erreur silencieuse pour les départements\");\n          return {\n            ok: false,\n            status: error.status || 0,\n            data: { message: error.message || \"Erreur lors de la requête GET\" },\n            headers: new Headers(),\n          };\n        }\n\n        // Pour les autres requêtes, propager l'erreur\n        throw error;\n      }\n    };\n\n    // Fonction utilitaire pour convertir camelCase en snake_case\n    const camelToSnakeCase = (str) => {\n      // Cas spécial pour zipCode qui doit devenir zip_code\n      if (str === \"zipCode\") {\n        console.log(`Conversion spéciale: ${str} -> zip_code`);\n        return \"zip_code\";\n      }\n\n      // Conversion normale\n      const result = str.replace(\n        /[A-Z]/g,\n        (letter) => `_${letter.toLowerCase()}`\n      );\n      console.log(`Conversion camelCase -> snake_case: ${str} -> ${result}`);\n      return result;\n    };\n\n    const post = async (endpoint, data) => {\n      try {\n        // Vérifier que les données sont valides\n        if (!data || typeof data !== \"object\") {\n          console.error(\"Données invalides pour la requête POST:\", data);\n          throw new Error(\"Données invalides pour la requête POST\");\n        }\n\n        // Vérifier que l'URL est correcte\n        const apiUrl = API_URL || \"http://localhost:5001\"; // Utiliser l'URL correcte\n        console.log(`[API] POST ${apiUrl}${endpoint}`);\n\n        // Vérifier si le token est présent\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          console.error(\"Token d'authentification manquant\");\n          throw new Error(\"Veuillez vous connecter pour accéder à cette page.\");\n        }\n\n        // S'assurer que les données sont sérialisables\n        const cleanData = JSON.parse(JSON.stringify(data));\n\n        // Supprimer hourlyRate des données pour éviter l'erreur\n        if (cleanData.hourlyRate !== undefined) {\n          console.log(\"Suppression de hourlyRate des données\");\n          delete cleanData.hourlyRate;\n        }\n\n        // Convertir les données en snake_case pour le backend\n        const snakeCaseData = {};\n        for (const key in cleanData) {\n          snakeCaseData[camelToSnakeCase(key)] = cleanData[key];\n        }\n        console.log(\n          \"Données converties en snake_case pour POST:\",\n          snakeCaseData\n        );\n\n        // Configurer les en-têtes de la requête\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        };\n\n        // Journaliser les détails de la requête (sans le token complet)\n        console.log(\"Détails de la requête POST:\", {\n          endpoint,\n          dataSize: JSON.stringify(snakeCaseData).length,\n          headers: { ...headers, Authorization: \"Bearer [MASQUÉ]\" },\n        });\n\n        // Effectuer la requête avec un timeout\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 secondes de timeout\n\n        const response = await fetch(`${apiUrl}${endpoint}`, {\n          method: \"POST\",\n          headers,\n          body: JSON.stringify(snakeCaseData),\n          signal: controller.signal,\n        });\n\n        // Annuler le timeout\n        clearTimeout(timeoutId);\n\n        // Vérifier si la réponse est une erreur d'authentification\n        if (response.status === 401 || response.status === 403) {\n          console.error(\"Erreur d'authentification:\", response.status);\n          throw new Error(\"Veuillez vous connecter pour accéder à cette page.\");\n        }\n\n        // Traiter la réponse\n        return handleResponse(response);\n      } catch (error) {\n        // Gérer les erreurs spécifiques\n        if (error.name === \"AbortError\") {\n          console.error(\"La requête a été interrompue (timeout):\", error);\n          throw new Error(\n            \"La requête a pris trop de temps. Veuillez réessayer.\"\n          );\n        }\n\n        if (\n          error.message.includes(\"NetworkError\") ||\n          error.message.includes(\"Failed to fetch\")\n        ) {\n          console.error(\"Erreur réseau lors de la requête POST:\", error);\n          throw new Error(\n            \"Problème de connexion au serveur, veuillez vérifier votre connexion internet\"\n          );\n        }\n\n        // Journaliser et propager l'erreur\n        console.error(\"Erreur lors de la requête POST:\", error);\n        throw error;\n      }\n    };\n\n    const put = async (endpoint, data) => {\n      try {\n        // Vérifier que l'URL est correcte\n        const apiUrl = API_URL || \"http://localhost:5001\"; // Utiliser l'URL correcte\n        console.log(`[API] PUT ${apiUrl}${endpoint}`, data);\n\n        const token = localStorage.getItem(\"token\");\n\n        // Vérifier si le token est présent\n        if (!token) {\n          console.error(\"Token d'authentification manquant\");\n          throw new Error(\"Veuillez vous connecter pour accéder à cette page.\");\n        }\n\n        // S'assurer que les données sont sérialisables\n        const cleanData = JSON.parse(JSON.stringify(data));\n        console.log(\"Données nettoyées:\", cleanData);\n\n        // Supprimer hourlyRate des données pour éviter l'erreur\n        if (cleanData.hourlyRate !== undefined) {\n          console.log(\"Suppression de hourlyRate des données\");\n          delete cleanData.hourlyRate;\n        }\n\n        // Convertir les données en snake_case pour le backend\n        const snakeCaseData = {};\n        for (const key in cleanData) {\n          snakeCaseData[camelToSnakeCase(key)] = cleanData[key];\n        }\n        console.log(\"Données converties en snake_case:\", snakeCaseData);\n\n        const response = await fetch(`${apiUrl}${endpoint}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify(snakeCaseData),\n        });\n\n        // Vérifier si la réponse est une erreur d'authentification\n        if (response.status === 401 || response.status === 403) {\n          console.error(\"Erreur d'authentification:\", response.status);\n          throw new Error(\"Veuillez vous connecter pour accéder à cette page.\");\n        }\n\n        const result = await handleResponse(response);\n        console.log(`[API] PUT ${endpoint} Response:`, result);\n        return result;\n      } catch (error) {\n        console.error(`[API] PUT ${endpoint} Error:`, error);\n\n        // Ne pas rediriger automatiquement vers la page de connexion\n        // Laisser le composant gérer l'erreur\n\n        return {\n          ok: false,\n          status: error.status || 0,\n          data: { message: error.message || \"Erreur lors de la requête PUT\" },\n          headers: new Headers(),\n        };\n      }\n    };\n\n    const del = async (endpoint) => {\n      try {\n        // Vérifier que l'URL est correcte\n        const apiUrl = API_URL || \"http://localhost:5004\"; // Forcer l'URL correcte\n        console.log(`[API] DELETE ${apiUrl}${endpoint}`);\n\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          console.error(\"Token d'authentification manquant\");\n          throw new Error(\"Veuillez vous connecter pour accéder à cette page.\");\n        }\n\n        const response = await fetch(`${apiUrl}${endpoint}`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        // Vérifier si la réponse est une erreur d'authentification\n        if (response.status === 401 || response.status === 403) {\n          console.error(\"Erreur d'authentification:\", response.status);\n          throw new Error(\"Veuillez vous connecter pour accéder à cette page.\");\n        }\n\n        const result = await handleResponse(response);\n        console.log(`[API] DELETE ${endpoint} Response:`, result);\n        return result;\n      } catch (error) {\n        console.error(`[API] DELETE ${endpoint} Error:`, error);\n        return {\n          ok: false,\n          status: error.status || 0,\n          data: {\n            message: error.message || \"Erreur lors de la requête DELETE\",\n          },\n          headers: new Headers(),\n        };\n      }\n    };\n\n    return {\n      get,\n      post,\n      put,\n      delete: del,\n    };\n  }, [handleResponse]);\n\n  return api;\n};\n\nexport default useApi;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { FiCheck, FiEdit, FiPlus, FiTrash2, FiX } from \"react-icons/fi\";\nimport { API_ENDPOINTS } from \"../config/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useApi from \"./useApi\";\nimport useWebSocket from \"./useWebSocket\";\n\n/**\n * Hook personnalisé pour gérer les activités\n */\nconst useActivities = () => {\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const api = useApi();\n  const { user } = useAuth();\n\n  // Utiliser le hook WebSocket pour recevoir les mises à jour en temps réel\n  const {\n    activities: wsActivities,\n    socket,\n    requestActivitiesUpdate,\n    fallbackMode,\n  } = useWebSocket();\n\n  /**\n   * Récupère toutes les activités\n   * @param {boolean} refresh - Indique si on doit forcer le rafraîchissement des données\n   */\n  const fetchActivities = useCallback(\n    async (refresh = false) => {\n      try {\n        setLoading(true);\n        const response = await api.get(API_ENDPOINTS.ACTIVITIES.BASE);\n\n        // Vérifier si la réponse est un tableau ou contient des données valides\n        if (response && (Array.isArray(response) || response.data)) {\n          // S'assurer que les données sont un tableau\n          const activitiesData = Array.isArray(response)\n            ? response\n            : Array.isArray(response.data)\n            ? response.data\n            : [];\n\n          setActivities(activitiesData);\n          setError(null);\n        } else {\n          throw new Error(\n            \"Erreur lors du chargement des activités: format de réponse invalide\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors du chargement des activités:\", err);\n        setError(\"Erreur lors du chargement des activités\");\n        toast.error(\"Erreur lors du chargement des activités\");\n        // En cas d'erreur, s'assurer que activities reste un tableau vide\n        setActivities([]);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [api]\n  );\n\n  const createActivity = useCallback(\n    async (activityData) => {\n      try {\n        const response = await api.post(\n          API_ENDPOINTS.ACTIVITIES.BASE,\n          activityData\n        );\n\n        if (response.ok) {\n          setActivities((prev) => [...prev, response.data]);\n          toast.success(\"Activité créée avec succès\");\n          return { success: true, activity: response.data };\n        } else {\n          throw new Error(\n            response.data?.message || \"Erreur lors de la création de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la création de l'activité:\", err);\n        toast.error(\"Erreur lors de la création de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  const updateActivity = useCallback(\n    async (id, activityData) => {\n      try {\n        const response = await api.put(\n          `${API_ENDPOINTS.ACTIVITIES.BASE}/${id}`,\n          activityData\n        );\n\n        if (response.ok) {\n          setActivities((prev) =>\n            prev.map((activity) =>\n              activity.id === id ? { ...activity, ...response.data } : activity\n            )\n          );\n          toast.success(\"Activité mise à jour avec succès\");\n          return { success: true, activity: response.data };\n        } else {\n          throw new Error(\n            response.data?.message ||\n              \"Erreur lors de la mise à jour de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la mise à jour de l'activité:\", err);\n        toast.error(\"Erreur lors de la mise à jour de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  const deleteActivity = useCallback(\n    async (id) => {\n      try {\n        const response = await api.delete(\n          `${API_ENDPOINTS.ACTIVITIES.BASE}/${id}`\n        );\n\n        if (response.ok) {\n          setActivities((prev) =>\n            prev.filter((activity) => activity.id !== id)\n          );\n          toast.success(\"Activité supprimée avec succès\");\n          return { success: true };\n        } else {\n          throw new Error(\n            response.data?.message ||\n              \"Erreur lors de la suppression de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la suppression de l'activité:\", err);\n        toast.error(\"Erreur lors de la suppression de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  /**\n   * Traduit le type de congé en français\n   * @param {string} type - Le type de congé en anglais\n   * @returns {string} - Le type de congé en français\n   */\n  const translateVacationType = useCallback((type) => {\n    switch (type) {\n      case \"paid\":\n        return \"payé\";\n      case \"unpaid\":\n        return \"non payé\";\n      case \"sick\":\n        return \"maladie\";\n      case \"other\":\n        return \"autre\";\n      default:\n        return type || \"non spécifié\";\n    }\n  }, []);\n\n  /**\n   * Traduit le statut de congé en français\n   * @param {string} status - Le statut de congé en anglais\n   * @returns {string} - Le statut de congé en français\n   */\n  const translateVacationStatus = useCallback((status) => {\n    switch (status) {\n      case \"approved\":\n        return \"approuvé\";\n      case \"rejected\":\n        return \"rejeté\";\n      case \"pending\":\n        return \"en attente\";\n      default:\n        return status || \"non spécifié\";\n    }\n  }, []);\n\n  /**\n   * Formate les dates de début et de fin d'un congé\n   * @param {string} startDate - La date de début\n   * @param {string} endDate - La date de fin\n   * @returns {string} - Les dates formatées\n   */\n  const formatVacationDates = useCallback((startDate, endDate) => {\n    if (!startDate || !endDate) return \"\";\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    // Formater les dates\n    const startFormatted = start.toLocaleDateString(\"fr-FR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    });\n\n    const endFormatted = end.toLocaleDateString(\"fr-FR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    });\n\n    return `du ${startFormatted} au ${endFormatted}`;\n  }, []);\n\n  /**\n   * Formate la description d'une activité\n   * @param {Object} activity - L'activité à formater\n   * @returns {string} - La description formatée\n   */\n  const formatActivityDescription = useCallback(\n    (activity) => {\n      if (!activity) return \"\";\n\n      // Si l'activité a une description, l'utiliser directement\n      if (activity.description) {\n        return activity.description;\n      }\n\n      const { type, entity_type, entity_id, user_id, details, user } = activity;\n\n      // Obtenir le nom de l'utilisateur qui a effectué l'action\n      const userName = user && user.name ? user.name : \"Un utilisateur\";\n\n      // Formater le type d'entité\n      const entityName =\n        {\n          employee: \"un employé\",\n          schedule: \"un planning\",\n          vacation: \"une demande de congé\",\n          shift: \"un horaire\",\n          user: \"un utilisateur\",\n        }[entity_type] || entity_type;\n\n      // Formater le type d'action\n      const actionType =\n        {\n          create: \"a créé\",\n          update: \"a modifié\",\n          delete: \"a supprimé\",\n          approve: \"a approuvé\",\n          reject: \"a rejeté\",\n          vacation_status_update: \"a mis à jour le statut de\",\n        }[type] || type;\n\n      // Construire la description\n      let description = `${userName} ${actionType} ${entityName}`;\n\n      // Ajouter des détails si disponibles\n      if (details) {\n        let parsedDetails;\n        try {\n          parsedDetails =\n            typeof details === \"string\" ? JSON.parse(details) : details;\n        } catch (e) {\n          parsedDetails = details;\n        }\n\n        // Cas spécial pour les demandes de congés\n        if (entity_type === \"vacation\") {\n          // Pour la création de congés\n          if (\n            type === \"create\" &&\n            parsedDetails.employee_name &&\n            parsedDetails.start_date &&\n            parsedDetails.end_date\n          ) {\n            const employeeName = parsedDetails.employee_name;\n            const typeConge = translateVacationType(parsedDetails.type);\n            const dateRange = formatVacationDates(\n              parsedDetails.start_date,\n              parsedDetails.end_date\n            );\n\n            return `${userName} a créé une demande de congé ${typeConge} pour ${employeeName} ${dateRange}`;\n          }\n\n          // Pour la mise à jour du statut des congés\n          if (type === \"vacation_status_update\" && parsedDetails.new_status) {\n            const newStatus = parsedDetails.new_status;\n            const employeeName =\n              parsedDetails.employee_name ||\n              `Employé #${parsedDetails.employee_id || entity_id}`;\n            const dateRange =\n              parsedDetails.start_date && parsedDetails.end_date\n                ? formatVacationDates(\n                    parsedDetails.start_date,\n                    parsedDetails.end_date\n                  )\n                : \"\";\n            const typeConge = parsedDetails.vacation_type\n              ? translateVacationType(parsedDetails.vacation_type)\n              : \"\";\n\n            let statusText = translateVacationStatus(newStatus);\n\n            return `${userName} a ${statusText} la demande de congé${\n              typeConge ? \" \" + typeConge : \"\"\n            } de ${employeeName}${dateRange ? \" \" + dateRange : \"\"}`;\n          }\n\n          // Pour la mise à jour générale des congés\n          if (type === \"update\") {\n            const employeeName =\n              parsedDetails.employee_name ||\n              `Employé #${parsedDetails.employee_id || entity_id}`;\n            const dateRange =\n              parsedDetails.start_date && parsedDetails.end_date\n                ? formatVacationDates(\n                    parsedDetails.start_date,\n                    parsedDetails.end_date\n                  )\n                : \"\";\n            const typeConge = parsedDetails.vacation_type\n              ? translateVacationType(parsedDetails.vacation_type)\n              : \"\";\n\n            return `${userName} a modifié la demande de congé${\n              typeConge ? \" \" + typeConge : \"\"\n            } de ${employeeName}${dateRange ? \" \" + dateRange : \"\"}`;\n          }\n\n          // Pour la suppression des congés\n          if (type === \"delete\") {\n            const employeeName =\n              parsedDetails.employee_name ||\n              `Employé #${parsedDetails.employee_id || entity_id}`;\n            const dateRange =\n              parsedDetails.start_date && parsedDetails.end_date\n                ? formatVacationDates(\n                    parsedDetails.start_date,\n                    parsedDetails.end_date\n                  )\n                : \"\";\n            const typeConge = parsedDetails.vacation_type\n              ? translateVacationType(parsedDetails.vacation_type)\n              : \"\";\n\n            return `${userName} a supprimé la demande de congé${\n              typeConge ? \" \" + typeConge : \"\"\n            } de ${employeeName}${dateRange ? \" \" + dateRange : \"\"}`;\n          }\n        }\n\n        // Cas spécial pour les modifications de solde d'heures\n        if (\n          entity_type === \"employee\" &&\n          parsedDetails.action &&\n          (parsedDetails.action === \"Ajout d'heures\" ||\n            parsedDetails.action === \"Soustraction d'heures\")\n        ) {\n          const employeeName =\n            parsedDetails.employeeName || `Employé #${entity_id}`;\n          const hours = parsedDetails.hours || \"?\";\n          const action =\n            parsedDetails.action === \"Ajout d'heures\" ? \"ajouté\" : \"soustrait\";\n\n          return `${userName} a ${action} ${hours}h au solde d'heures de ${employeeName}`;\n        }\n\n        if (typeof parsedDetails === \"string\") {\n          description += ` : ${parsedDetails}`;\n        } else if (typeof parsedDetails === \"object\") {\n          // Ne pas ajouter les détails sous forme d'objet pour éviter [object Object]\n          if (parsedDetails.employeeName && entity_type === \"employee\") {\n            description += ` : ${parsedDetails.employeeName}`;\n          }\n        }\n      }\n\n      return description;\n    },\n    [formatVacationDates, translateVacationType, translateVacationStatus]\n  );\n\n  /**\n   * Formate la date d'une activité\n   * @param {string} timestamp - Le timestamp à formater\n   * @returns {string} - La date formatée\n   */\n  const formatActivityDate = useCallback((timestamp) => {\n    if (!timestamp) return \"\";\n\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffSec = Math.floor(diffMs / 1000);\n    const diffMin = Math.floor(diffSec / 60);\n    const diffHour = Math.floor(diffMin / 60);\n    const diffDay = Math.floor(diffHour / 24);\n\n    // Formater la date en fonction de son ancienneté\n    if (diffSec < 60) {\n      return \"à l'instant\";\n    } else if (diffMin < 60) {\n      return `il y a ${diffMin} minute${diffMin > 1 ? \"s\" : \"\"}`;\n    } else if (diffHour < 24) {\n      return `il y a ${diffHour} heure${diffHour > 1 ? \"s\" : \"\"}`;\n    } else if (diffDay < 7) {\n      return `il y a ${diffDay} jour${diffDay > 1 ? \"s\" : \"\"}`;\n    } else {\n      return date.toLocaleDateString(\"fr-FR\", {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n      });\n    }\n  }, []);\n\n  /**\n   * Obtient l'icône en fonction du type d'activité\n   * @param {string} type - Le type d'activité\n   * @returns {JSX.Element} - L'icône correspondante\n   */\n  const getActivityIcon = useCallback((type) => {\n    switch (type) {\n      case \"create\":\n        return <FiPlus />;\n      case \"update\":\n        return <FiEdit />;\n      case \"delete\":\n        return <FiTrash2 />;\n      case \"approve\":\n        return <FiCheck />;\n      case \"reject\":\n        return <FiX />;\n      default:\n        return null;\n    }\n  }, []);\n\n  // Mettre à jour les activités lorsque de nouvelles activités sont reçues via WebSocket\n  useEffect(() => {\n    if (\n      wsActivities &&\n      Array.isArray(wsActivities) &&\n      wsActivities.length > 0\n    ) {\n      console.log(\"Nouvelles activités reçues via WebSocket:\", wsActivities);\n\n      setActivities((prevActivities) => {\n        // S'assurer que prevActivities est un tableau\n        const prevActivitiesArray = Array.isArray(prevActivities)\n          ? prevActivities\n          : [];\n\n        // Créer un nouvel ensemble d'activités en combinant les anciennes et les nouvelles\n        const newActivitiesMap = new Map();\n\n        // Ajouter d'abord les nouvelles activités\n        wsActivities.forEach((activity) => {\n          newActivitiesMap.set(activity.id, activity);\n        });\n\n        // Ajouter les anciennes activités qui ne sont pas dans les nouvelles\n        prevActivitiesArray.forEach((activity) => {\n          if (!newActivitiesMap.has(activity.id)) {\n            newActivitiesMap.set(activity.id, activity);\n          }\n        });\n\n        // Convertir la Map en tableau et trier par date (plus récent en premier)\n        return Array.from(newActivitiesMap.values()).sort(\n          (a, b) => new Date(b.timestamp) - new Date(a.timestamp)\n        );\n      });\n\n      // Indiquer que le chargement est terminé\n      setLoading(false);\n    }\n  }, [wsActivities]);\n\n  // Charger les activités au montage du composant\n  useEffect(() => {\n    fetchActivities(); // Forcer le rafraîchissement initial\n\n    // Mettre à jour les activités toutes les 2 minutes\n    const interval = setInterval(() => {\n      fetchActivities(); // Forcer le rafraîchissement\n    }, 2 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, [fetchActivities]);\n\n  // Écouter les changements de connexion WebSocket\n  useEffect(() => {\n    if (socket && !fallbackMode) {\n      console.log(\"WebSocket connecté, on va rafraîchir les activités\");\n      requestActivitiesUpdate();\n    } else if (fallbackMode) {\n      console.log(\"Mode de secours WebSocket actif, utilisation de l'API REST\");\n      fetchActivities();\n    }\n  }, [socket, requestActivitiesUpdate, fallbackMode, fetchActivities]);\n\n  // Écouter les changements de mode de secours\n  useEffect(() => {\n    if (fallbackMode) {\n      console.log(\n        \"Passage en mode de secours, récupération des activités via API REST\"\n      );\n      fetchActivities();\n    }\n  }, [fallbackMode, fetchActivities]);\n\n  return {\n    activities,\n    loading,\n    error,\n    fetchActivities,\n    createActivity,\n    updateActivity,\n    deleteActivity,\n    getActivityIcon,\n    formatActivityDescription,\n    formatActivityDate,\n    formatVacationDates,\n    translateVacationType,\n    translateVacationStatus,\n  };\n};\n\nexport default useActivities;\n"],"names":["getActivityColor","type","entity_type","getActivityIcon","_jsx","FiSun","FiPlus","FiEdit","FiTrash2","FiCheck","FiX","FiInfo","translateVacationType","getActivityTypeLabel","details","vacationType","vacation_type","statusText","new_status","status","translateVacationStatus","PageContainer","styled","div","PageHeader","PageTitle","h1","_ref","theme","colors","text","primary","FiltersContainer","SearchInput","_ref2","borderRadius","medium","_ref3","border","_ref4","background","_ref5","_ref6","_ref7","primaryLight","_ref8","secondary","FilterButton","button","_ref9","_ref10","active","_ref11","_ref12","_ref13","backgroundAlt","_ref14","FilterDropdown","DropdownButton","DropdownMenu","_ref15","surface","_ref16","_ref17","shadows","_ref18","DropdownItem","_ref19","_ref20","selected","ActiveFiltersContainer","ActiveFilter","_ref21","color","_ref22","_ref23","small","_ref24","_ref25","error","DateRangeContainer","DateInput","input","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","RefreshButton","_ref32","_ref33","_ref34","_ref35","ActivitiesList","ActivityItem","motion","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41","ActivityIcon","_ref42","_ref43","ActivityContent","ActivityDescription","_ref44","Badge","span","_ref45","ActivityMeta","_ref46","ActivityTime","ActivityDate","ActivityEmployee","_ref47","LoadingIndicator","_ref48","ErrorMessage","_ref49","EmptyMessage","_ref50","Pagination","PaginationButton","_ref51","_ref52","_ref53","_ref54","_ref55","_ref56","_ref57","_ref58","_ref59","_ref60","extractActivityDetails","activity","JSON","parse","e","employeeName","employee_name","employeeId","employee_id","startDate","start_date","endDate","end_date","previousStatus","previous_status","ACTIVITY_TYPES","id","label","icon","ENTITY_TYPES","FiUser","FiCalendar","VACATION_TYPES","Activities","searchTerm","setSearchTerm","useState","currentPage","setCurrentPage","itemsPerPage","filters","setFilters","activityTypes","entityTypes","vacationTypes","dateRange","openDropdown","setOpenDropdown","activities","loading","fetchActivities","formatActivityDescription","useActivities","toggleDropdown","dropdown","toggleFilter","value","prev","currentFilters","index","indexOf","push","splice","handleDateChange","field","filteredActivities","Array","isArray","filter","matchesSearch","toLowerCase","includes","matchesActivityType","length","matchesEntityType","matchesVacationType","matchesDateRange","activityDate","Date","timestamp","setHours","indexOfLastItem","indexOfFirstItem","currentActivities","slice","totalPages","Math","ceil","pageNumbers","i","itemVariants","hidden","opacity","y","visible","transition","stiffness","damping","getActiveFilters","activeFilters","forEach","activityType","find","t","entityType","_jsxs","children","onClick","handleRefresh","disabled","FiRefreshCw","size","className","FiSearch","placeholder","onChange","target","FiChevronDown","map","removeFilter","_Fragment","variants","staggerChildren","initial","animate","date","time","formatDateTime","whileHover","scale","FiClock","max","number","min","useApi","handleResponse","useCallback","async","headers","response","key","console","log","url","contentType","get","data","json","warn","message","ok","toast","Error","method","stack","errorMessage","useMemo","camelToSnakeCase","str","result","replace","letter","apiUrl","API_URL","endpoint","isDepartmentsEndpoint","token","localStorage","getItem","Authorization","fetch","errorData","Headers","post","cleanData","stringify","undefined","hourlyRate","snakeCaseData","dataSize","controller","AbortController","timeoutId","setTimeout","abort","body","signal","clearTimeout","name","put","delete","setActivities","setLoading","setError","api","user","useAuth","wsActivities","socket","requestActivitiesUpdate","fallbackMode","useWebSocket","API_ENDPOINTS","ACTIVITIES","BASE","activitiesData","err","createActivity","activityData","success","_response$data","updateActivity","_response$data2","deleteActivity","_response$data3","formatVacationDates","start","end","toLocaleDateString","day","month","year","description","entity_id","user_id","userName","create","update","approve","reject","vacation_status_update","employee","schedule","vacation","shift","parsedDetails","newStatus","typeConge","action","hours","formatActivityDate","diffMs","diffSec","floor","diffMin","diffHour","diffDay","useEffect","prevActivities","prevActivitiesArray","newActivitiesMap","Map","set","has","from","values","sort","a","b","interval","setInterval","clearInterval"],"sourceRoot":""}