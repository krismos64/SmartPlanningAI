{"version":3,"file":"static/js/423.f3010661.chunk.js","mappings":"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","sources":["hooks/useVacations.js","hooks/useActivities.js","components/dashboard/RecentActivities.js","components/ui/SearchBar.js","pages/Dashboard.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { API_ENDPOINTS } from \"../config/api\";\nimport useApi from \"./useApi\";\n\n/**\n * Hook personnalisé pour gérer les congés\n * Version sans WebSocket pour éviter les problèmes de navigation\n */\nconst useVacations = () => {\n  const [vacations, setVacations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const api = useApi();\n  const isComponentMountedRef = useRef(true);\n  const pollingIntervalRef = useRef(null);\n  const POLLING_INTERVAL = 60000; // 60 secondes entre chaque vérification\n\n  // Marquer le composant comme monté/démonté\n  useEffect(() => {\n    isComponentMountedRef.current = true;\n\n    return () => {\n      isComponentMountedRef.current = false;\n\n      // Nettoyer l'intervalle de polling lors du démontage\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n        pollingIntervalRef.current = null;\n      }\n    };\n  }, []);\n\n  /**\n   * Fonction utilitaire pour réessayer une requête API\n   * @param {Function} apiCall - Fonction d'appel API à réessayer\n   * @param {number} maxRetries - Nombre maximum de tentatives\n   * @param {number} delay - Délai entre les tentatives (en ms)\n   * @returns {Promise} - Résultat de l'appel API\n   */\n  const retryApiCall = useCallback(\n    async (apiCall, maxRetries = 3, delay = 1000) => {\n      let lastError = null;\n      let retryCount = 0;\n\n      while (retryCount < maxRetries) {\n        try {\n          return await apiCall();\n        } catch (err) {\n          lastError = err;\n          retryCount++;\n\n          // Si c'est la dernière tentative, ne pas attendre\n          if (retryCount < maxRetries) {\n            // Utiliser un délai exponentiel\n            const retryDelay = delay * Math.pow(2, retryCount - 1);\n            console.log(\n              `Tentative ${retryCount}/${maxRetries} échouée, nouvelle tentative dans ${retryDelay}ms`\n            );\n            await new Promise((resolve) => setTimeout(resolve, retryDelay));\n          }\n        }\n      }\n\n      // Si toutes les tentatives ont échoué, lancer l'erreur\n      throw lastError;\n    },\n    []\n  );\n\n  // Fonction pour charger les congés\n  const fetchVacations = useCallback(\n    async (forceRefresh = false) => {\n      if (!isComponentMountedRef.current) return;\n\n      let retryCount = 0;\n      const maxRetries = 2;\n\n      // Vérifier si les données sont déjà en cache et récentes (moins de 5 minutes)\n      const cachedData = localStorage.getItem(\"cachedVacations\");\n      const cachedTimestamp = localStorage.getItem(\"cachedVacationsTimestamp\");\n\n      if (!forceRefresh && cachedData && cachedTimestamp) {\n        const now = new Date().getTime();\n        const cacheTime = parseInt(cachedTimestamp);\n        const fiveMinutes = 5 * 60 * 1000;\n\n        // Si le cache est récent (moins de 5 minutes), utiliser les données en cache\n        if (now - cacheTime < fiveMinutes) {\n          try {\n            const parsedData = JSON.parse(cachedData);\n            console.log(\"Utilisation des données en cache pour les congés\");\n            if (isComponentMountedRef.current) {\n              setVacations(parsedData);\n              setLoading(false);\n            }\n            return;\n          } catch (e) {\n            console.error(\"Erreur lors de la lecture du cache:\", e);\n            // Continuer avec le chargement normal si le cache est invalide\n          }\n        }\n      }\n\n      const loadVacations = async () => {\n        if (retryCount >= maxRetries || !isComponentMountedRef.current) {\n          if (isComponentMountedRef.current) {\n            setError(\n              \"Erreur lors du chargement des congés après plusieurs tentatives\"\n            );\n            setLoading(false);\n          }\n          return;\n        }\n\n        try {\n          console.log(\"Chargement des congés...\");\n          const token = localStorage.getItem(\"token\");\n\n          if (!token) {\n            console.error(\"Token d'authentification manquant\");\n            if (isComponentMountedRef.current) {\n              setError(\"Vous devez être connecté pour accéder à ces données\");\n              setLoading(false);\n            }\n            return;\n          }\n\n          const data = await api.get(API_ENDPOINTS.VACATIONS);\n          console.log(\"Données des congés reçues:\", data);\n\n          if (!isComponentMountedRef.current) return;\n\n          if (Array.isArray(data)) {\n            // Convertir les propriétés de snake_case à camelCase\n            const formattedData = data.map((vacation) => {\n              // Convertir les dates pour le calcul de la durée\n              const startDate = vacation.start_date || vacation.startDate;\n              const endDate = vacation.end_date || vacation.endDate;\n\n              // Calculer la durée en jours ouvrables selon la législation française\n              let duration = \"-\";\n              if (startDate && endDate) {\n                const start = new Date(startDate);\n                const end = new Date(endDate);\n\n                // Réinitialiser les heures pour éviter les problèmes de comparaison\n                start.setHours(0, 0, 0, 0);\n                end.setHours(0, 0, 0, 0);\n\n                // Compter les jours ouvrables (lundi au samedi, hors jours fériés)\n                let workableDays = 0;\n                const currentDate = new Date(start);\n\n                while (currentDate <= end) {\n                  // Si ce n'est pas un dimanche (0 = dimanche, 1-6 = lundi-samedi)\n                  if (currentDate.getDay() !== 0) {\n                    workableDays++;\n                  }\n\n                  // Passer au jour suivant\n                  currentDate.setDate(currentDate.getDate() + 1);\n                }\n\n                duration = `${workableDays} jour${\n                  workableDays > 1 ? \"s\" : \"\"\n                } ouvrable${workableDays > 1 ? \"s\" : \"\"}`;\n              }\n\n              // Créer un nouvel objet avec les propriétés converties\n              return {\n                ...vacation,\n                // Assurer que employeeName est défini, même si employee_name ne l'est pas\n                employeeName:\n                  vacation.employee_name ||\n                  vacation.employeeName ||\n                  \"Employé inconnu\",\n                // Convertir les dates si nécessaire\n                startDate: startDate,\n                endDate: endDate,\n                // Ajouter la durée calculée\n                duration: duration,\n                // Autres propriétés qui pourraient être en snake_case\n                employeeId: vacation.employee_id || vacation.employeeId,\n                approvedAt: vacation.approved_at || vacation.approvedAt,\n                approvedBy: vacation.approved_by || vacation.approvedBy,\n                rejectedAt: vacation.rejected_at || vacation.rejectedAt,\n                rejectedBy: vacation.rejected_by || vacation.rejectedBy,\n                rejectionReason:\n                  vacation.rejection_reason || vacation.rejectionReason,\n                createdAt: vacation.created_at || vacation.createdAt,\n                updatedAt: vacation.updated_at || vacation.updatedAt,\n              };\n            });\n\n            console.log(\"Données des congés formatées:\", formattedData);\n\n            if (isComponentMountedRef.current) {\n              setVacations(formattedData);\n              setError(null);\n            }\n\n            // Mettre en cache les données formatées\n            try {\n              localStorage.setItem(\n                \"cachedVacations\",\n                JSON.stringify(formattedData)\n              );\n              localStorage.setItem(\n                \"cachedVacationsTimestamp\",\n                new Date().getTime().toString()\n              );\n            } catch (e) {\n              console.error(\"Erreur lors de la mise en cache des données:\", e);\n              // Continuer même si la mise en cache échoue\n            }\n          } else {\n            console.error(\"Format de données invalide:\", data);\n            if (isComponentMountedRef.current) {\n              setError(\"Format de données invalide\");\n            }\n          }\n\n          if (isComponentMountedRef.current) {\n            setLoading(false);\n          }\n        } catch (err) {\n          console.error(\"Erreur lors du chargement des congés:\", err);\n\n          if (isComponentMountedRef.current) {\n            setError(err.message || \"Erreur lors du chargement des congés\");\n          }\n\n          // Réessayer avec un délai exponentiel mais plus court\n          retryCount++;\n          const retryDelay = 500 * Math.pow(2, retryCount); // Délai plus court\n          console.log(\n            `Nouvelle tentative dans ${retryDelay}ms (${retryCount}/${maxRetries})`\n          );\n\n          // Utiliser setTimeout avec une vérification du montage\n          const timeoutId = setTimeout(() => {\n            if (isComponentMountedRef.current) {\n              loadVacations();\n            }\n          }, retryDelay);\n\n          // Nettoyer le timeout si le composant est démonté\n          return () => clearTimeout(timeoutId);\n        }\n      };\n\n      if (isComponentMountedRef.current) {\n        setLoading(true);\n        setError(null);\n      }\n\n      await loadVacations();\n    },\n    [api]\n  );\n\n  // Charger les congés au montage du composant et configurer le polling\n  useEffect(() => {\n    // Charger les données initiales\n    fetchVacations();\n\n    // Configurer un intervalle pour rafraîchir les données périodiquement\n    pollingIntervalRef.current = setInterval(() => {\n      if (isComponentMountedRef.current) {\n        console.log(\"Rafraîchissement périodique des données de congés\");\n        fetchVacations(true); // forceRefresh = true pour ignorer le cache\n      }\n    }, POLLING_INTERVAL);\n\n    // Nettoyer lors du démontage\n    return () => {\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n        pollingIntervalRef.current = null;\n      }\n    };\n  }, [fetchVacations]);\n\n  /**\n   * Crée une nouvelle demande de congé\n   */\n  const createVacation = useCallback(\n    async (vacationData) => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        console.log(\"Données originales de la demande de congé:\", vacationData);\n\n        // Vérifier que les données essentielles sont présentes\n        if (!vacationData.employeeId && !vacationData.employee_id) {\n          const errorMsg = \"L'identifiant de l'employé est requis\";\n          toast.error(errorMsg);\n          setLoading(false);\n          return { success: false, error: errorMsg };\n        }\n\n        if (\n          (!vacationData.startDate && !vacationData.start_date) ||\n          (!vacationData.endDate && !vacationData.end_date)\n        ) {\n          const errorMsg = \"Les dates de début et de fin sont requises\";\n          toast.error(errorMsg);\n          setLoading(false);\n          return { success: false, error: errorMsg };\n        }\n\n        // Formater les données pour correspondre à la structure de la base de données\n        const formattedData = {\n          employee_id: vacationData.employeeId || vacationData.employee_id,\n          start_date: vacationData.startDate || vacationData.start_date,\n          end_date: vacationData.endDate || vacationData.end_date,\n          type: vacationData.type || \"paid\",\n          reason: vacationData.reason || \"\",\n          status: \"pending\",\n        };\n\n        // Convertir les dates au format YYYY-MM-DD si elles ne le sont pas déjà\n        if (\n          formattedData.start_date &&\n          !formattedData.start_date.includes(\"-\")\n        ) {\n          const startDate = new Date(formattedData.start_date);\n          formattedData.start_date = startDate.toISOString().split(\"T\")[0];\n        }\n\n        if (formattedData.end_date && !formattedData.end_date.includes(\"-\")) {\n          const endDate = new Date(formattedData.end_date);\n          formattedData.end_date = endDate.toISOString().split(\"T\")[0];\n        }\n\n        console.log(\n          \"Données formatées pour la création de congé:\",\n          formattedData\n        );\n\n        // Récupérer le token d'authentification\n        const token = localStorage.getItem(\"token\");\n        console.log(\"Token d'authentification présent:\", !!token);\n\n        // Appel API avec retry en cas d'échec\n        const apiCall = async () => {\n          try {\n            const response = await api.post(\n              API_ENDPOINTS.VACATIONS,\n              formattedData\n            );\n            console.log(\"Réponse de l'API:\", response);\n\n            // Mettre à jour l'état local\n            setVacations((prevVacations) => [...prevVacations, response]);\n\n            // Notifier le succès\n            toast.success(\"Demande de congé créée avec succès\");\n\n            return { success: true, data: response };\n          } catch (error) {\n            console.error(\n              \"Erreur lors de la création de la demande de congé:\",\n              error\n            );\n\n            // Afficher un message d'erreur plus précis si disponible\n            const errorMessage =\n              error.response?.data?.message ||\n              error.response?.data?.error ||\n              error.message ||\n              \"Erreur lors de la création de la demande de congé\";\n\n            toast.error(errorMessage);\n            setError(errorMessage);\n\n            throw error;\n          }\n        };\n\n        // Exécuter l'appel API avec retry\n        const result = await retryApiCall(apiCall, 2, 1000);\n        setLoading(false);\n\n        // Rafraîchir les données après création\n        fetchVacations(true);\n\n        return result;\n      } catch (error) {\n        console.error(\n          \"Erreur finale lors de la création de la demande de congé:\",\n          error\n        );\n        setLoading(false);\n        setError(\n          error.message || \"Erreur lors de la création de la demande de congé\"\n        );\n        return { success: false, error: error.message };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Met à jour une demande de congé existante\n   */\n  const updateVacation = useCallback(\n    async (id, vacationData) => {\n      try {\n        const apiCall = async () => {\n          const response = await api.put(\n            `${API_ENDPOINTS.VACATIONS}/${id}`,\n            vacationData\n          );\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                \"Erreur lors de la mise à jour de la demande de congé\"\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        const data = await retryApiCall(apiCall);\n\n        setVacations((prev) =>\n          prev.map((vacation) => (vacation.id === id ? data : vacation))\n        );\n\n        toast.success(\"Demande de congé mise à jour avec succès\");\n\n        // Rafraîchir les données après mise à jour\n        fetchVacations(true);\n\n        return { success: true, vacation: data };\n      } catch (err) {\n        console.error(\n          \"Erreur lors de la mise à jour de la demande de congé:\",\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la mise à jour de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Supprime une demande de congé\n   */\n  const deleteVacation = useCallback(\n    async (id) => {\n      try {\n        const apiCall = async () => {\n          const response = await api.delete(`${API_ENDPOINTS.VACATIONS}/${id}`);\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                \"Erreur lors de la suppression de la demande de congé\"\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        await retryApiCall(apiCall);\n\n        setVacations((prev) => prev.filter((vacation) => vacation.id !== id));\n\n        toast.success(\"Demande de congé supprimée avec succès\");\n\n        // Rafraîchir les données après suppression\n        fetchVacations(true);\n\n        return { success: true };\n      } catch (err) {\n        console.error(\n          \"Erreur lors de la suppression de la demande de congé:\",\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la suppression de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Approuve ou rejette une demande de congé\n   */\n  const updateVacationStatus = useCallback(\n    async (id, status, comment = \"\") => {\n      try {\n        const apiCall = async () => {\n          const response = await api.put(\n            `${API_ENDPOINTS.VACATIONS}/${id}/status`,\n            {\n              status,\n              comment,\n            }\n          );\n\n          // Vérifier si la réponse est un objet avec une propriété ok\n          if (\n            response &&\n            typeof response === \"object\" &&\n            \"ok\" in response &&\n            !response.ok\n          ) {\n            throw new Error(\n              response.data?.message ||\n                `Erreur lors de la ${\n                  status === \"approved\" ? \"validation\" : \"rejet\"\n                } de la demande de congé`\n            );\n          }\n\n          return response;\n        };\n\n        // Utiliser la fonction de retry\n        const data = await retryApiCall(apiCall);\n\n        setVacations((prev) =>\n          prev.map((vacation) => (vacation.id === id ? data : vacation))\n        );\n\n        toast.success(\n          `Demande de congé ${\n            status === \"approved\" ? \"approuvée\" : \"rejetée\"\n          } avec succès`\n        );\n\n        // Rafraîchir les données après mise à jour du statut\n        fetchVacations(true);\n\n        return { success: true, vacation: data };\n      } catch (err) {\n        console.error(\n          `Erreur lors de la ${\n            status === \"approved\" ? \"validation\" : \"rejet\"\n          } de la demande de congé:`,\n          err\n        );\n        const errorMessage = err.message || \"Erreur inconnue\";\n        toast.error(\n          `Erreur lors de la ${\n            status === \"approved\" ? \"validation\" : \"rejet\"\n          } de la demande de congé: ${errorMessage}`\n        );\n        return { success: false, error: errorMessage };\n      }\n    },\n    [api, retryApiCall, fetchVacations]\n  );\n\n  /**\n   * Filtre les congés par statut\n   * @param {string|null} status - Le statut à filtrer (pending, approved, rejected) ou null pour tous\n   * @returns {Array} - Les congés filtrés\n   */\n  const getVacationsByStatus = useCallback(\n    (status) => {\n      if (!status) return vacations;\n      return vacations.filter((vacation) => vacation.status === status);\n    },\n    [vacations]\n  );\n\n  // Fonction pour forcer un rafraîchissement des données\n  const refreshVacations = useCallback(() => {\n    return fetchVacations(true);\n  }, [fetchVacations]);\n\n  return {\n    vacations,\n    loading,\n    error,\n    fetchVacations,\n    refreshVacations,\n    createVacation,\n    updateVacation,\n    deleteVacation,\n    updateVacationStatus,\n    getVacationsByStatus,\n    approveVacation: (id) => updateVacationStatus(id, \"approved\"),\n    rejectVacation: (id, comment) =>\n      updateVacationStatus(id, \"rejected\", comment),\n  };\n};\n\nexport default useVacations;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { FiCheck, FiEdit, FiPlus, FiTrash2, FiX } from \"react-icons/fi\";\nimport { API_ENDPOINTS } from \"../config/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useApi from \"./useApi\";\nimport useWebSocket from \"./useWebSocket\";\n\n/**\n * Hook personnalisé pour gérer les activités\n */\nconst useActivities = () => {\n  const [activities, setActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const api = useApi();\n  const { user } = useAuth();\n\n  // Utiliser le hook WebSocket pour recevoir les mises à jour en temps réel\n  const {\n    activities: wsActivities,\n    socket,\n    requestActivitiesUpdate,\n    fallbackMode,\n  } = useWebSocket();\n\n  /**\n   * Récupère toutes les activités\n   * @param {boolean} refresh - Indique si on doit forcer le rafraîchissement des données\n   */\n  const fetchActivities = useCallback(\n    async (refresh = false) => {\n      try {\n        setLoading(true);\n        const response = await api.get(API_ENDPOINTS.ACTIVITIES.BASE);\n\n        // Vérifier si la réponse est un tableau ou contient des données valides\n        if (response && (Array.isArray(response) || response.data)) {\n          // S'assurer que les données sont un tableau\n          const activitiesData = Array.isArray(response)\n            ? response\n            : Array.isArray(response.data)\n            ? response.data\n            : [];\n\n          setActivities(activitiesData);\n          setError(null);\n        } else {\n          throw new Error(\n            \"Erreur lors du chargement des activités: format de réponse invalide\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors du chargement des activités:\", err);\n        setError(\"Erreur lors du chargement des activités\");\n        toast.error(\"Erreur lors du chargement des activités\");\n        // En cas d'erreur, s'assurer que activities reste un tableau vide\n        setActivities([]);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [api]\n  );\n\n  const createActivity = useCallback(\n    async (activityData) => {\n      try {\n        const response = await api.post(\n          API_ENDPOINTS.ACTIVITIES.BASE,\n          activityData\n        );\n\n        if (response.ok) {\n          setActivities((prev) => [...prev, response.data]);\n          toast.success(\"Activité créée avec succès\");\n          return { success: true, activity: response.data };\n        } else {\n          throw new Error(\n            response.data?.message || \"Erreur lors de la création de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la création de l'activité:\", err);\n        toast.error(\"Erreur lors de la création de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  const updateActivity = useCallback(\n    async (id, activityData) => {\n      try {\n        const response = await api.put(\n          `${API_ENDPOINTS.ACTIVITIES.BASE}/${id}`,\n          activityData\n        );\n\n        if (response.ok) {\n          setActivities((prev) =>\n            prev.map((activity) =>\n              activity.id === id ? { ...activity, ...response.data } : activity\n            )\n          );\n          toast.success(\"Activité mise à jour avec succès\");\n          return { success: true, activity: response.data };\n        } else {\n          throw new Error(\n            response.data?.message ||\n              \"Erreur lors de la mise à jour de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la mise à jour de l'activité:\", err);\n        toast.error(\"Erreur lors de la mise à jour de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  const deleteActivity = useCallback(\n    async (id) => {\n      try {\n        const response = await api.delete(\n          `${API_ENDPOINTS.ACTIVITIES.BASE}/${id}`\n        );\n\n        if (response.ok) {\n          setActivities((prev) =>\n            prev.filter((activity) => activity.id !== id)\n          );\n          toast.success(\"Activité supprimée avec succès\");\n          return { success: true };\n        } else {\n          throw new Error(\n            response.data?.message ||\n              \"Erreur lors de la suppression de l'activité\"\n          );\n        }\n      } catch (err) {\n        console.error(\"Erreur lors de la suppression de l'activité:\", err);\n        toast.error(\"Erreur lors de la suppression de l'activité\");\n        return { success: false, error: err.message };\n      }\n    },\n    [api]\n  );\n\n  /**\n   * Traduit le type de congé en français\n   * @param {string} type - Le type de congé en anglais\n   * @returns {string} - Le type de congé en français\n   */\n  const translateVacationType = useCallback((type) => {\n    switch (type) {\n      case \"paid\":\n        return \"payé\";\n      case \"unpaid\":\n        return \"non payé\";\n      case \"sick\":\n        return \"maladie\";\n      case \"other\":\n        return \"autre\";\n      default:\n        return type || \"non spécifié\";\n    }\n  }, []);\n\n  /**\n   * Traduit le statut de congé en français\n   * @param {string} status - Le statut de congé en anglais\n   * @returns {string} - Le statut de congé en français\n   */\n  const translateVacationStatus = useCallback((status) => {\n    switch (status) {\n      case \"approved\":\n        return \"approuvé\";\n      case \"rejected\":\n        return \"rejeté\";\n      case \"pending\":\n        return \"en attente\";\n      default:\n        return status || \"non spécifié\";\n    }\n  }, []);\n\n  /**\n   * Formate les dates de début et de fin d'un congé\n   * @param {string} startDate - La date de début\n   * @param {string} endDate - La date de fin\n   * @returns {string} - Les dates formatées\n   */\n  const formatVacationDates = useCallback((startDate, endDate) => {\n    if (!startDate || !endDate) return \"\";\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n\n    // Formater les dates\n    const startFormatted = start.toLocaleDateString(\"fr-FR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    });\n\n    const endFormatted = end.toLocaleDateString(\"fr-FR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    });\n\n    return `du ${startFormatted} au ${endFormatted}`;\n  }, []);\n\n  /**\n   * Formate la description d'une activité\n   * @param {Object} activity - L'activité à formater\n   * @returns {string} - La description formatée\n   */\n  const formatActivityDescription = useCallback(\n    (activity) => {\n      if (!activity) return \"\";\n\n      // Si l'activité a une description, l'utiliser directement\n      if (activity.description) {\n        return activity.description;\n      }\n\n      const { type, entity_type, entity_id, user_id, details, user } = activity;\n\n      // Obtenir le nom de l'utilisateur qui a effectué l'action\n      const userName = user && user.name ? user.name : \"Un utilisateur\";\n\n      // Formater le type d'entité\n      const entityName =\n        {\n          employee: \"un employé\",\n          schedule: \"un planning\",\n          vacation: \"une demande de congé\",\n          shift: \"un horaire\",\n          user: \"un utilisateur\",\n        }[entity_type] || entity_type;\n\n      // Formater le type d'action\n      const actionType =\n        {\n          create: \"a créé\",\n          update: \"a modifié\",\n          delete: \"a supprimé\",\n          approve: \"a approuvé\",\n          reject: \"a rejeté\",\n          vacation_status_update: \"a mis à jour le statut de\",\n        }[type] || type;\n\n      // Construire la description\n      let description = `${userName} ${actionType} ${entityName}`;\n\n      // Ajouter des détails si disponibles\n      if (details) {\n        let parsedDetails;\n        try {\n          parsedDetails =\n            typeof details === \"string\" ? JSON.parse(details) : details;\n        } catch (e) {\n          parsedDetails = details;\n        }\n\n        // Cas spécial pour les demandes de congés\n        if (entity_type === \"vacation\") {\n          // Pour la création de congés\n          if (\n            type === \"create\" &&\n            parsedDetails.employee_name &&\n            parsedDetails.start_date &&\n            parsedDetails.end_date\n          ) {\n            const employeeName = parsedDetails.employee_name;\n            const typeConge = translateVacationType(parsedDetails.type);\n            const dateRange = formatVacationDates(\n              parsedDetails.start_date,\n              parsedDetails.end_date\n            );\n\n            return `${userName} a créé une demande de congé ${typeConge} pour ${employeeName} ${dateRange}`;\n          }\n\n          // Pour la mise à jour du statut des congés\n          if (type === \"vacation_status_update\" && parsedDetails.new_status) {\n            const newStatus = parsedDetails.new_status;\n            const employeeName =\n              parsedDetails.employee_name ||\n              `Employé #${parsedDetails.employee_id || entity_id}`;\n            const dateRange =\n              parsedDetails.start_date && parsedDetails.end_date\n                ? formatVacationDates(\n                    parsedDetails.start_date,\n                    parsedDetails.end_date\n                  )\n                : \"\";\n            const typeConge = parsedDetails.vacation_type\n              ? translateVacationType(parsedDetails.vacation_type)\n              : \"\";\n\n            let statusText = translateVacationStatus(newStatus);\n\n            return `${userName} a ${statusText} la demande de congé${\n              typeConge ? \" \" + typeConge : \"\"\n            } de ${employeeName}${dateRange ? \" \" + dateRange : \"\"}`;\n          }\n\n          // Pour la mise à jour générale des congés\n          if (type === \"update\") {\n            const employeeName =\n              parsedDetails.employee_name ||\n              `Employé #${parsedDetails.employee_id || entity_id}`;\n            const dateRange =\n              parsedDetails.start_date && parsedDetails.end_date\n                ? formatVacationDates(\n                    parsedDetails.start_date,\n                    parsedDetails.end_date\n                  )\n                : \"\";\n            const typeConge = parsedDetails.vacation_type\n              ? translateVacationType(parsedDetails.vacation_type)\n              : \"\";\n\n            return `${userName} a modifié la demande de congé${\n              typeConge ? \" \" + typeConge : \"\"\n            } de ${employeeName}${dateRange ? \" \" + dateRange : \"\"}`;\n          }\n\n          // Pour la suppression des congés\n          if (type === \"delete\") {\n            const employeeName =\n              parsedDetails.employee_name ||\n              `Employé #${parsedDetails.employee_id || entity_id}`;\n            const dateRange =\n              parsedDetails.start_date && parsedDetails.end_date\n                ? formatVacationDates(\n                    parsedDetails.start_date,\n                    parsedDetails.end_date\n                  )\n                : \"\";\n            const typeConge = parsedDetails.vacation_type\n              ? translateVacationType(parsedDetails.vacation_type)\n              : \"\";\n\n            return `${userName} a supprimé la demande de congé${\n              typeConge ? \" \" + typeConge : \"\"\n            } de ${employeeName}${dateRange ? \" \" + dateRange : \"\"}`;\n          }\n        }\n\n        // Cas spécial pour les modifications de solde d'heures\n        if (\n          entity_type === \"employee\" &&\n          parsedDetails.action &&\n          (parsedDetails.action === \"Ajout d'heures\" ||\n            parsedDetails.action === \"Soustraction d'heures\")\n        ) {\n          const employeeName =\n            parsedDetails.employeeName || `Employé #${entity_id}`;\n          const hours = parsedDetails.hours || \"?\";\n          const action =\n            parsedDetails.action === \"Ajout d'heures\" ? \"ajouté\" : \"soustrait\";\n\n          return `${userName} a ${action} ${hours}h au solde d'heures de ${employeeName}`;\n        }\n\n        if (typeof parsedDetails === \"string\") {\n          description += ` : ${parsedDetails}`;\n        } else if (typeof parsedDetails === \"object\") {\n          // Ne pas ajouter les détails sous forme d'objet pour éviter [object Object]\n          if (parsedDetails.employeeName && entity_type === \"employee\") {\n            description += ` : ${parsedDetails.employeeName}`;\n          }\n        }\n      }\n\n      return description;\n    },\n    [formatVacationDates, translateVacationType, translateVacationStatus]\n  );\n\n  /**\n   * Formate la date d'une activité\n   * @param {string} timestamp - Le timestamp à formater\n   * @returns {string} - La date formatée\n   */\n  const formatActivityDate = useCallback((timestamp) => {\n    if (!timestamp) return \"\";\n\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now - date;\n    const diffSec = Math.floor(diffMs / 1000);\n    const diffMin = Math.floor(diffSec / 60);\n    const diffHour = Math.floor(diffMin / 60);\n    const diffDay = Math.floor(diffHour / 24);\n\n    // Formater la date en fonction de son ancienneté\n    if (diffSec < 60) {\n      return \"à l'instant\";\n    } else if (diffMin < 60) {\n      return `il y a ${diffMin} minute${diffMin > 1 ? \"s\" : \"\"}`;\n    } else if (diffHour < 24) {\n      return `il y a ${diffHour} heure${diffHour > 1 ? \"s\" : \"\"}`;\n    } else if (diffDay < 7) {\n      return `il y a ${diffDay} jour${diffDay > 1 ? \"s\" : \"\"}`;\n    } else {\n      return date.toLocaleDateString(\"fr-FR\", {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n      });\n    }\n  }, []);\n\n  /**\n   * Obtient l'icône en fonction du type d'activité\n   * @param {string} type - Le type d'activité\n   * @returns {JSX.Element} - L'icône correspondante\n   */\n  const getActivityIcon = useCallback((type) => {\n    switch (type) {\n      case \"create\":\n        return <FiPlus />;\n      case \"update\":\n        return <FiEdit />;\n      case \"delete\":\n        return <FiTrash2 />;\n      case \"approve\":\n        return <FiCheck />;\n      case \"reject\":\n        return <FiX />;\n      default:\n        return null;\n    }\n  }, []);\n\n  // Mettre à jour les activités lorsque de nouvelles activités sont reçues via WebSocket\n  useEffect(() => {\n    if (\n      wsActivities &&\n      Array.isArray(wsActivities) &&\n      wsActivities.length > 0\n    ) {\n      console.log(\"Nouvelles activités reçues via WebSocket:\", wsActivities);\n\n      setActivities((prevActivities) => {\n        // S'assurer que prevActivities est un tableau\n        const prevActivitiesArray = Array.isArray(prevActivities)\n          ? prevActivities\n          : [];\n\n        // Créer un nouvel ensemble d'activités en combinant les anciennes et les nouvelles\n        const newActivitiesMap = new Map();\n\n        // Ajouter d'abord les nouvelles activités\n        wsActivities.forEach((activity) => {\n          newActivitiesMap.set(activity.id, activity);\n        });\n\n        // Ajouter les anciennes activités qui ne sont pas dans les nouvelles\n        prevActivitiesArray.forEach((activity) => {\n          if (!newActivitiesMap.has(activity.id)) {\n            newActivitiesMap.set(activity.id, activity);\n          }\n        });\n\n        // Convertir la Map en tableau et trier par date (plus récent en premier)\n        return Array.from(newActivitiesMap.values()).sort(\n          (a, b) => new Date(b.timestamp) - new Date(a.timestamp)\n        );\n      });\n\n      // Indiquer que le chargement est terminé\n      setLoading(false);\n    }\n  }, [wsActivities]);\n\n  // Charger les activités au montage du composant\n  useEffect(() => {\n    fetchActivities(); // Forcer le rafraîchissement initial\n\n    // Mettre à jour les activités toutes les 2 minutes\n    const interval = setInterval(() => {\n      fetchActivities(); // Forcer le rafraîchissement\n    }, 2 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, [fetchActivities]);\n\n  // Écouter les changements de connexion WebSocket\n  useEffect(() => {\n    if (socket && !fallbackMode) {\n      console.log(\"WebSocket connecté, on va rafraîchir les activités\");\n      requestActivitiesUpdate();\n    } else if (fallbackMode) {\n      console.log(\"Mode de secours WebSocket actif, utilisation de l'API REST\");\n      fetchActivities();\n    }\n  }, [socket, requestActivitiesUpdate, fallbackMode, fetchActivities]);\n\n  // Écouter les changements de mode de secours\n  useEffect(() => {\n    if (fallbackMode) {\n      console.log(\n        \"Passage en mode de secours, récupération des activités via API REST\"\n      );\n      fetchActivities();\n    }\n  }, [fallbackMode, fetchActivities]);\n\n  return {\n    activities,\n    loading,\n    error,\n    fetchActivities,\n    createActivity,\n    updateActivity,\n    deleteActivity,\n    getActivityIcon,\n    formatActivityDescription,\n    formatActivityDate,\n    formatVacationDates,\n    translateVacationType,\n    translateVacationStatus,\n  };\n};\n\nexport default useActivities;\n","import { format } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { motion } from \"framer-motion\";\nimport {\n  FiCalendar,\n  FiCheck,\n  FiClock,\n  FiEdit,\n  FiInfo,\n  FiPlus,\n  FiRefreshCw,\n  FiSun,\n  FiTrash2,\n  FiUser,\n  FiX,\n} from \"react-icons/fi\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\nimport useActivities from \"../../hooks/useActivities\";\n\n// Animations\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0 0 0 0 rgba(79, 70, 229, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 10px rgba(79, 70, 229, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(79, 70, 229, 0);\n  }\n`;\n\n// Composants stylisés\nconst ActivitiesContainer = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  margin-bottom: 1.5rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.shadows.large};\n  }\n`;\n\nconst ActivitiesHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  padding-bottom: 0.75rem;\n`;\n\nconst ActivitiesTitle = styled.h3`\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n\n  svg {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst RefreshButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: ${({ theme }) => theme.colors.primaryLight};\n  border: none;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  font-size: 0.875rem;\n  padding: 0.5rem 0.75rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.primary}22;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  svg {\n    transition: transform 0.3s ease;\n  }\n\n  &:hover svg {\n    transform: rotate(180deg);\n  }\n`;\n\nconst ActivitiesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst ActivityItem = styled(motion.div)`\n  display: flex;\n  align-items: flex-start;\n  padding: 0.75rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  transition: all 0.3s ease;\n  border-left: 3px solid ${({ color }) => color};\n  background-color: ${({ theme, color }) => `${color}08`};\n\n  &:hover {\n    background-color: ${({ theme, color }) => `${color}15`};\n    transform: translateX(5px);\n  }\n`;\n\nconst ActivityIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  margin-right: 1rem;\n  flex-shrink: 0;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: scale(1.1);\n    animation: ${pulse} 1.5s infinite;\n  }\n`;\n\nconst ActivityContent = styled.div`\n  flex: 1;\n`;\n\nconst ActivityDescription = styled.div`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  line-height: 1.4;\n`;\n\nconst ActivityMeta = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  font-size: 0.75rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst ActivityTime = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n`;\n\nconst ActivityDate = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n`;\n\nconst ActivityEmployee = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.colors.primary};\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n\n  svg {\n    animation: spin 1s linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.error};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  padding: 2rem 0;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst ViewAllButton = styled.button`\n  display: block;\n  width: 100%;\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.primary};\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  padding: 0.75rem;\n  margin-top: 1.5rem;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-weight: 500;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary};\n    color: white;\n  }\n`;\n\nconst Badge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ color }) => color};\n  color: white;\n  border-radius: 12px;\n  padding: 0.25rem 0.5rem;\n  font-size: 0.7rem;\n  font-weight: 500;\n  margin-left: 0.5rem;\n`;\n\n// Fonction pour obtenir la couleur en fonction du type d'activité\nconst getActivityColor = (type, entity_type) => {\n  // Si c'est une activité liée aux congés, utiliser une couleur spécifique\n  if (entity_type === \"vacation\") {\n    return \"#6366F1\"; // indigo pour les congés\n  }\n\n  // Sinon, utiliser la couleur en fonction du type d'activité\n  switch (type) {\n    case \"create\":\n      return \"#10B981\"; // vert\n    case \"update\":\n      return \"#F59E0B\"; // orange\n    case \"delete\":\n      return \"#EF4444\"; // rouge\n    case \"approve\":\n      return \"#3B82F6\"; // bleu\n    case \"reject\":\n      return \"#EC4899\"; // rose\n    case \"system\":\n      return \"#8B5CF6\"; // violet\n    case \"vacation_status_update\":\n      return \"#6366F1\"; // indigo\n    default:\n      return \"#4F46E5\"; // indigo (par défaut)\n  }\n};\n\n// Fonction pour obtenir l'icône en fonction du type d'activité\nconst getActivityIcon = (type, entity_type) => {\n  // Si c'est une activité liée aux congés, utiliser une icône spécifique\n  if (entity_type === \"vacation\") {\n    return <FiSun />;\n  }\n\n  // Sinon, utiliser l'icône en fonction du type d'activité\n  switch (type) {\n    case \"create\":\n      return <FiPlus />;\n    case \"update\":\n      return <FiEdit />;\n    case \"delete\":\n      return <FiTrash2 />;\n    case \"approve\":\n      return <FiCheck />;\n    case \"reject\":\n      return <FiX />;\n    case \"system\":\n      return <FiInfo />;\n    case \"vacation_status_update\":\n      return <FiSun />;\n    default:\n      return <FiInfo />;\n  }\n};\n\n// Fonction pour obtenir le libellé en fonction du type d'activité\nconst getActivityTypeLabel = (type, entity_type, details) => {\n  // Si c'est une activité liée aux congés, utiliser un libellé spécifique\n  if (entity_type === \"vacation\") {\n    // Récupérer le type de congé si disponible\n    let vacationType = \"\";\n    if (details && typeof details === \"object\") {\n      if (details.type) {\n        vacationType = translateVacationType(details.type);\n      } else if (details.vacation_type) {\n        vacationType = translateVacationType(details.vacation_type);\n      }\n    }\n\n    switch (type) {\n      case \"create\":\n        return `Nouvelle demande${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"update\":\n        return `Modification congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"delete\":\n        return `Suppression congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"approve\":\n        return `Approbation congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"reject\":\n        return `Rejet congé${vacationType ? \" \" + vacationType : \"\"}`;\n      case \"vacation_status_update\":\n        // Récupérer le nouveau statut si disponible\n        let statusText = \"\";\n        if (details && typeof details === \"object\" && details.new_status) {\n          statusText = translateVacationStatus(details.new_status);\n        }\n        return `Congé ${statusText}${vacationType ? \" \" + vacationType : \"\"}`;\n      default:\n        return `Congé${vacationType ? \" \" + vacationType : \"\"}`;\n    }\n  }\n\n  // Sinon, utiliser le libellé en fonction du type d'activité\n  switch (type) {\n    case \"create\":\n      return \"Création\";\n    case \"update\":\n      return \"Modification\";\n    case \"delete\":\n      return \"Suppression\";\n    case \"approve\":\n      return \"Approbation\";\n    case \"reject\":\n      return \"Rejet\";\n    case \"system\":\n      return \"Système\";\n    case \"vacation_status_update\":\n      return \"Mise à jour statut\";\n    default:\n      return \"Information\";\n  }\n};\n\n// Fonction pour formater la date et l'heure\nconst formatDateTime = (timestamp) => {\n  if (!timestamp) return { date: \"\", time: \"\" };\n\n  const date = new Date(timestamp);\n\n  return {\n    date: format(date, \"dd MMMM yyyy\", { locale: fr }),\n    time: format(date, \"HH:mm:ss\", { locale: fr }),\n  };\n};\n\n// Fonction pour traduire le type de congé en français\nconst translateVacationType = (type) => {\n  switch (type) {\n    case \"paid\":\n      return \"payé\";\n    case \"unpaid\":\n      return \"non payé\";\n    case \"sick\":\n      return \"maladie\";\n    case \"other\":\n      return \"autre\";\n    default:\n      return type || \"non spécifié\";\n  }\n};\n\n// Fonction pour traduire le statut de congé en français\nconst translateVacationStatus = (status) => {\n  switch (status) {\n    case \"approved\":\n      return \"approuvé\";\n    case \"rejected\":\n      return \"rejeté\";\n    case \"pending\":\n      return \"en attente\";\n    default:\n      return status || \"non spécifié\";\n  }\n};\n\nconst RecentActivities = () => {\n  const navigate = useNavigate();\n  const {\n    activities,\n    loading,\n    error,\n    fetchActivities,\n    formatActivityDescription,\n    formatActivityDate,\n  } = useActivities();\n\n  const handleRefresh = () => {\n    fetchActivities(true);\n  };\n\n  const handleViewAllActivities = () => {\n    navigate(\"/activities\");\n  };\n\n  // S'assurer que activities est un tableau\n  const activitiesList = Array.isArray(activities) ? activities : [];\n\n  // Variantes d'animation pour les éléments de la liste\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        type: \"spring\",\n        stiffness: 100,\n        damping: 10,\n      },\n    },\n  };\n\n  // Fonction pour extraire les détails pertinents d'une activité\n  const extractActivityDetails = (activity) => {\n    if (!activity || !activity.details) return {};\n\n    let details = activity.details;\n    if (typeof details === \"string\") {\n      try {\n        details = JSON.parse(details);\n      } catch (e) {\n        return {};\n      }\n    }\n\n    // Extraire les informations pertinentes\n    return {\n      employeeName: details.employee_name || \"\",\n      employeeId: details.employee_id || \"\",\n      vacationType: details.type || details.vacation_type || \"\",\n      startDate: details.start_date || \"\",\n      endDate: details.end_date || \"\",\n      status: details.status || details.new_status || \"\",\n      previousStatus: details.previous_status || \"\",\n    };\n  };\n\n  return (\n    <ActivitiesContainer>\n      <ActivitiesHeader>\n        <ActivitiesTitle>\n          <FiClock size={18} /> Activités récentes\n          {!loading && activitiesList.length > 0 && (\n            <Badge color=\"#4F46E5\">{activitiesList.length}</Badge>\n          )}\n        </ActivitiesTitle>\n        <RefreshButton onClick={handleRefresh} disabled={loading}>\n          <FiRefreshCw size={16} className={loading ? \"animate-spin\" : \"\"} />\n          Actualiser\n        </RefreshButton>\n      </ActivitiesHeader>\n\n      {loading ? (\n        <LoadingIndicator>\n          <FiRefreshCw size={32} />\n          <div>Chargement des activités...</div>\n        </LoadingIndicator>\n      ) : error ? (\n        <ErrorMessage>\n          <FiX size={32} />\n          <div>Une erreur est survenue lors du chargement des activités.</div>\n        </ErrorMessage>\n      ) : activitiesList.length === 0 ? (\n        <EmptyMessage>\n          <FiInfo size={32} />\n          <div>Aucune activité récente.</div>\n        </EmptyMessage>\n      ) : (\n        <>\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            <ActivitiesList>\n              {activitiesList.slice(0, 5).map((activity, index) => {\n                const color = getActivityColor(\n                  activity.type,\n                  activity.entity_type\n                );\n                const { date, time } = formatDateTime(activity.timestamp);\n                const details = extractActivityDetails(activity);\n\n                // Traduire le type et le statut de congé si c'est une activité liée aux congés\n                let typeLabel = \"\";\n                let statusLabel = \"\";\n                if (activity.entity_type === \"vacation\") {\n                  typeLabel = details.vacationType\n                    ? translateVacationType(details.vacationType)\n                    : \"\";\n                  statusLabel = details.status\n                    ? translateVacationStatus(details.status)\n                    : \"\";\n                }\n\n                return (\n                  <ActivityItem\n                    key={activity.id || index}\n                    color={color}\n                    variants={itemVariants}\n                    whileHover={{ scale: 1.01 }}\n                  >\n                    <ActivityIcon color={color}>\n                      {getActivityIcon(activity.type, activity.entity_type)}\n                    </ActivityIcon>\n                    <ActivityContent>\n                      <ActivityDescription>\n                        {formatActivityDescription(activity)}\n                        <Badge color={color}>\n                          {getActivityTypeLabel(\n                            activity.type,\n                            activity.entity_type,\n                            activity.details\n                          )}\n                        </Badge>\n                      </ActivityDescription>\n                      <ActivityMeta>\n                        <ActivityTime>\n                          <FiClock size={12} /> {time}\n                        </ActivityTime>\n                        <ActivityDate>\n                          <FiCalendar size={12} /> {date}\n                        </ActivityDate>\n                        {activity.entity_type === \"vacation\" &&\n                          details.employeeName && (\n                            <ActivityEmployee>\n                              <FiUser size={12} /> {details.employeeName}\n                            </ActivityEmployee>\n                          )}\n                      </ActivityMeta>\n                    </ActivityContent>\n                  </ActivityItem>\n                );\n              })}\n            </ActivitiesList>\n          </motion.div>\n\n          {activitiesList.length > 5 && (\n            <ViewAllButton onClick={handleViewAllActivities}>\n              Voir toutes les activités ({activitiesList.length})\n            </ViewAllButton>\n          )}\n        </>\n      )}\n    </ActivitiesContainer>\n  );\n};\n\nexport default RecentActivities;\n","import { useEffect, useRef, useState } from \"react\";\nimport {\n  FiCalendar,\n  FiCheckCircle,\n  FiClock,\n  FiSearch,\n  FiSun,\n  FiUser,\n  FiX,\n  FiXCircle,\n} from \"react-icons/fi\";\nimport styled from \"styled-components\";\n\n// Composants stylisés\nconst SearchContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: ${({ expanded }) => (expanded ? \"600px\" : \"300px\")};\n  transition: max-width 0.3s ease;\n`;\n\nconst SearchInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border: 1px solid\n    ${({ theme, focused }) =>\n      focused ? theme.colors.primary : theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 0.5rem 1rem;\n  box-shadow: ${({ theme, focused }) =>\n    focused ? `0 0 0 2px ${theme.colors.primary}22` : \"none\"};\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${({ theme, focused }) =>\n      focused ? theme.colors.primary : `${theme.colors.primary}88`};\n  }\n`;\n\nconst SearchIcon = styled.div`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin-right: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SearchInput = styled.input`\n  flex: 1;\n  border: none;\n  background: none;\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  outline: none;\n  padding: 0.25rem 0;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.text.disabled};\n  }\n`;\n\nconst ClearButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  cursor: pointer;\n  padding: 0.25rem;\n  margin-left: 0.5rem;\n  border-radius: 50%;\n  display: ${({ visible }) => (visible ? \"flex\" : \"none\")};\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst AdvancedButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  cursor: pointer;\n  padding: 0.25rem;\n  margin-left: 0.5rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  transform: ${({ expanded }) => (expanded ? \"rotate(180deg)\" : \"rotate(0)\")};\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst SearchResults = styled.div`\n  position: absolute;\n  top: calc(100% + 0.5rem);\n  left: 0;\n  right: 0;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.large};\n  max-height: 400px;\n  overflow-y: auto;\n  z-index: 100;\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n`;\n\nconst ResultGroup = styled.div`\n  padding: 0.5rem 0;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  }\n`;\n\nconst ResultGroupTitle = styled.div`\n  padding: 0.5rem 1rem;\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n`;\n\nconst ResultItem = styled.div`\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n  }\n`;\n\nconst ResultIcon = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: ${({ theme, color }) =>\n    color ? `${color}22` : `${theme.colors.primary}22`};\n  color: ${({ theme, color }) => color || theme.colors.primary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n`;\n\nconst ResultContent = styled.div`\n  flex: 1;\n`;\n\nconst ResultTitle = styled.div`\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.25rem;\n`;\n\nconst ResultDescription = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst HighlightedText = styled.span`\n  background-color: ${({ theme }) => `${theme.colors.primary}33`};\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 0.25rem;\n  border-radius: 2px;\n`;\n\nconst NoResults = styled.div`\n  padding: 1.5rem;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst AdvancedFilters = styled.div`\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  margin-top: 0.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n`;\n\nconst FiltersGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst FilterLabel = styled.label`\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst FilterSelect = styled.select`\n  padding: 0.5rem;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  background-color: ${({ theme }) => theme.colors.background};\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: 0.875rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.primary};\n  }\n`;\n\nconst FilterActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n  margin-top: 1rem;\n`;\n\nconst FilterButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  ${({ primary, theme }) =>\n    primary\n      ? `\n    background-color: ${theme.colors.primary};\n    color: white;\n    border: 1px solid ${theme.colors.primary};\n    \n    &:hover {\n      background-color: ${theme.colors.primary}dd;\n    }\n  `\n      : `\n    background-color: transparent;\n    color: ${theme.colors.text.primary};\n    border: 1px solid ${theme.colors.border};\n    \n    &:hover {\n      background-color: ${theme.colors.background};\n      border-color: ${theme.colors.text.secondary};\n    }\n  `}\n`;\n\n// Fonction de recherche par défaut (utilisée uniquement si customGetResults n'est pas fourni)\nconst getSearchResults = (query) => {\n  // Cette fonction est un placeholder et ne sera utilisée que si customGetResults n'est pas fourni\n  return [];\n};\n\n// Composant principal\nconst SearchBar = ({\n  placeholder = \"Rechercher...\",\n  onSearch,\n  initialResults = [],\n  customGetResults,\n}) => {\n  const [query, setQuery] = useState(\"\");\n  const [focused, setFocused] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState(initialResults);\n\n  const searchRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Gérer les clics en dehors du composant\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (searchRef.current && !searchRef.current.contains(event.target)) {\n        setFocused(false);\n        setShowResults(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  // Mettre à jour les résultats lorsque la requête change\n  useEffect(() => {\n    if (query.length > 1) {\n      if (customGetResults) {\n        // Utiliser la fonction personnalisée si fournie\n        onSearch(query);\n      } else {\n        // Utiliser la fonction par défaut\n        const searchResults = getSearchResults(query);\n        setResults(searchResults);\n      }\n      setShowResults(true);\n    } else {\n      setResults([]);\n      setShowResults(false);\n    }\n  }, [query, customGetResults, onSearch]);\n\n  // Mettre à jour les résultats lorsque initialResults change\n  useEffect(() => {\n    if (initialResults && initialResults.length > 0) {\n      setResults(initialResults);\n      if (query.length > 1) {\n        setShowResults(true);\n      }\n    }\n  }, [initialResults, query]);\n\n  const handleInputChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleInputFocus = () => {\n    setFocused(true);\n    if (query.length > 1) {\n      setShowResults(true);\n    }\n  };\n\n  const handleClear = () => {\n    setQuery(\"\");\n    setResults([]);\n    setShowResults(false);\n    inputRef.current.focus();\n  };\n\n  const handleResultClick = (item) => {\n    if (onSearch) {\n      onSearch(item);\n    }\n    setShowResults(false);\n  };\n\n  // Mettre en surbrillance les termes de recherche\n  const highlightText = (text, query) => {\n    if (!query || !text) return text;\n\n    const parts = text.split(new RegExp(`(${query})`, \"gi\"));\n    return parts.map((part, index) =>\n      part.toLowerCase() === query.toLowerCase() ? (\n        <HighlightedText key={index}>{part}</HighlightedText>\n      ) : (\n        part\n      )\n    );\n  };\n\n  return (\n    <div ref={searchRef}>\n      <SearchContainer>\n        <SearchInputWrapper focused={focused}>\n          <SearchIcon>\n            <FiSearch />\n          </SearchIcon>\n          <SearchInput\n            ref={inputRef}\n            type=\"text\"\n            placeholder={placeholder}\n            value={query}\n            onChange={handleInputChange}\n            onFocus={handleInputFocus}\n          />\n          <ClearButton\n            visible={query.length > 0}\n            onClick={handleClear}\n            aria-label=\"Effacer la recherche\"\n          >\n            <FiX />\n          </ClearButton>\n        </SearchInputWrapper>\n\n        <SearchResults visible={showResults && results.length > 0}>\n          {results.length === 0 ? (\n            <NoResults>Aucun résultat trouvé pour \"{query}\"</NoResults>\n          ) : (\n            results.map((group, groupIndex) => (\n              <ResultGroup key={groupIndex}>\n                <ResultGroupTitle>{group.title}</ResultGroupTitle>\n                {group.items.map((item, itemIndex) => (\n                  <ResultItem\n                    key={itemIndex}\n                    onClick={() => handleResultClick(item)}\n                  >\n                    <ResultIcon color={item.color}>\n                      {item.type === \"employee\" ? (\n                        <FiUser />\n                      ) : item.type === \"vacation\" ? (\n                        <FiSun />\n                      ) : (\n                        <FiCalendar />\n                      )}\n                    </ResultIcon>\n                    <ResultContent>\n                      <ResultTitle>\n                        {highlightText(item.name, query)}\n                        {item.status && (\n                          <span style={{ marginLeft: \"8px\" }}>\n                            {item.status === \"approved\" ? (\n                              <FiCheckCircle color=\"#10B981\" />\n                            ) : item.status === \"rejected\" ? (\n                              <FiXCircle color=\"#EF4444\" />\n                            ) : (\n                              <FiClock color=\"#F59E0B\" />\n                            )}\n                          </span>\n                        )}\n                      </ResultTitle>\n                      <ResultDescription>\n                        {item.type === \"employee\"\n                          ? item.role\n                          : item.type === \"vacation\"\n                          ? `${item.employee} (${item.dates})`\n                          : item.date}\n                      </ResultDescription>\n                    </ResultContent>\n                  </ResultItem>\n                ))}\n              </ResultGroup>\n            ))\n          )}\n        </SearchResults>\n      </SearchContainer>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { motion } from \"framer-motion\";\nimport Lottie from \"lottie-react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  FiArrowRight,\n  FiBarChart2,\n  FiCalendar,\n  FiClock,\n  FiPieChart,\n  FiSun,\n  FiUsers,\n} from \"react-icons/fi\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport robotAnimation from \"../assets/animations/robot.json\";\nimport RecentActivities from \"../components/dashboard/RecentActivities\";\nimport SearchBar from \"../components/ui/SearchBar\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useEmployees from \"../hooks/useEmployees\";\nimport useVacations from \"../hooks/useVacations\";\nimport { formatDate } from \"../utils/dateUtils\";\n\n// Composants stylisés\nconst DashboardContainer = styled.div`\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst DashboardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n`;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n`;\n\nconst AnimationContainer = styled.div`\n  width: 80px;\n  height: 80px;\n  flex-shrink: 0;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.75rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst PageDescription = styled.p`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0.5rem 0 0 0;\n`;\n\nconst WelcomeSection = styled(motion.div)`\n  margin-bottom: 2rem;\n`;\n\nconst WelcomeCard = styled(motion.div)`\n  background: linear-gradient(\n    135deg,\n    ${({ theme }) => theme.colors.primary},\n    ${({ theme }) => theme.colors.primary}dd\n  );\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 2rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  color: white;\n  position: relative;\n  overflow: hidden;\n\n  h1 {\n    font-size: 1.5rem;\n    margin: 0 0 1rem 0;\n    font-weight: 600;\n  }\n\n  p {\n    margin: 0;\n    line-height: 1.5;\n    opacity: 0.9;\n    max-width: 80%;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: -50px;\n    right: -50px;\n    width: 200px;\n    height: 200px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.1);\n    z-index: 1;\n  }\n`;\n\nconst SearchSection = styled(motion.div)`\n  margin-bottom: 2rem;\n`;\n\nconst StatsGrid = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n`;\n\nconst StatCard = styled(motion.div)`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${({ theme }) => theme.shadows.large};\n  }\n`;\n\nconst StatHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst StatTitle = styled.h3`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0;\n`;\n\nconst StatIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.25rem;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst StatInfo = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme, positive }) =>\n    positive\n      ? theme.colors.success\n      : positive === false\n      ? theme.colors.error\n      : theme.colors.text.secondary};\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  margin-top: 0.5rem;\n`;\n\nconst DashboardSections = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1.5rem;\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.25rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0 0 1rem 0;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst QuickActionsSection = styled(motion.div)`\n  margin-bottom: 2rem;\n`;\n\nconst QuickActionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n\nconst QuickActionCard = styled(motion.div)`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${({ theme }) => theme.shadows.large};\n    background-color: ${({ theme, color }) =>\n      color ? `${color}11` : theme.colors.backgroundAlt};\n  }\n`;\n\nconst ActionIcon = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n`;\n\nconst ActionTitle = styled.h3`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0 0 0.5rem 0;\n`;\n\nconst ActionDescription = styled.p`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0;\n`;\n\nconst UpcomingSection = styled(motion.div)`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  height: fit-content;\n`;\n\nconst UpcomingList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst UpcomingItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.75rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  background-color: ${({ theme, color }) =>\n    color ? `${color}11` : theme.colors.backgroundAlt};\n  transition: all 0.2s ease;\n\n  &:hover {\n    transform: translateX(5px);\n  }\n`;\n\nconst UpcomingIcon = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: ${({ color }) => `${color}22`};\n  color: ${({ color }) => color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  margin-right: 1rem;\n  flex-shrink: 0;\n`;\n\nconst UpcomingContent = styled.div`\n  flex: 1;\n`;\n\nconst UpcomingTitle = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 0.25rem;\n  font-weight: 500;\n`;\n\nconst UpcomingDate = styled.div`\n  font-size: 0.75rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n`;\n\nconst ViewAllLink = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ChartSection = styled(motion.div)`\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n  margin-bottom: 2rem;\n`;\n\nconst ChartPlaceholder = styled.div`\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: 0.875rem;\n`;\n\n// Animations\nconst fadeInUp = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n};\n\nconst staggerContainer = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\n\nconst Dashboard = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const { employees, isLoading: isLoadingEmployees } = useEmployees();\n  const { vacations, isLoading: isLoadingVacations } = useVacations();\n  const [stats, setStats] = useState({\n    totalEmployees: 0,\n    pendingVacations: 0,\n    upcomingVacations: [],\n    todayAbsent: 0,\n  });\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Fonction pour obtenir le prénom et le nom de l'utilisateur\n  const getUserFullName = () => {\n    if (!user) return \"Utilisateur\";\n    if (user.first_name && user.last_name) {\n      return `${user.first_name} ${user.last_name}`;\n    }\n    return user.username || \"Utilisateur\";\n  };\n\n  // Fonction pour obtenir les résultats de recherche\n  const getSearchResults = (query) => {\n    if (!query || query.length < 2) return [];\n\n    const lowercaseQuery = query.toLowerCase();\n\n    // Filtrer les employés\n    let filteredEmployees = employees.filter(\n      (employee) =>\n        employee.first_name.toLowerCase().includes(lowercaseQuery) ||\n        employee.last_name.toLowerCase().includes(lowercaseQuery) ||\n        employee.email.toLowerCase().includes(lowercaseQuery) ||\n        (employee.department &&\n          employee.department.toLowerCase().includes(lowercaseQuery))\n    );\n\n    // Filtrer les congés\n    let filteredVacations = vacations.filter((vacation) => {\n      const employeeName =\n        `${vacation.employee_first_name} ${vacation.employee_last_name}`.toLowerCase();\n      const startDate = new Date(vacation.start_date).toLocaleDateString(\n        \"fr-FR\"\n      );\n      const endDate = new Date(vacation.end_date).toLocaleDateString(\"fr-FR\");\n      const dateRange = `${startDate} - ${endDate}`;\n\n      return (\n        employeeName.includes(lowercaseQuery) ||\n        (vacation.type &&\n          vacation.type.toLowerCase().includes(lowercaseQuery)) ||\n        dateRange.includes(lowercaseQuery)\n      );\n    });\n\n    // Préparer les résultats\n    const results = [];\n\n    if (filteredEmployees.length > 0) {\n      results.push({\n        title: \"Employés\",\n        items: filteredEmployees.map((employee) => ({\n          id: employee.id,\n          type: \"employee\",\n          name: `${employee.first_name} ${employee.last_name}`,\n          role: employee.department || \"Non spécifié\",\n          color: \"#4F46E5\",\n        })),\n      });\n    }\n\n    if (filteredVacations.length > 0) {\n      results.push({\n        title: \"Congés\",\n        items: filteredVacations.map((vacation) => {\n          // Déterminer la couleur et l'icône en fonction du statut\n          let color = \"#F59E0B\"; // Par défaut (pending)\n\n          if (vacation.status === \"approved\") {\n            color = \"#10B981\";\n          } else if (vacation.status === \"rejected\") {\n            color = \"#EF4444\";\n          }\n\n          const startDate = new Date(vacation.start_date).toLocaleDateString(\n            \"fr-FR\"\n          );\n          const endDate = new Date(vacation.end_date).toLocaleDateString(\n            \"fr-FR\"\n          );\n\n          return {\n            id: vacation.id,\n            type: \"vacation\",\n            name: vacation.type || \"Congé\",\n            employee: `${vacation.employee_first_name} ${vacation.employee_last_name}`,\n            dates: `${startDate} - ${endDate}`,\n            status: vacation.status,\n            color: color,\n          };\n        }),\n      });\n    }\n\n    return results;\n  };\n\n  // Gérer la recherche\n  const handleSearch = (query) => {\n    if (typeof query === \"string\") {\n      const results = getSearchResults(query);\n      setSearchResults(results);\n    } else {\n      // Si un élément de résultat est cliqué\n      console.log(\"Élément sélectionné:\", query);\n\n      // Rediriger vers la page appropriée en fonction du type\n      if (query.type === \"employee\") {\n        navigate(`/employees/${query.id}`);\n      } else if (query.type === \"vacation\") {\n        navigate(`/vacations/${query.id}`);\n      }\n    }\n  };\n\n  // Calculer les statistiques\n  useEffect(() => {\n    if (!isLoadingEmployees && !isLoadingVacations) {\n      // Total des employés\n      const totalEmployees = employees?.length || 0;\n\n      // Demandes de congés en attente\n      const pendingVacations =\n        vacations?.filter((v) => v.status === \"pending\")?.length || 0;\n\n      // Prochains congés (approuvés, à venir)\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      const upcomingVacations =\n        vacations\n          ?.filter((v) => {\n            const startDate = new Date(v.start_date);\n            return v.status === \"approved\" && startDate >= today;\n          })\n          ?.sort((a, b) => new Date(a.start_date) - new Date(b.start_date))\n          ?.slice(0, 5) || [];\n\n      // Employés absents aujourd'hui\n      const todayAbsent =\n        vacations?.filter((v) => {\n          const startDate = new Date(v.start_date);\n          const endDate = new Date(v.end_date);\n          startDate.setHours(0, 0, 0, 0);\n          endDate.setHours(23, 59, 59, 999);\n          return (\n            v.status === \"approved\" && today >= startDate && today <= endDate\n          );\n        })?.length || 0;\n\n      setStats({\n        totalEmployees,\n        pendingVacations,\n        upcomingVacations,\n        todayAbsent,\n      });\n    }\n  }, [employees, vacations, isLoadingEmployees, isLoadingVacations]);\n\n  // Naviguer vers différentes pages\n  const navigateTo = (path) => {\n    navigate(path);\n  };\n\n  return (\n    <DashboardContainer>\n      <DashboardHeader>\n        <HeaderLeft>\n          <AnimationContainer>\n            <Lottie\n              animationData={robotAnimation}\n              loop={true}\n              style={{ width: \"100%\", height: \"100%\" }}\n            />\n          </AnimationContainer>\n          <TitleContainer>\n            <PageTitle>Tableau de bord</PageTitle>\n            <PageDescription>\n              Bienvenue sur votre assistant de planification intelligent\n            </PageDescription>\n          </TitleContainer>\n        </HeaderLeft>\n      </DashboardHeader>\n\n      <WelcomeSection initial=\"hidden\" animate=\"visible\" variants={fadeInUp}>\n        <WelcomeCard>\n          <h1>Bonjour, {getUserFullName()}!</h1>\n          <p>\n            Bienvenue sur votre tableau de bord. Voici un aperçu de votre\n            activité récente et des tâches à venir.\n          </p>\n        </WelcomeCard>\n      </WelcomeSection>\n\n      <SearchSection initial=\"hidden\" animate=\"visible\" variants={fadeInUp}>\n        <SearchBar\n          placeholder=\"Rechercher un employé, un congé...\"\n          onSearch={handleSearch}\n          initialResults={searchResults}\n          customGetResults={true}\n        />\n      </SearchSection>\n\n      <StatsGrid initial=\"hidden\" animate=\"visible\" variants={staggerContainer}>\n        <StatCard variants={fadeInUp}>\n          <StatHeader>\n            <StatTitle>Total employés</StatTitle>\n            <StatIcon color=\"#4F46E5\">\n              <FiUsers />\n            </StatIcon>\n          </StatHeader>\n          <StatValue>{stats.totalEmployees}</StatValue>\n          <StatInfo>Équipe complète</StatInfo>\n        </StatCard>\n\n        <StatCard variants={fadeInUp}>\n          <StatHeader>\n            <StatTitle>Demandes en attente</StatTitle>\n            <StatIcon color=\"#F59E0B\">\n              <FiClock />\n            </StatIcon>\n          </StatHeader>\n          <StatValue>{stats.pendingVacations}</StatValue>\n          <StatInfo positive={stats.pendingVacations === 0}>\n            {stats.pendingVacations === 0\n              ? \"Aucune demande en attente\"\n              : \"Nécessite votre attention\"}\n          </StatInfo>\n        </StatCard>\n\n        <StatCard variants={fadeInUp}>\n          <StatHeader>\n            <StatTitle>Absents aujourd'hui</StatTitle>\n            <StatIcon color=\"#EC4899\">\n              <FiSun />\n            </StatIcon>\n          </StatHeader>\n          <StatValue>{stats.todayAbsent}</StatValue>\n          <StatInfo>\n            {stats.todayAbsent === 0\n              ? \"Tout le monde est présent\"\n              : `${stats.todayAbsent} employé(s) absent(s)`}\n          </StatInfo>\n        </StatCard>\n      </StatsGrid>\n\n      <QuickActionsSection\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={fadeInUp}\n      >\n        <SectionTitle>\n          <FiBarChart2 size={18} color=\"#4F46E5\" />\n          Actions rapides\n        </SectionTitle>\n        <QuickActionsGrid>\n          <QuickActionCard\n            whileHover={{ scale: 1.03 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => navigateTo(\"/employees\")}\n            color=\"#4F46E5\"\n          >\n            <ActionIcon color=\"#4F46E5\">\n              <FiUsers />\n            </ActionIcon>\n            <ActionTitle>Gérer les employés</ActionTitle>\n            <ActionDescription>\n              Ajouter, modifier ou supprimer des employés\n            </ActionDescription>\n          </QuickActionCard>\n\n          <QuickActionCard\n            whileHover={{ scale: 1.03 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => navigateTo(\"/vacations\")}\n            color=\"#EC4899\"\n          >\n            <ActionIcon color=\"#EC4899\">\n              <FiSun />\n            </ActionIcon>\n            <ActionTitle>Gérer les congés</ActionTitle>\n            <ActionDescription>\n              Approuver ou rejeter les demandes de congés\n            </ActionDescription>\n          </QuickActionCard>\n\n          <QuickActionCard\n            whileHover={{ scale: 1.03 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => navigateTo(\"/schedule\")}\n            color=\"#10B981\"\n          >\n            <ActionIcon color=\"#10B981\">\n              <FiCalendar />\n            </ActionIcon>\n            <ActionTitle>Planning</ActionTitle>\n            <ActionDescription>\n              Consulter et modifier le planning\n            </ActionDescription>\n          </QuickActionCard>\n\n          <QuickActionCard\n            whileHover={{ scale: 1.03 }}\n            whileTap={{ scale: 0.98 }}\n            onClick={() => navigateTo(\"/stats\")}\n            color=\"#F59E0B\"\n          >\n            <ActionIcon color=\"#F59E0B\">\n              <FiPieChart />\n            </ActionIcon>\n            <ActionTitle>Statistiques</ActionTitle>\n            <ActionDescription>\n              Consulter les statistiques de l'entreprise\n            </ActionDescription>\n          </QuickActionCard>\n        </QuickActionsGrid>\n      </QuickActionsSection>\n\n      <DashboardSections>\n        <UpcomingSection initial=\"hidden\" animate=\"visible\" variants={fadeInUp}>\n          <SectionTitle>\n            <FiCalendar size={18} color=\"#EC4899\" />\n            Prochains congés\n          </SectionTitle>\n\n          {stats.upcomingVacations.length === 0 ? (\n            <ChartPlaceholder>Aucun congé à venir</ChartPlaceholder>\n          ) : (\n            <UpcomingList>\n              {stats.upcomingVacations.map((vacation, index) => (\n                <UpcomingItem key={index} color=\"#EC4899\">\n                  <UpcomingIcon color=\"#EC4899\">\n                    <FiSun />\n                  </UpcomingIcon>\n                  <UpcomingContent>\n                    <UpcomingTitle>\n                      {vacation.employee_name ||\n                        `Employé #${vacation.employee_id}`}\n                    </UpcomingTitle>\n                    <UpcomingDate>\n                      <FiCalendar size={12} />\n                      {formatDate(vacation.start_date)} -{\" \"}\n                      {formatDate(vacation.end_date)}\n                    </UpcomingDate>\n                  </UpcomingContent>\n                </UpcomingItem>\n              ))}\n\n              <ViewAllLink onClick={() => navigateTo(\"/vacations\")}>\n                Voir tous les congés{\" \"}\n                <FiArrowRight size={14} style={{ marginLeft: \"4px\" }} />\n              </ViewAllLink>\n            </UpcomingList>\n          )}\n        </UpcomingSection>\n      </DashboardSections>\n\n      <RecentActivities />\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;\n"],"names":["useVacations","vacations","setVacations","useState","loading","setLoading","error","setError","api","useApi","isComponentMountedRef","useRef","pollingIntervalRef","useEffect","current","clearInterval","retryApiCall","useCallback","async","apiCall","maxRetries","arguments","length","undefined","delay","lastError","retryCount","err","retryDelay","Math","pow","console","log","Promise","resolve","setTimeout","fetchVacations","forceRefresh","cachedData","localStorage","getItem","cachedTimestamp","Date","getTime","parseInt","parsedData","JSON","parse","e","loadVacations","data","get","API_ENDPOINTS","VACATIONS","Array","isArray","formattedData","map","vacation","startDate","start_date","endDate","end_date","duration","start","end","setHours","workableDays","currentDate","getDay","setDate","getDate","employeeName","employee_name","employeeId","employee_id","approvedAt","approved_at","approvedBy","approved_by","rejectedAt","rejected_at","rejectedBy","rejected_by","rejectionReason","rejection_reason","createdAt","created_at","updatedAt","updated_at","setItem","stringify","toString","message","timeoutId","clearTimeout","setInterval","createVacation","vacationData","errorMsg","toast","success","type","reason","status","includes","toISOString","split","token","response","post","prevVacations","_error$response","_error$response$data","_error$response2","_error$response2$data","errorMessage","result","updateVacation","id","put","_response$data","ok","Error","prev","deleteVacation","delete","_response$data2","filter","updateVacationStatus","comment","_response$data3","getVacationsByStatus","refreshVacations","approveVacation","rejectVacation","useActivities","activities","setActivities","user","useAuth","wsActivities","socket","requestActivitiesUpdate","fallbackMode","useWebSocket","fetchActivities","ACTIVITIES","BASE","activitiesData","createActivity","activityData","activity","updateActivity","deleteActivity","translateVacationType","translateVacationStatus","formatVacationDates","toLocaleDateString","day","month","year","formatActivityDescription","description","entity_type","entity_id","user_id","details","userName","name","create","update","approve","reject","vacation_status_update","employee","schedule","shift","parsedDetails","new_status","newStatus","dateRange","typeConge","vacation_type","action","hours","formatActivityDate","timestamp","date","diffMs","diffSec","floor","diffMin","diffHour","diffDay","getActivityIcon","_jsx","FiPlus","FiEdit","FiTrash2","FiCheck","FiX","prevActivities","prevActivitiesArray","newActivitiesMap","Map","forEach","set","has","from","values","sort","a","b","interval","keyframes","pulse","ActivitiesContainer","styled","div","_ref","theme","colors","surface","_ref2","borderRadius","medium","_ref3","shadows","_ref4","large","ActivitiesHeader","_ref5","border","ActivitiesTitle","h3","_ref6","text","primary","_ref7","RefreshButton","button","_ref8","primaryLight","_ref9","small","_ref10","_ref11","ActivitiesList","ActivityItem","motion","_ref12","_ref13","color","_ref14","_ref15","ActivityIcon","_ref16","_ref17","ActivityContent","ActivityDescription","_ref18","ActivityMeta","_ref19","secondary","ActivityTime","ActivityDate","ActivityEmployee","_ref20","LoadingIndicator","_ref21","ErrorMessage","_ref22","EmptyMessage","_ref23","ViewAllButton","_ref24","_ref25","_ref26","_ref27","Badge","span","_ref28","FiSun","FiInfo","getActivityTypeLabel","vacationType","statusText","RecentActivities","navigate","useNavigate","activitiesList","itemVariants","hidden","opacity","y","visible","transition","stiffness","damping","_jsxs","children","FiClock","size","onClick","handleRefresh","disabled","FiRefreshCw","className","_Fragment","variants","staggerChildren","initial","animate","slice","index","getActivityColor","time","format","locale","fr","formatDateTime","previousStatus","previous_status","extractActivityDetails","typeLabel","statusLabel","whileHover","scale","FiCalendar","FiUser","handleViewAllActivities","SearchContainer","expanded","SearchInputWrapper","focused","SearchIcon","SearchInput","input","ClearButton","SearchResults","ResultGroup","ResultGroupTitle","typography","fontWeights","semiBold","ResultItem","ResultIcon","ResultContent","ResultTitle","_ref29","ResultDescription","_ref30","HighlightedText","_ref31","_ref32","NoResults","_ref33","_ref34","_ref35","_ref36","_ref37","label","_ref38","_ref39","select","_ref40","_ref41","_ref42","background","_ref43","_ref44","_ref45","_ref46","_ref47","_ref48","placeholder","onSearch","initialResults","customGetResults","query","setQuery","setFocused","showResults","setShowResults","results","setResults","searchRef","inputRef","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","highlightText","RegExp","part","toLowerCase","ref","FiSearch","value","onChange","onFocus","handleInputFocus","handleClear","focus","group","groupIndex","title","items","item","itemIndex","handleResultClick","style","marginLeft","FiCheckCircle","FiXCircle","role","dates","DashboardContainer","DashboardHeader","breakpoints","md","HeaderLeft","AnimationContainer","TitleContainer","PageTitle","h1","PageDescription","p","WelcomeSection","WelcomeCard","SearchSection","StatsGrid","StatCard","StatHeader","StatTitle","StatIcon","StatValue","bold","StatInfo","positive","DashboardSections","SectionTitle","h2","QuickActionsSection","QuickActionsGrid","QuickActionCard","backgroundAlt","ActionIcon","ActionTitle","ActionDescription","UpcomingSection","UpcomingList","UpcomingItem","UpcomingIcon","UpcomingContent","UpcomingTitle","UpcomingDate","ViewAllLink","ChartPlaceholder","fadeInUp","staggerContainer","Dashboard","employees","isLoading","isLoadingEmployees","useEmployees","isLoadingVacations","stats","setStats","totalEmployees","pendingVacations","upcomingVacations","todayAbsent","searchResults","setSearchResults","_vacations$filter","_vacations$filter2","_vacations$filter2$so","_vacations$filter3","v","today","navigateTo","path","Lottie","animationData","robotAnimation","loop","width","height","first_name","last_name","username","SearchBar","lowercaseQuery","filteredEmployees","email","department","filteredVacations","employee_first_name","employee_last_name","push","getSearchResults","FiUsers","FiBarChart2","whileTap","FiPieChart","formatDate","FiArrowRight"],"sourceRoot":""}