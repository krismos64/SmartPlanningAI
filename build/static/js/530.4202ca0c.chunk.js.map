{"version":3,"file":"static/js/530.4202ca0c.chunk.js","mappings":"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","sources":["utils/dateUtils.js","config/constants.js","components/ui/ThemeSwitch.js","components/ui/DataTable.js","components/ui/Icons.js","components/ui/Modal.js","components/ui/Table.js","components/employees/EmployeeCard.js","components/employees/EmployeeForm.js","components/employees/HourBalanceManager.js","pages/Employees.js"],"sourcesContent":["/**\n * Utilitaires pour la gestion des dates dans l'application\n */\n\nimport {\n  addDays,\n  addWeeks as addWeeksDate,\n  endOfWeek,\n  format,\n  getDay,\n  isAfter,\n  isBefore,\n  isSameDay,\n  startOfWeek,\n} from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\nimport { FRENCH_HOLIDAYS_2024 } from \"../config/constants\";\n\n/**\n * Formate une date selon le format spécifié\n * @param {Date} date - La date à formater\n * @param {string} formatStr - Le format à utiliser (par défaut: 'dd/MM/yyyy')\n * @returns {string} La date formatée\n */\nexport const formatDate = (date, formatStr = \"dd/MM/yyyy\") => {\n  if (!date) return \"\";\n\n  try {\n    // S'assurer que date est un objet Date valide\n    const dateObj = date instanceof Date ? date : new Date(date);\n\n    // Vérifier si la date est valide\n    if (isNaN(dateObj.getTime())) {\n      console.error(\"Date invalide dans formatDate:\", date);\n      return \"\";\n    }\n\n    return format(dateObj, formatStr, { locale: fr });\n  } catch (error) {\n    console.error(\"Erreur lors du formatage de la date:\", error, date);\n    return \"\";\n  }\n};\n\n/**\n * Formate une date pour un input HTML (YYYY-MM-DD)\n * @param {Date} date - La date à formater\n * @returns {string} La date au format YYYY-MM-DD\n */\nexport const formatDateForInput = (date) => {\n  if (!date) return \"\";\n  return format(date, \"yyyy-MM-dd\");\n};\n\n/**\n * Obtient le premier jour de la semaine pour une date donnée\n * @param {Date} date - La date de référence\n * @returns {Date} Le premier jour de la semaine (lundi)\n */\nexport const getWeekStart = (date) => {\n  return startOfWeek(date, { weekStartsOn: 1 });\n};\n\n/**\n * Obtient le dernier jour de la semaine pour une date donnée\n * @param {Date} date - La date de référence\n * @returns {Date} Le dernier jour de la semaine (dimanche)\n */\nexport const getWeekEnd = (date) => {\n  return endOfWeek(date, { weekStartsOn: 1 });\n};\n\n/**\n * Ajoute ou soustrait un nombre de semaines à une date\n * @param {Date} date - La date de référence\n * @param {number} amount - Le nombre de semaines à ajouter (négatif pour soustraire)\n * @returns {Date} La nouvelle date\n */\nexport const addWeeks = (date, amount) => {\n  return addWeeksDate(date, amount);\n};\n\n/**\n * Obtient un tableau des jours de la semaine pour une date donnée\n * @param {Date} date - La date de référence\n * @returns {Date[]} Un tableau des 7 jours de la semaine\n */\nexport const getDaysOfWeek = (date) => {\n  const weekStart = getWeekStart(date);\n  const days = [];\n\n  for (let i = 0; i < 7; i++) {\n    days.push(addDays(weekStart, i));\n  }\n\n  return days;\n};\n\n/**\n * Vérifie si une date est un weekend (samedi ou dimanche)\n * @param {Date} date - La date à vérifier\n * @returns {boolean} True si c'est un weekend\n */\nexport const isWeekend = (date) => {\n  const day = new Date(date).getDay();\n  return day === 0 || day === 6; // 0 = dimanche, 6 = samedi\n};\n\n/**\n * Calcule le nombre d'heures entre deux dates\n * @param {Date} startDate - Date de début\n * @param {Date} endDate - Date de fin\n * @returns {number} Nombre d'heures\n */\nexport const calculateHours = (startDate, endDate) => {\n  if (!startDate || !endDate) return 0;\n\n  const diffMs = endDate.getTime() - startDate.getTime();\n  const diffHours = diffMs / (1000 * 60 * 60);\n\n  return Math.round(diffHours * 10) / 10; // Arrondi à 1 décimale\n};\n\n/**\n * Formate une durée en heures et minutes\n * @param {number} hours - Nombre d'heures (peut inclure des décimales)\n * @returns {string} Durée formatée (ex: \"7h30\")\n */\nexport const formatHours = (hours) => {\n  if (hours === undefined || hours === null) return \"0h\";\n\n  const totalHours = parseFloat(hours);\n  if (isNaN(totalHours)) return \"0h\";\n\n  const wholeHours = Math.floor(totalHours);\n  const minutes = Math.round((totalHours - wholeHours) * 60);\n\n  if (minutes === 0) {\n    return `${wholeHours}h`;\n  } else {\n    return `${wholeHours}h${minutes.toString().padStart(2, \"0\")}`;\n  }\n};\n\n/**\n * Obtient le nom du jour de la semaine\n * @param {Date} date - La date\n * @param {boolean} short - Si true, retourne le nom court (3 lettres)\n * @returns {string} Le nom du jour\n */\nexport const getDayName = (date, short = false) => {\n  const days = [\n    \"Dimanche\",\n    \"Lundi\",\n    \"Mardi\",\n    \"Mercredi\",\n    \"Jeudi\",\n    \"Vendredi\",\n    \"Samedi\",\n  ];\n  const shortDays = [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"];\n\n  const dayIndex = new Date(date).getDay();\n  return short ? shortDays[dayIndex] : days[dayIndex];\n};\n\n/**\n * Obtient le nom du mois\n * @param {string|Date} date - La date\n * @param {boolean} short - Indique si le nom doit être court (3 lettres) ou complet\n * @returns {string} Le nom du mois\n */\nexport const getMonthName = (date, short = false) => {\n  const dateObj = new Date(date);\n  const monthNames = short\n    ? [\n        \"Jan\",\n        \"Fév\",\n        \"Mar\",\n        \"Avr\",\n        \"Mai\",\n        \"Juin\",\n        \"Juil\",\n        \"Aoû\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Déc\",\n      ]\n    : [\n        \"Janvier\",\n        \"Février\",\n        \"Mars\",\n        \"Avril\",\n        \"Mai\",\n        \"Juin\",\n        \"Juillet\",\n        \"Août\",\n        \"Septembre\",\n        \"Octobre\",\n        \"Novembre\",\n        \"Décembre\",\n      ];\n\n  return monthNames[dateObj.getMonth()];\n};\n\n/**\n * Formate une date pour MySQL (YYYY-MM-DD)\n * @param {string|Date} date - La date à formater\n * @returns {string} La date au format YYYY-MM-DD\n */\nexport const formatDateForMySQL = (date) => {\n  if (!date) return null;\n\n  // Si la date est déjà au format YYYY-MM-DD, la retourner telle quelle\n  if (typeof date === \"string\" && /^\\d{4}-\\d{2}-\\d{2}$/.test(date)) {\n    return date;\n  }\n\n  try {\n    const dateObj = new Date(date);\n\n    if (isNaN(dateObj.getTime())) {\n      return null;\n    }\n\n    return dateObj.toISOString().split(\"T\")[0];\n  } catch (error) {\n    console.error(\"Erreur lors du formatage de la date pour MySQL:\", error);\n    return null;\n  }\n};\n\n/**\n * Formate une date pour l'API (format YYYY-MM-DD)\n * @param {Date} date - La date à formater\n * @returns {string} La date formatée\n */\nexport const formatDateForAPI = (date) => {\n  if (!date) return \"\";\n  const d = new Date(date);\n  return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(\n    2,\n    \"0\"\n  )}-${String(d.getDate()).padStart(2, \"0\")}`;\n};\n\n/**\n * Vérifie si une date est un jour férié\n * @param {string|Date} date - La date à vérifier\n * @param {Array} holidays - Liste des jours fériés (par défaut: jours fériés français 2024)\n * @returns {boolean} True si c'est un jour férié, false sinon\n */\nexport const isHoliday = (date, holidays = FRENCH_HOLIDAYS_2024) => {\n  if (!date) return false;\n\n  const d = new Date(date);\n  if (isNaN(d.getTime())) return false;\n\n  const formattedDate = formatDateForAPI(d);\n  return holidays.some((holiday) => holiday.date === formattedDate);\n};\n\n/**\n * Vérifie si une date est un jour ouvré (ni week-end, ni jour férié)\n * @param {string|Date} date - La date à vérifier\n * @param {Array} holidays - Liste des jours fériés\n * @returns {boolean} True si c'est un jour ouvré, false sinon\n */\nexport const isWorkingDay = (date, holidays = FRENCH_HOLIDAYS_2024) => {\n  return !isWeekend(date) && !isHoliday(date, holidays);\n};\n\n/**\n * Calcule le nombre de jours ouvrés entre deux dates\n * @param {string|Date} startDate - Date de début\n * @param {string|Date} endDate - Date de fin\n * @param {Array} holidays - Liste des jours fériés\n * @returns {number} Nombre de jours ouvrés\n */\nexport const getWorkingDaysCount = (\n  startDate,\n  endDate,\n  holidays = FRENCH_HOLIDAYS_2024\n) => {\n  if (!startDate || !endDate) return 0;\n\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n\n  if (isNaN(start.getTime()) || isNaN(end.getTime())) return 0;\n  if (end < start) return 0;\n\n  let count = 0;\n  const currentDate = new Date(start);\n\n  while (currentDate <= end) {\n    if (isWorkingDay(currentDate, holidays)) {\n      count++;\n    }\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  return count;\n};\n\n/**\n * Vérifie si une date est aujourd'hui\n * @param {string|Date} date - La date à vérifier\n * @returns {boolean} True si c'est aujourd'hui, false sinon\n */\nexport const isToday = (date) => {\n  if (!date) return false;\n  return isSameDay(new Date(date), new Date());\n};\n\n/**\n * Vérifie si une date est entre deux autres dates (inclusivement)\n * @param {string|Date} date - La date à vérifier\n * @param {string|Date} start - Date de début\n * @param {string|Date} end - Date de fin\n * @returns {boolean} True si la date est entre start et end, false sinon\n */\nexport const isDateBetween = (date, start, end) => {\n  if (!date || !start || !end) return false;\n\n  const d = new Date(date);\n  const s = new Date(start);\n  const e = new Date(end);\n\n  // Réinitialiser les heures pour comparer uniquement les dates\n  d.setHours(0, 0, 0, 0);\n  s.setHours(0, 0, 0, 0);\n  e.setHours(0, 0, 0, 0);\n\n  return d >= s && d <= e;\n};\n\n/**\n * Formate une date pour l'affichage en format français\n * @param {string|Date} date - La date à formater\n * @param {string} formatStr - Le format à utiliser (par défaut: 'dd/MM/yyyy')\n * @returns {string} La date formatée\n */\nexport const formatDateForDisplay = (date, formatStr = \"dd/MM/yyyy\") => {\n  if (!date) return \"\";\n\n  try {\n    // Si la date est déjà au format YYYY-MM-DD, la convertir en objet Date\n    const dateObj = typeof date === \"string\" ? new Date(date) : date;\n\n    // Formater la date selon le format spécifié\n    const day = String(dateObj.getDate()).padStart(2, \"0\");\n    const month = String(dateObj.getMonth() + 1).padStart(2, \"0\");\n    const year = dateObj.getFullYear();\n\n    return `${day}/${month}/${year}`;\n  } catch (error) {\n    console.error(\"Erreur lors du formatage de la date:\", error);\n    return \"\";\n  }\n};\n\n/**\n * Vérifie si une date est dans le passé\n * @param {Date} date - La date à vérifier\n * @returns {boolean} Vrai si la date est dans le passé\n */\nexport const isPast = (date) => {\n  return isBefore(date, new Date()) && !isToday(date);\n};\n\n/**\n * Vérifie si une date est dans le futur\n * @param {Date} date - La date à vérifier\n * @returns {boolean} Vrai si la date est dans le futur\n */\nexport const isFuture = (date) => {\n  return isAfter(date, new Date());\n};\n\n/**\n * Génère un tableau des jours de la semaine à partir d'une date de début\n * @param {Date} startDate - La date de début de la semaine\n * @returns {Array} Un tableau des jours de la semaine\n */\nexport const getWeekDays = (startDate) => {\n  const days = [];\n  for (let i = 0; i < 7; i++) {\n    days.push(addDays(startDate, i));\n  }\n  return days;\n};\n\n/**\n * Formate une date pour l'affichage dans un format court\n * @param {Date} date - La date à formater\n * @returns {string} La date formatée\n */\nexport const formatShortDate = (date) => {\n  return format(date, \"EEE dd/MM\", { locale: fr });\n};\n\n/**\n * Formate une date pour l'affichage dans un format long\n * @param {Date} date - La date à formater\n * @returns {string} La date formatée\n */\nexport const formatLongDate = (date) => {\n  return format(date, \"EEEE dd MMMM yyyy\", { locale: fr });\n};\n\n/**\n * Obtient le jour de la semaine (0-6, où 0 est dimanche)\n * @param {Date} date - La date\n * @returns {number} Le jour de la semaine\n */\nexport const getDayOfWeek = (date) => {\n  return getDay(date);\n};\n\n/**\n * Formate une heure pour l'affichage\n * @param {number} hours - Les heures\n * @param {number} minutes - Les minutes\n * @returns {string} L'heure formatée\n */\nexport const formatTime = (hours, minutes = 0) => {\n  return `${hours.toString().padStart(2, \"0\")}:${minutes\n    .toString()\n    .padStart(2, \"0\")}`;\n};\n\n/**\n * Convertit une chaîne de caractères au format \"HH:MM\" en minutes\n * @param {string} timeString - La chaîne de caractères au format \"HH:MM\"\n * @returns {number} Le nombre de minutes\n */\nexport const timeStringToMinutes = (timeString) => {\n  if (!timeString) return 0;\n\n  const [hours, minutes] = timeString.split(\":\").map(Number);\n  return hours * 60 + minutes;\n};\n\n/**\n * Convertit des minutes en chaîne de caractères au format \"HH:MM\"\n * @param {number} minutes - Le nombre de minutes\n * @returns {string} La chaîne de caractères au format \"HH:MM\"\n */\nexport const minutesToTimeString = (minutes) => {\n  if (!minutes && minutes !== 0) return \"\";\n\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  return `${hours.toString().padStart(2, \"0\")}:${mins\n    .toString()\n    .padStart(2, \"0\")}`;\n};\n\n/**\n * Vérifie si une date est dans une plage de dates\n * @param {Date} date - La date à vérifier\n * @param {Date} start - La date de début de la plage\n * @param {Date} end - La date de fin de la plage\n * @returns {boolean} Vrai si la date est dans la plage\n */\nexport const isDateInRange = (date, start, end) => {\n  const d = new Date(date);\n  const s = new Date(start);\n  const e = new Date(end);\n  return d >= s && d <= e;\n};\n\nexport default {\n  addWeeks,\n  getWeekStart,\n  isToday,\n  isPast,\n  isFuture,\n  getWeekDays,\n  formatShortDate,\n  formatLongDate,\n  getDayOfWeek,\n  formatTime,\n  timeStringToMinutes,\n  minutesToTimeString,\n  formatDateForDisplay,\n  isDateInRange,\n};\n","// Constantes pour les employés\nexport const EMPLOYEE_DEPARTMENTS = [\n  { value: \"Marketing\", label: \"Marketing\" },\n  { value: \"Développement\", label: \"Développement\" },\n  { value: \"Design\", label: \"Design\" },\n  { value: \"Finance\", label: \"Finance\" },\n  { value: \"RH\", label: \"RH\" },\n];\n\nexport const EMPLOYEE_ROLES = [\n  { value: \"Manager\", label: \"Manager\" },\n  { value: \"Senior\", label: \"Senior\" },\n  { value: \"Junior\", label: \"Junior\" },\n  { value: \"Stagiaire\", label: \"Stagiaire\" },\n];\n\nexport const EMPLOYEE_STATUSES = [\n  { value: \"active\", label: \"Actif\" },\n  { value: \"pending\", label: \"En attente\" },\n  { value: \"inactive\", label: \"Inactif\" },\n];\n\n// Constantes pour les congés\nexport const VACATION_TYPES = [\n  { value: \"paid\", label: \"Congés payés\", color: \"#4CAF50\", defaultQuota: 25 },\n  { value: \"rtt\", label: \"RTT\", color: \"#2196F3\", defaultQuota: 11 },\n  {\n    value: \"unpaid\",\n    label: \"Congés sans solde\",\n    color: \"#9E9E9E\",\n    defaultQuota: null,\n  },\n  { value: \"sick\", label: \"Maladie\", color: \"#F44336\", defaultQuota: null },\n  {\n    value: \"exceptional\",\n    label: \"Absence exceptionnelle\",\n    color: \"#FF9800\",\n    defaultQuota: null,\n  },\n  {\n    value: \"recovery\",\n    label: \"Récupération\",\n    color: \"#9C27B0\",\n    defaultQuota: null,\n  },\n];\n\nexport const VACATION_STATUSES = [\n  { value: \"pending\", label: \"En attente\", color: \"#FFC107\" },\n  { value: \"approved\", label: \"Approuvé\", color: \"#4CAF50\" },\n  { value: \"rejected\", label: \"Refusé\", color: \"#F44336\" },\n];\n\n// Jours fériés en France pour 2024 (à mettre à jour chaque année)\nexport const FRENCH_HOLIDAYS_2024 = [\n  { date: \"2024-01-01\", name: \"Jour de l'an\" },\n  { date: \"2024-04-01\", name: \"Lundi de Pâques\" },\n  { date: \"2024-05-01\", name: \"Fête du Travail\" },\n  { date: \"2024-05-08\", name: \"Victoire 1945\" },\n  { date: \"2024-05-09\", name: \"Ascension\" },\n  { date: \"2024-05-20\", name: \"Lundi de Pentecôte\" },\n  { date: \"2024-07-14\", name: \"Fête Nationale\" },\n  { date: \"2024-08-15\", name: \"Assomption\" },\n  { date: \"2024-11-01\", name: \"Toussaint\" },\n  { date: \"2024-11-11\", name: \"Armistice 1918\" },\n  { date: \"2024-12-25\", name: \"Noël\" },\n];\n\n// Constantes pour les colonnes du tableau des employés\nexport const EMPLOYEE_TABLE_COLUMNS = [\n  {\n    id: \"name\",\n    header: \"Nom\",\n    accessor: (employee) => `${employee.first_name} ${employee.last_name}`,\n    sortable: true,\n  },\n  {\n    id: \"email\",\n    header: \"Email\",\n    accessor: (employee) => employee.email,\n    sortable: true,\n  },\n  {\n    id: \"department\",\n    header: \"Département\",\n    accessor: (employee) => employee.department,\n    sortable: true,\n  },\n  {\n    id: \"role\",\n    header: \"Rôle\",\n    accessor: (employee) => employee.role,\n    sortable: true,\n  },\n  {\n    id: \"status\",\n    header: \"Statut\",\n    accessor: (employee) => employee.status,\n    sortable: true,\n    type: \"status\",\n  },\n  {\n    id: \"hour_balance\",\n    header: \"Solde d'heures\",\n    accessor: (employee) => {\n      const balance = employee.hour_balance || 0;\n      const isPositive = balance >= 0;\n      return {\n        value: balance,\n        display: `${isPositive ? \"+\" : \"\"}${balance}h`,\n        isPositive,\n      };\n    },\n    sortable: true,\n    type: \"hour_balance\",\n  },\n  {\n    id: \"hire_date\",\n    header: \"Date d'embauche\",\n    accessor: (employee) => {\n      if (!employee.hire_date) return \"\";\n      const date = new Date(employee.hire_date);\n      return date.toLocaleDateString(\"fr-FR\");\n    },\n    sortable: true,\n    type: \"date\",\n  },\n];\n\n// URL de l'API\nexport const API_URL =\n  process.env.REACT_APP_API_URL || \"http://localhost:5001/api\";\n","import styled from \"styled-components\";\n\nconst SwitchContainer = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst SwitchInput = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked + span {\n    background-color: #4361ee;\n  }\n\n  &:checked + span:before {\n    transform: translateX(30px);\n  }\n`;\n\nconst Slider = styled.span`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: 0.4s;\n  border-radius: 34px;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    height: 22px;\n    width: 22px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n`;\n\nconst SunIcon = styled.span`\n  position: absolute;\n  left: 8px;\n  top: 6px;\n  color: #f9d71c;\n  font-size: 16px;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nconst MoonIcon = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 6px;\n  color: #f8f9fa;\n  font-size: 16px;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nexport const ThemeSwitch = ({ onChange, checked }) => {\n  return (\n    <SwitchContainer>\n      <SwitchInput type=\"checkbox\" onChange={onChange} checked={checked} />\n      <Slider />\n      <SunIcon>☀️</SunIcon>\n      <MoonIcon>🌙</MoonIcon>\n    </SwitchContainer>\n  );\n};\n\nexport default ThemeSwitch;\n","import { useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { EMPLOYEE_STATUSES } from \"../../config/constants\";\n\n// Composants stylisés\nconst TableContainer = styled.div`\n  width: 100%;\n  overflow: hidden;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst TableHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst TableTitle = styled.h2`\n  font-size: 1.25rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst TableActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  padding: 0.5rem 0.75rem;\n  width: 250px;\n  transition: all 0.2s ease;\n\n  &:focus-within {\n    border-color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 2px ${({ theme }) => `${theme.colors.primary}22`};\n  }\n\n  svg {\n    color: ${({ theme }) => theme.colors.text.secondary};\n    margin-right: 0.5rem;\n  }\n\n  input {\n    border: none;\n    background: none;\n    outline: none;\n    width: 100%;\n    font-size: 0.875rem;\n    color: ${({ theme }) => theme.colors.text.primary};\n\n    &::placeholder {\n      color: ${({ theme }) => theme.colors.text.disabled};\n    }\n  }\n`;\n\nconst FilterButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: ${({ theme, active }) =>\n    active ? `${theme.colors.primary}11` : \"transparent\"};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  padding: 0.5rem 0.75rem;\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.primary};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme, active }) =>\n      active ? `${theme.colors.primary}22` : `${theme.colors.background}`};\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst THead = styled.thead`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst Th = styled.th`\n  padding: 1rem 1.5rem;\n  text-align: left;\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  cursor: ${({ $sortable }) => ($sortable ? \"pointer\" : \"default\")};\n  user-select: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${({ theme, $sortable }) =>\n      $sortable ? theme.colors.primary : theme.colors.text.secondary};\n  }\n`;\n\nconst SortIcon = styled.span`\n  display: inline-flex;\n  margin-left: 0.5rem;\n  transition: transform 0.2s ease;\n  transform: ${({ $direction }) =>\n    $direction === \"desc\" ? \"rotate(180deg)\" : \"rotate(0deg)\"};\n  opacity: ${({ $active }) => ($active ? 1 : 0.3)};\n`;\n\nconst TBody = styled.tbody`\n  & tr:nth-child(even) {\n    background-color: ${({ theme }) => `${theme.colors.background}55`};\n  }\n`;\n\nconst Tr = styled.tr`\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n  }\n`;\n\nconst Td = styled.td`\n  padding: 1rem 1.5rem;\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n  vertical-align: middle;\n\n  &.clickable {\n    position: relative;\n\n    &:hover {\n      background-color: ${({ theme }) => `${theme.colors.primary}11`};\n\n      &::after {\n        content: \"\";\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        height: 2px;\n        background-color: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`;\n\nconst StatusBadge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: 0.25rem 0.75rem;\n  border-radius: 2rem;\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  background-color: ${({ theme, status }) => {\n    switch (status) {\n      case \"active\":\n        return `${theme.colors.success}22`;\n      case \"pending\":\n        return `${theme.colors.warning}22`;\n      case \"inactive\":\n        return `${theme.colors.error}22`;\n      default:\n        return `${theme.colors.text.disabled}22`;\n    }\n  }};\n  color: ${({ theme, status }) => {\n    switch (status) {\n      case \"active\":\n        return theme.colors.success;\n      case \"pending\":\n        return theme.colors.warning;\n      case \"inactive\":\n        return theme.colors.error;\n      default:\n        return theme.colors.text.disabled;\n    }\n  }};\n`;\n\nconst HourCounter = styled.span`\n  display: inline-flex;\n  align-items: center;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme, value }) => {\n    if (value > 0) return theme.colors.success;\n    if (value < 0) return theme.colors.error;\n    return theme.colors.text.primary;\n  }};\n`;\n\nconst HourBalanceBadge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 0.875rem;\n  background-color: ${({ theme, isPositive }) =>\n    isPositive ? `${theme.colors.success}20` : `${theme.colors.error}20`};\n  color: ${({ theme, isPositive }) =>\n    isPositive ? theme.colors.success : theme.colors.error};\n`;\n\nconst TableFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst PageInfo = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst PageButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  background-color: ${({ theme, active }) =>\n    active ? `${theme.colors.primary}11` : \"transparent\"};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.primary};\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover:not(:disabled) {\n    background-color: ${({ theme, active }) =>\n      active ? `${theme.colors.primary}22` : `${theme.colors.background}`};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.text.secondary};\n\n  svg {\n    width: 64px;\n    height: 64px;\n    margin-bottom: 1rem;\n    color: ${({ theme }) => `${theme.colors.text.disabled}66`};\n  }\n\n  h3 {\n    font-size: 1.25rem;\n    font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n    margin-bottom: 0.5rem;\n    color: ${({ theme }) => theme.colors.text.primary};\n  }\n\n  p {\n    font-size: 0.875rem;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => `${theme.colors.background}99`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n  backdrop-filter: blur(2px);\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 3px solid ${({ theme }) => `${theme.colors.primary}22`};\n  border-top-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n// Icônes\nconst SearchIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst FilterIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M3 6H21M6 12H18M10 18H14\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChevronUpIcon = () => (\n  <svg\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M5 15L12 8L19 15\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChevronLeftIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15 19L8 12L15 5\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChevronRightIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9 5L16 12L9 19\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst EmptyIcon = () => (\n  <svg\n    width=\"64\"\n    height=\"64\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9 17H15M9 13H15M9 9H10M19 21H5C3.89543 21 3 20.1046 3 19V5C3 3.89543 3.89543 3 5 3H19C20.1046 3 21 3.89543 21 5V19C21 20.1046 20.1046 21 19 21Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n// Icône d'édition pour les cellules cliquables\nconst EditIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"14\"\n    height=\"14\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    style={{ marginLeft: \"5px\", opacity: 0.6 }}\n  >\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n  </svg>\n);\n\n// Composant principal\nconst DataTable = ({\n  title,\n  data = [],\n  columns = [],\n  loading = false,\n  pagination = true,\n  pageSize = 10,\n  onRowClick,\n  onCellClick,\n  emptyStateTitle = \"Aucune donnée disponible\",\n  emptyStateMessage = \"Il n'y a pas de données à afficher pour le moment.\",\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Réinitialiser la page lorsque les données changent\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [data]);\n\n  // Gérer le tri des données\n  const handleSort = (key) => {\n    let direction = \"asc\";\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  // Filtrer et trier les données\n  const filteredAndSortedData = useMemo(() => {\n    // Filtrer par recherche\n    let filteredData = [...data];\n\n    if (searchTerm) {\n      const lowerCaseSearchTerm = searchTerm.toLowerCase();\n      filteredData = filteredData.filter((item) => {\n        return columns.some((column) => {\n          const value = column.accessor(item);\n          return (\n            value &&\n            value.toString().toLowerCase().includes(lowerCaseSearchTerm)\n          );\n        });\n      });\n    }\n\n    // Trier les données\n    if (sortConfig.key) {\n      const column = columns.find((col) => col.id === sortConfig.key);\n      if (column) {\n        filteredData.sort((a, b) => {\n          const aValue = column.accessor(a);\n          const bValue = column.accessor(b);\n\n          if (aValue < bValue) {\n            return sortConfig.direction === \"asc\" ? -1 : 1;\n          }\n          if (aValue > bValue) {\n            return sortConfig.direction === \"asc\" ? 1 : -1;\n          }\n          return 0;\n        });\n      }\n    }\n\n    return filteredData;\n  }, [data, columns, searchTerm, sortConfig]);\n\n  // Paginer les données\n  const paginatedData = useMemo(() => {\n    if (!pagination) return filteredAndSortedData;\n\n    const startIndex = (currentPage - 1) * pageSize;\n    return filteredAndSortedData.slice(startIndex, startIndex + pageSize);\n  }, [filteredAndSortedData, currentPage, pageSize, pagination]);\n\n  // Calculer le nombre total de pages\n  const totalPages = useMemo(() => {\n    if (!pagination) return 1;\n    return Math.ceil(filteredAndSortedData.length / pageSize);\n  }, [filteredAndSortedData, pageSize, pagination]);\n\n  // Gérer le changement de page\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Gérer la recherche\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1);\n  };\n\n  // Gérer les filtres\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  // Formater les valeurs de cellule\n  const formatCellValue = (column, value) => {\n    if (!value && value !== 0) return \"-\";\n\n    // Gérer les différents types de colonnes\n    if (column.type === \"status\") {\n      const status = EMPLOYEE_STATUSES.find((s) => s.value === value);\n      return (\n        <StatusBadge status={value}>\n          {status ? status.label : value}\n        </StatusBadge>\n      );\n    }\n\n    if (column.type === \"hour_balance\") {\n      return (\n        <HourBalanceBadge isPositive={value.isPositive}>\n          {value.display}\n          {column.id === \"hour_balance\" && <EditIcon />}\n        </HourBalanceBadge>\n      );\n    }\n\n    if (column.type === \"date\") {\n      return value;\n    }\n\n    // Valeur par défaut\n    return value.toString();\n  };\n\n  // Générer les boutons de pagination\n  const renderPaginationButtons = () => {\n    const buttons = [];\n\n    // Bouton précédent\n    buttons.push(\n      <PageButton\n        key=\"prev\"\n        onClick={() => handlePageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        <ChevronLeftIcon />\n      </PageButton>\n    );\n\n    // Première page\n    if (currentPage > 3) {\n      buttons.push(\n        <PageButton key=\"1\" onClick={() => handlePageChange(1)}>\n          1\n        </PageButton>\n      );\n\n      if (currentPage > 4) {\n        buttons.push(<span key=\"ellipsis1\">...</span>);\n      }\n    }\n\n    // Pages autour de la page courante\n    for (\n      let i = Math.max(1, currentPage - 1);\n      i <= Math.min(totalPages, currentPage + 1);\n      i++\n    ) {\n      buttons.push(\n        <PageButton\n          key={i}\n          active={i === currentPage}\n          onClick={() => handlePageChange(i)}\n        >\n          {i}\n        </PageButton>\n      );\n    }\n\n    // Dernière page\n    if (currentPage < totalPages - 2) {\n      if (currentPage < totalPages - 3) {\n        buttons.push(<span key=\"ellipsis2\">...</span>);\n      }\n\n      buttons.push(\n        <PageButton\n          key={totalPages}\n          onClick={() => handlePageChange(totalPages)}\n        >\n          {totalPages}\n        </PageButton>\n      );\n    }\n\n    // Bouton suivant\n    buttons.push(\n      <PageButton\n        key=\"next\"\n        onClick={() => handlePageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        <ChevronRightIcon />\n      </PageButton>\n    );\n\n    return buttons;\n  };\n\n  return (\n    <TableContainer>\n      <TableHeader>\n        <TableTitle>{title}</TableTitle>\n        <TableActions>\n          <SearchInput>\n            <SearchIcon />\n            <input\n              type=\"text\"\n              placeholder=\"Rechercher...\"\n              value={searchTerm}\n              onChange={handleSearch}\n            />\n          </SearchInput>\n        </TableActions>\n      </TableHeader>\n\n      <div style={{ position: \"relative\", overflowX: \"auto\" }}>\n        {loading && (\n          <LoadingOverlay>\n            <LoadingSpinner />\n          </LoadingOverlay>\n        )}\n\n        {paginatedData.length > 0 ? (\n          <Table>\n            <THead>\n              <tr>\n                {columns.map((column) => (\n                  <Th\n                    key={column.id}\n                    $sortable={column.sortable}\n                    onClick={() => column.sortable && handleSort(column.id)}\n                    style={{ width: column.width }}\n                  >\n                    {column.header}\n                    {column.sortable && (\n                      <SortIcon\n                        $active={sortConfig.key === column.id}\n                        $direction={\n                          sortConfig.key === column.id\n                            ? sortConfig.direction\n                            : \"asc\"\n                        }\n                      >\n                        <ChevronUpIcon />\n                      </SortIcon>\n                    )}\n                  </Th>\n                ))}\n              </tr>\n            </THead>\n            <TBody>\n              {paginatedData.map((row, rowIndex) => (\n                <Tr\n                  key={rowIndex}\n                  onClick={() => onRowClick && onRowClick(row)}\n                  style={{ cursor: onRowClick ? \"pointer\" : \"default\" }}\n                >\n                  {columns.map((column) => (\n                    <Td\n                      key={`${rowIndex}-${column.id}`}\n                      onClick={(e) => {\n                        if (onCellClick && column.id === \"hour_balance\") {\n                          e.stopPropagation(); // Empêcher le déclenchement du onRowClick\n                          onCellClick(row, column.id);\n                        }\n                      }}\n                      className={\n                        onCellClick && column.id === \"hour_balance\"\n                          ? \"clickable\"\n                          : \"\"\n                      }\n                      style={{\n                        cursor:\n                          onCellClick && column.id === \"hour_balance\"\n                            ? \"pointer\"\n                            : \"inherit\",\n                      }}\n                    >\n                      {formatCellValue(column, column.accessor(row))}\n                    </Td>\n                  ))}\n                </Tr>\n              ))}\n            </TBody>\n          </Table>\n        ) : (\n          <EmptyState>\n            <EmptyIcon />\n            <h3>{emptyStateTitle}</h3>\n            <p>{emptyStateMessage}</p>\n          </EmptyState>\n        )}\n      </div>\n\n      {pagination && paginatedData.length > 0 && (\n        <TableFooter>\n          <PageInfo>\n            Affichage de {(currentPage - 1) * pageSize + 1} à{\" \"}\n            {Math.min(currentPage * pageSize, filteredAndSortedData.length)} sur{\" \"}\n            {filteredAndSortedData.length} entrées\n          </PageInfo>\n          <Pagination>{renderPaginationButtons()}</Pagination>\n        </TableFooter>\n      )}\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n","import { memo } from \"react\";\n\nconst IconWrapper = memo(({ children, size = 16, ...props }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    {children}\n  </svg>\n));\n\nexport const PlusIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M12 5V19M5 12H19\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const ExportIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M12 10V16M12 16L9 13M12 16L15 13M17 21H7C5.89543 21 5 20.1046 5 19V5C5 3.89543 5.89543 3 7 3H17C18.1046 3 19 3.89543 19 5V19C19 20.1046 18.1046 21 17 21Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const FilterIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M3 6H21M6 12H18M10 18H14\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const SearchIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const CloseIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M18 6L6 18M6 6L18 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const EditIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M11 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V20C2 20.5304 2.21071 21.0391 2.58579 21.4142C2.96086 21.7893 3.46957 22 4 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V13M18.5 2.50001C18.8978 2.10219 19.4374 1.87869 20 1.87869C20.5626 1.87869 21.1022 2.10219 21.5 2.50001C21.8978 2.89784 22.1213 3.4374 22.1213 4.00001C22.1213 4.56262 21.8978 5.10219 21.5 5.50001L12 15L8 16L9 12L18.5 2.50001Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const DeleteIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M19 7L18.1327 19.1425C18.0579 20.1891 17.187 21 16.1378 21H7.86224C6.81296 21 5.94208 20.1891 5.86732 19.1425L5 7M10 11V17M14 11V17M15 7V4C15 3.44772 14.5523 3 14 3H10C9.44772 3 9 3.44772 9 4V7M4 7H20\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const CheckIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M20 6L9 17L4 12\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const UserIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst slideIn = keyframes`\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 1rem;\n  animation: ${fadeIn} 0.2s ease-out;\n`;\n\nconst getModalWidth = (size) => {\n  switch (size) {\n    case \"small\":\n      return \"400px\";\n    case \"large\":\n      return \"900px\";\n    case \"xlarge\":\n      return \"1200px\";\n    case \"medium\":\n    default:\n      return \"600px\";\n  }\n};\n\nconst ModalContainer = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: ${({ theme }) => theme.borderRadius.large};\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: ${({ size }) => getModalWidth(size)};\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n  animation: ${slideIn} 0.3s ease-out;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst ModalTitle = styled.h2`\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semibold};\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  padding: 0.5rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.text.primary};\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nconst ModalContent = styled.div`\n  padding: 1.5rem;\n`;\n\nconst CloseIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M18 6L6 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M6 6L18 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst Modal = ({\n  isOpen = true,\n  title,\n  children,\n  onClose,\n  size = \"medium\",\n}) => {\n  // Gérer la touche Echap\n  React.useEffect(() => {\n    if (isOpen === false) return;\n\n    const handleEscape = (e) => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscape);\n    return () => document.removeEventListener(\"keydown\", handleEscape);\n  }, [onClose, isOpen]);\n\n  if (isOpen === false) return null;\n\n  // Empêcher la propagation du clic depuis le contenu du modal vers l'overlay\n  const handleContentClick = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <ModalOverlay onClick={onClose}>\n      <ModalContainer onClick={handleContentClick} size={size}>\n        <ModalHeader>\n          <ModalTitle>{title}</ModalTitle>\n          <CloseButton onClick={onClose} aria-label=\"Fermer\">\n            <CloseIcon />\n          </CloseButton>\n        </ModalHeader>\n        <ModalContent>{children}</ModalContent>\n      </ModalContainer>\n    </ModalOverlay>\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\", \"xlarge\"]),\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { fadeIn, slideInUp } from \"../../styles/animations\";\n\n// Icônes pour le tri\nconst SortIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 3V13\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4 7L8 3L12 7\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst SortAscIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 3V13\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4 7L8 3L12 7\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst SortDescIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 13V3\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4 9L8 13L12 9\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n// Composants stylisés\nconst TableContainer = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  background-color: ${({ theme }) => theme.colors.surface};\n  animation: ${fadeIn} 0.3s ease-in-out;\n\n  &::-webkit-scrollbar {\n    height: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${({ theme }) => theme.colors.background};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => `${theme.colors.primary}66`};\n    border-radius: 3px;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => `${theme.colors.primary}99`};\n  }\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n`;\n\nconst TableHead = styled.thead`\n  background-color: ${({ theme }) => `${theme.colors.background}`};\n  position: sticky;\n  top: 0;\n  z-index: 10;\n`;\n\nconst TableHeadCell = styled.th`\n  padding: ${({ theme }) => `${theme.spacing.md} ${theme.spacing.lg}`};\n  text-align: left;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  white-space: nowrap;\n  transition: all 0.2s ease;\n\n  ${({ sortable }) =>\n    sortable &&\n    css`\n      cursor: pointer;\n      user-select: none;\n\n      &:hover {\n        color: ${({ theme }) => theme.colors.primary};\n        background-color: ${({ theme }) => `${theme.colors.primary}11`};\n      }\n    `}\n\n  ${({ sorted, direction, theme }) =>\n    sorted &&\n    css`\n      color: ${theme.colors.primary};\n      background-color: ${`${theme.colors.primary}11`};\n    `}\n`;\n\nconst SortIconContainer = styled.span`\n  display: inline-flex;\n  margin-left: ${({ theme }) => theme.spacing.xs};\n  color: ${({ active, theme }) => (active ? theme.colors.primary : \"inherit\")};\n  transition: transform 0.2s ease;\n\n  ${({ direction }) =>\n    direction === \"desc\" &&\n    css`\n      transform: rotate(180deg);\n    `}\n`;\n\nconst TableBody = styled.tbody`\n  & tr:nth-child(even) {\n    background-color: ${({ theme }) => `${theme.colors.background}66`};\n  }\n`;\n\nconst TableRow = styled.tr`\n  transition: all 0.2s ease;\n  animation: ${slideInUp} 0.3s ease-in-out;\n  animation-delay: ${({ index }) => `${index * 0.05}s`};\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n  }\n\n  ${({ clickable }) =>\n    clickable &&\n    css`\n      cursor: pointer;\n    `}\n\n  ${({ selected, theme }) =>\n    selected &&\n    css`\n      background-color: ${`${theme.colors.primary}22`} !important;\n      border-left: 3px solid ${theme.colors.primary};\n    `}\n`;\n\nconst TableCell = styled.td`\n  padding: ${({ theme }) => `${theme.spacing.md} ${theme.spacing.lg}`};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  color: ${({ theme }) => theme.colors.text.primary};\n  transition: all 0.2s ease;\n\n  ${({ align }) =>\n    align &&\n    css`\n      text-align: ${align};\n    `}\n`;\n\nconst TableFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ theme }) => `${theme.spacing.md} ${theme.spacing.lg}`};\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing.sm};\n`;\n\nconst PageButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  background-color: ${({ theme, active }) =>\n    active ? `${theme.colors.primary}22` : \"transparent\"};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.secondary};\n  font-weight: ${({ theme, active }) =>\n    active\n      ? theme.typography.fontWeights.semiBold\n      : theme.typography.fontWeights.regular};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme, active }) =>\n      active ? `${theme.colors.primary}33` : `${theme.colors.primary}11`};\n    border-color: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    border-color: ${({ theme }) => theme.colors.border};\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.text.disabled};\n\n    &:hover {\n      background-color: transparent;\n      border-color: ${({ theme }) => theme.colors.border};\n      color: ${({ theme }) => theme.colors.text.disabled};\n    }\n  }\n`;\n\nconst PageInfo = styled.div`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n`;\n\nconst RowsPerPage = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing.sm};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n`;\n\nconst Select = styled.select`\n  padding: ${({ theme }) => `${theme.spacing.xs} ${theme.spacing.sm}`};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 2px ${({ theme }) => `${theme.colors.primary}33`};\n  }\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${({ theme }) => `${theme.spacing.xl} ${theme.spacing.lg}`};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-align: center;\n\n  svg {\n    width: 64px;\n    height: 64px;\n    margin-bottom: ${({ theme }) => theme.spacing.md};\n    color: ${({ theme }) => `${theme.colors.text.disabled}`};\n  }\n\n  h4 {\n    margin-bottom: ${({ theme }) => theme.spacing.sm};\n    color: ${({ theme }) => theme.colors.text.primary};\n  }\n\n  p {\n    max-width: 300px;\n    margin: 0 auto;\n  }\n`;\n\n// Composant Table\nconst Table = ({\n  columns,\n  data,\n  onRowClick,\n  selectedRow,\n  pagination = true,\n  initialSortBy = null,\n  initialSortDirection = \"asc\",\n  emptyStateTitle = \"Aucune donnée\",\n  emptyStateMessage = \"Il n'y a aucune donnée à afficher pour le moment.\",\n}) => {\n  const [sortBy, setSortBy] = useState(initialSortBy);\n  const [sortDirection, setSortDirection] = useState(initialSortDirection);\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  // Gérer le tri\n  const handleSort = (column) => {\n    if (!column.sortable) return;\n\n    if (sortBy === column.key) {\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortBy(column.key);\n      setSortDirection(\"asc\");\n    }\n  };\n\n  // Trier les données\n  const sortedData = React.useMemo(() => {\n    if (!sortBy) return data;\n\n    return [...data].sort((a, b) => {\n      const aValue = a[sortBy];\n      const bValue = b[sortBy];\n\n      if (aValue === bValue) return 0;\n\n      const comparison = aValue < bValue ? -1 : 1;\n      return sortDirection === \"asc\" ? comparison : -comparison;\n    });\n  }, [data, sortBy, sortDirection]);\n\n  // Paginer les données\n  const paginatedData = React.useMemo(() => {\n    if (!pagination) return sortedData;\n\n    const start = (page - 1) * rowsPerPage;\n    const end = start + rowsPerPage;\n    return sortedData.slice(start, end);\n  }, [sortedData, page, rowsPerPage, pagination]);\n\n  // Calculer le nombre total de pages\n  const totalPages = Math.ceil(sortedData.length / rowsPerPage);\n\n  // Gérer le changement de page\n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n  };\n\n  // Gérer le changement du nombre de lignes par page\n  const handleRowsPerPageChange = (e) => {\n    setRowsPerPage(Number(e.target.value));\n    setPage(1);\n  };\n\n  // Rendu de l'icône de tri\n  const renderSortIcon = (column) => {\n    if (!column.sortable) return null;\n\n    if (sortBy === column.key) {\n      return (\n        <SortIconContainer active direction={sortDirection}>\n          {sortDirection === \"asc\" ? <SortAscIcon /> : <SortDescIcon />}\n        </SortIconContainer>\n      );\n    }\n\n    return (\n      <SortIconContainer>\n        <SortIcon />\n      </SortIconContainer>\n    );\n  };\n\n  // Rendu de l'état vide\n  const renderEmptyState = () => (\n    <EmptyState>\n      <svg\n        width=\"64\"\n        height=\"64\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M9 3H5C3.89543 3 3 3.89543 3 5V9M9 3H15M9 3V5C9 6.10457 9.89543 7 11 7H13C14.1046 7 15 6.10457 15 5V3M15 3H19C20.1046 3 21 3.89543 21 5V9M21 9V15M21 9H19C17.8954 9 17 9.89543 17 11V13C17 14.1046 17.8954 15 19 15H21M21 15V19C21 20.1046 20.1046 21 19 21H15M15 21H9M15 21V19C15 17.8954 14.1046 17 13 17H11C9.89543 17 9 17.8954 9 19V21M9 21H5C3.89543 21 3 20.1046 3 19V15M3 15V9M3 15H5C6.10457 15 7 14.1046 7 13V11C7 9.89543 6.10457 9 5 9H3\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n      <h4>{emptyStateTitle}</h4>\n      <p>{emptyStateMessage}</p>\n    </EmptyState>\n  );\n\n  return (\n    <TableContainer>\n      <StyledTable>\n        <TableHead>\n          <tr>\n            {columns.map((column) => (\n              <TableHeadCell\n                key={column.key}\n                sortable={column.sortable}\n                sorted={sortBy === column.key}\n                direction={sortDirection}\n                onClick={() => handleSort(column)}\n                style={{ width: column.width }}\n              >\n                {column.title}\n                {renderSortIcon(column)}\n              </TableHeadCell>\n            ))}\n          </tr>\n        </TableHead>\n\n        {data.length > 0 ? (\n          <TableBody>\n            {paginatedData.map((row, index) => (\n              <TableRow\n                key={row.id || index}\n                index={index}\n                clickable={!!onRowClick}\n                selected={selectedRow && selectedRow.id === row.id}\n                onClick={() => onRowClick && onRowClick(row)}\n              >\n                {columns.map((column) => (\n                  <TableCell\n                    key={`${row.id || index}-${column.key}`}\n                    align={column.align}\n                  >\n                    {column.render ? column.render(row) : row[column.key]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        ) : null}\n      </StyledTable>\n\n      {data.length === 0 && renderEmptyState()}\n\n      {pagination && data.length > 0 && (\n        <TableFooter>\n          <RowsPerPage>\n            <span>Lignes par page:</span>\n            <Select value={rowsPerPage} onChange={handleRowsPerPageChange}>\n              <option value={5}>5</option>\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n            </Select>\n          </RowsPerPage>\n\n          <Pagination>\n            <PageButton\n              onClick={() => handlePageChange(1)}\n              disabled={page === 1}\n            >\n              &laquo;\n            </PageButton>\n            <PageButton\n              onClick={() => handlePageChange(page - 1)}\n              disabled={page === 1}\n            >\n              &lsaquo;\n            </PageButton>\n\n            <PageInfo>\n              {page} sur {totalPages}\n            </PageInfo>\n\n            <PageButton\n              onClick={() => handlePageChange(page + 1)}\n              disabled={page === totalPages}\n            >\n              &rsaquo;\n            </PageButton>\n            <PageButton\n              onClick={() => handlePageChange(totalPages)}\n              disabled={page === totalPages}\n            >\n              &raquo;\n            </PageButton>\n          </Pagination>\n        </TableFooter>\n      )}\n    </TableContainer>\n  );\n};\n\nexport default Table;\n","import { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { FaBriefcase, FaMapMarkerAlt, FaUser } from \"react-icons/fa\";\nimport styled, { keyframes } from \"styled-components\";\nimport { formatDateForDisplay } from \"../../utils/dateUtils\";\nimport { Button } from \"../ui\";\n\n// Animations\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\n// Styled Components\nconst CardContainer = styled(motion.div)`\n  background: ${({ theme }) => theme.colors.background.card};\n  border-radius: 12px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  padding: 2rem;\n  max-width: 800px;\n  width: 100%;\n  margin: 0 auto;\n  animation: ${fadeIn} 0.5s ease-out;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 2rem;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    bottom: -1rem;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background: ${({ theme }) => theme.colors.border};\n  }\n`;\n\nconst Avatar = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${({ theme }) => theme.colors.primary.main};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 1.5rem;\n  color: white;\n  font-size: 2.5rem;\n  font-weight: bold;\n`;\n\nconst EmployeeName = styled.h2`\n  font-size: 1.8rem;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst EmployeeRole = styled.p`\n  font-size: 1.1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0.5rem 0 0;\n`;\n\nconst CardContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.5rem;\n`;\n\nconst InfoSection = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-right: 0.5rem;\n    color: ${({ theme }) => theme.colors.primary.main};\n  }\n`;\n\nconst InfoItem = styled.div`\n  margin-bottom: 0.8rem;\n  animation: ${fadeIn} 0.5s ease-out;\n  animation-delay: ${({ delay }) => delay || \"0s\"};\n  animation-fill-mode: both;\n`;\n\nconst InfoLabel = styled.span`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: block;\n  margin-bottom: 0.2rem;\n`;\n\nconst InfoValue = styled.span`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-weight: 500;\n`;\n\nconst CardFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n  padding-top: 1.5rem;\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst StatusBadge = styled.span`\n  background: ${({ status, theme }) => {\n    switch (status) {\n      case \"active\":\n        return theme.colors.success.light;\n      case \"inactive\":\n        return theme.colors.error.light;\n      case \"vacation\":\n        return theme.colors.warning.light;\n      case \"sick\":\n        return theme.colors.info.light;\n      default:\n        return theme.colors.grey[300];\n    }\n  }};\n  color: ${({ status, theme }) => {\n    switch (status) {\n      case \"active\":\n        return theme.colors.success.dark;\n      case \"inactive\":\n        return theme.colors.error.dark;\n      case \"vacation\":\n        return theme.colors.warning.dark;\n      case \"sick\":\n        return theme.colors.info.dark;\n      default:\n        return theme.colors.grey[800];\n    }\n  }};\n  padding: 0.3rem 0.8rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  display: inline-block;\n  margin-left: 1rem;\n`;\n\nconst EmployeeCard = ({ employee, onEdit, onClose }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  // Animation variants for Framer Motion\n  const containerVariants = {\n    hidden: { opacity: 0, y: 50 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        when: \"beforeChildren\",\n        staggerChildren: 0.1,\n      },\n    },\n    exit: {\n      opacity: 0,\n      y: 50,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 },\n  };\n\n  // Vérifier si l'employé est défini\n  if (!employee) {\n    return (\n      <CardContainer>\n        <div style={{ textAlign: \"center\", padding: \"2rem\" }}>\n          <p>Aucune donnée d'employé disponible</p>\n          <Button onClick={onClose}>Fermer</Button>\n        </div>\n      </CardContainer>\n    );\n  }\n\n  // Get initials for avatar\n  const getInitials = () => {\n    const firstName = employee.first_name || \"\";\n    const lastName = employee.last_name || \"\";\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase();\n  };\n\n  // Format status for display\n  const formatStatus = (status) => {\n    if (!status) return \"Non défini\";\n\n    const statusMap = {\n      active: \"Actif\",\n      inactive: \"Inactif\",\n      vacation: \"En congé\",\n      sick: \"En arrêt maladie\",\n    };\n\n    return statusMap[status] || status;\n  };\n\n  return (\n    <CardContainer\n      initial=\"hidden\"\n      animate={isVisible ? \"visible\" : \"hidden\"}\n      exit=\"exit\"\n      variants={containerVariants}\n    >\n      <CardHeader>\n        <Avatar>{getInitials()}</Avatar>\n        <div>\n          <EmployeeName>\n            {employee.first_name} {employee.last_name}\n            <StatusBadge status={employee.status}>\n              {formatStatus(employee.status)}\n            </StatusBadge>\n          </EmployeeName>\n          <EmployeeRole>\n            {employee.role || \"Poste non défini\"}{\" \"}\n            {employee.department ? `• ${employee.department}` : \"\"}\n          </EmployeeRole>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <motion.div variants={itemVariants}>\n          <InfoSection>\n            <SectionTitle>\n              <FaUser /> Informations personnelles\n            </SectionTitle>\n            <InfoItem delay=\"0.1s\">\n              <InfoLabel>Email</InfoLabel>\n              <InfoValue>{employee.email || \"Non renseigné\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.2s\">\n              <InfoLabel>Téléphone</InfoLabel>\n              <InfoValue>{employee.phone || \"Non renseigné\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.3s\">\n              <InfoLabel>Date de naissance</InfoLabel>\n              <InfoValue>\n                {employee.birthdate\n                  ? formatDateForDisplay(employee.birthdate)\n                  : \"Non renseignée\"}\n              </InfoValue>\n            </InfoItem>\n          </InfoSection>\n        </motion.div>\n\n        <motion.div variants={itemVariants}>\n          <InfoSection>\n            <SectionTitle>\n              <FaMapMarkerAlt /> Adresse\n            </SectionTitle>\n            <InfoItem delay=\"0.4s\">\n              <InfoLabel>Adresse</InfoLabel>\n              <InfoValue>{employee.address || \"Non renseignée\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.5s\">\n              <InfoLabel>Ville</InfoLabel>\n              <InfoValue>{employee.city || \"Non renseignée\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.6s\">\n              <InfoLabel>Code postal</InfoLabel>\n              <InfoValue>{employee.zip_code || \"Non renseigné\"}</InfoValue>\n            </InfoItem>\n          </InfoSection>\n        </motion.div>\n\n        <motion.div variants={itemVariants}>\n          <InfoSection>\n            <SectionTitle>\n              <FaBriefcase /> Informations professionnelles\n            </SectionTitle>\n            <InfoItem delay=\"0.7s\">\n              <InfoLabel>Date d'embauche</InfoLabel>\n              <InfoValue>\n                {employee.hire_date\n                  ? formatDateForDisplay(employee.hire_date)\n                  : \"Non renseignée\"}\n              </InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.8s\">\n              <InfoLabel>Heures contractuelles</InfoLabel>\n              <InfoValue>\n                {employee.contractHours || \"0\"} heures/semaine\n              </InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.9s\">\n              <InfoLabel>Solde d'heures</InfoLabel>\n              <InfoValue>{employee.hour_balance || \"0\"} heures</InfoValue>\n            </InfoItem>\n          </InfoSection>\n        </motion.div>\n      </CardContent>\n\n      <CardFooter>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Retour\n        </Button>\n        <Button variant=\"primary\" onClick={onEdit}>\n          Modifier\n        </Button>\n      </CardFooter>\n    </CardContainer>\n  );\n};\n\nexport default EmployeeCard;\n","import { memo, useCallback, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport styled from \"styled-components\";\nimport { EMPLOYEE_STATUSES } from \"../../config/constants\";\nimport { Button } from \"../ui\";\nimport { FormInput, FormSelect } from \"../ui/Form\";\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n`;\n\nconst ConfirmationModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ConfirmationContent = styled.div`\n  background-color: white;\n  padding: 2rem;\n  border-radius: 8px;\n  max-width: 500px;\n  width: 90%;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst ConfirmationTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst ConfirmationText = styled.p`\n  margin-bottom: 2rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst ConfirmationActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n`;\n\nconst EmployeeForm = ({ employee, onSubmit, onDelete }) => {\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [showSaveConfirmation, setShowSaveConfirmation] = useState(false);\n\n  // Fonction pour formater les dates ISO en format YYYY-MM-DD\n  const formatDateForInput = (dateString) => {\n    if (!dateString) return \"\";\n    try {\n      // Si la date est déjà au format YYYY-MM-DD, la retourner telle quelle\n      if (/^\\d{4}-\\d{2}-\\d{2}$/.test(dateString)) {\n        return dateString;\n      }\n      // Sinon, convertir la date ISO en format YYYY-MM-DD\n      const date = new Date(dateString);\n      return date.toISOString().split(\"T\")[0];\n    } catch (error) {\n      console.error(\"Erreur lors du formatage de la date:\", error);\n      return \"\";\n    }\n  };\n\n  const initialFormData = {\n    first_name: employee?.first_name || \"\",\n    last_name: employee?.last_name || \"\",\n    email: employee?.email || \"\",\n    phone: employee?.phone || \"\",\n    address: employee?.address || \"\",\n    city: employee?.city || \"\",\n    zipCode: employee?.zip_code || \"\",\n    department: employee?.department || \"\",\n    role: employee?.role || \"\",\n    status: employee?.status || \"active\",\n    birthdate: formatDateForInput(employee?.birthdate) || \"\",\n    hire_date:\n      formatDateForInput(employee?.hire_date) ||\n      formatDateForInput(new Date().toISOString()),\n    contractHours: employee?.contractHours ?? 35,\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n\n  useEffect(() => {\n    // Mettre à jour le formulaire quand l'employé change\n    if (employee) {\n      setFormData({\n        first_name: employee.first_name || \"\",\n        last_name: employee.last_name || \"\",\n        email: employee.email || \"\",\n        phone: employee.phone || \"\",\n        address: employee.address || \"\",\n        city: employee.city || \"\",\n        zipCode: employee.zip_code || \"\",\n        department: employee.department || \"\",\n        role: employee.role || \"\",\n        status: employee.status || \"active\",\n        birthdate: formatDateForInput(employee.birthdate) || \"\",\n        hire_date:\n          formatDateForInput(employee.hire_date) ||\n          formatDateForInput(new Date().toISOString()),\n        contractHours: employee.contractHours ?? 35,\n      });\n    }\n  }, [employee]);\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      // Vérifier si le token est présent\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n        return;\n      }\n\n      // Si c'est une modification, demander confirmation\n      if (employee) {\n        setShowSaveConfirmation(true);\n      } else {\n        // Si c'est une création, soumettre directement\n        console.log(\"Données du formulaire à soumettre:\", formData);\n        onSubmit(formData);\n      }\n    },\n    [formData, onSubmit, employee]\n  );\n\n  const confirmSave = useCallback(() => {\n    // Vérifier si le token est présent\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n      setShowSaveConfirmation(false);\n      return;\n    }\n\n    console.log(\"Données du formulaire à soumettre:\", formData);\n    onSubmit(formData);\n    setShowSaveConfirmation(false);\n  }, [formData, onSubmit]);\n\n  const cancelSave = useCallback(() => {\n    setShowSaveConfirmation(false);\n  }, []);\n\n  const handleDeleteClick = useCallback(() => {\n    // Vérifier si le token est présent\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n      return;\n    }\n\n    setShowDeleteConfirmation(true);\n  }, []);\n\n  const confirmDelete = useCallback(() => {\n    // Vérifier si le token est présent\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n      setShowDeleteConfirmation(false);\n      return;\n    }\n\n    if (onDelete) onDelete();\n    setShowDeleteConfirmation(false);\n  }, [onDelete]);\n\n  const cancelDelete = useCallback(() => {\n    setShowDeleteConfirmation(false);\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormGrid>\n          <FormInput\n            label=\"Prénom\"\n            name=\"first_name\"\n            value={formData.first_name}\n            onChange={handleChange}\n            required\n          />\n          <FormInput\n            label=\"Nom\"\n            name=\"last_name\"\n            value={formData.last_name}\n            onChange={handleChange}\n            required\n          />\n          <FormInput\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Téléphone\"\n            name=\"phone\"\n            type=\"tel\"\n            value={formData.phone}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Adresse\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Ville\"\n            name=\"city\"\n            value={formData.city}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Code postal\"\n            name=\"zipCode\"\n            value={formData.zipCode}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Date de naissance\"\n            name=\"birthdate\"\n            type=\"date\"\n            value={formData.birthdate}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Département\"\n            name=\"department\"\n            value={formData.department}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Rôle\"\n            name=\"role\"\n            value={formData.role}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Heures contractuelles\"\n            name=\"contractHours\"\n            type=\"number\"\n            min=\"0\"\n            step=\"0.5\"\n            value={formData.contractHours}\n            onChange={handleChange}\n            helpText=\"Nombre d'heures hebdomadaires\"\n          />\n          <FormSelect\n            label=\"Statut\"\n            name=\"status\"\n            value={formData.status}\n            onChange={handleChange}\n            required\n          >\n            {EMPLOYEE_STATUSES.map((status) => (\n              <option key={status.value} value={status.value}>\n                {status.label}\n              </option>\n            ))}\n          </FormSelect>\n          <FormInput\n            label=\"Date d'embauche\"\n            name=\"hire_date\"\n            type=\"date\"\n            value={formData.hire_date}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n        </FormGrid>\n\n        <FormActions>\n          {onDelete && (\n            <Button type=\"button\" onClick={handleDeleteClick} variant=\"error\">\n              Supprimer\n            </Button>\n          )}\n          <Button type=\"submit\" variant=\"primary\">\n            {employee ? \"Enregistrer\" : \"Ajouter\"}\n          </Button>\n        </FormActions>\n      </form>\n\n      {/* Modal de confirmation de suppression */}\n      {showDeleteConfirmation && (\n        <ConfirmationModal>\n          <ConfirmationContent>\n            <ConfirmationTitle>Confirmer la suppression</ConfirmationTitle>\n            <ConfirmationText>\n              Êtes-vous sûr de vouloir supprimer cet employé ? Cette action est\n              irréversible.\n            </ConfirmationText>\n            <ConfirmationActions>\n              <Button type=\"button\" onClick={cancelDelete} variant=\"secondary\">\n                Annuler\n              </Button>\n              <Button type=\"button\" onClick={confirmDelete} variant=\"error\">\n                Supprimer\n              </Button>\n            </ConfirmationActions>\n          </ConfirmationContent>\n        </ConfirmationModal>\n      )}\n\n      {/* Modal de confirmation d'enregistrement */}\n      {showSaveConfirmation && (\n        <ConfirmationModal>\n          <ConfirmationContent>\n            <ConfirmationTitle>Confirmer les modifications</ConfirmationTitle>\n            <ConfirmationText>\n              Êtes-vous sûr de vouloir enregistrer les modifications pour cet\n              employé ?\n            </ConfirmationText>\n            <ConfirmationActions>\n              <Button type=\"button\" onClick={cancelSave} variant=\"secondary\">\n                Annuler\n              </Button>\n              <Button type=\"button\" onClick={confirmSave} variant=\"primary\">\n                Enregistrer\n              </Button>\n            </ConfirmationActions>\n          </ConfirmationContent>\n        </ConfirmationModal>\n      )}\n    </>\n  );\n};\n\nexport default memo(EmployeeForm);\n","import { useCallback, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport styled from \"styled-components\";\nimport { API_ENDPOINTS, API_URL } from \"../../config/api\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useApi from \"../../hooks/useApi\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.colors.background.secondary};\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst Title = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: 4px;\n  font-size: 1rem;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.primary}33;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  flex: 1;\n\n  &:hover {\n    opacity: 0.9;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst AddButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.success};\n  color: white;\n`;\n\nconst SubtractButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.error};\n  color: white;\n`;\n\nconst CurrentBalance = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst BalanceValue = styled.span`\n  font-weight: 600;\n  color: ${({ isPositive, theme }) =>\n    isPositive ? theme.colors.success : theme.colors.error};\n`;\n\nconst StepperContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n`;\n\nconst StepButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.background.hover};\n  color: ${({ theme }) => theme.colors.text.primary};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.background.active};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst HoursDisplay = styled.div`\n  font-size: 1rem;\n  font-weight: 600;\n  min-width: 60px;\n  text-align: center;\n`;\n\nconst HourBalanceManager = ({ employeeId, onBalanceUpdated }) => {\n  const [hours, setHours] = useState(\"1\");\n  const [currentBalance, setCurrentBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [employeeData, setEmployeeData] = useState(null);\n  const api = useApi();\n  const { token, user } = useAuth();\n\n  // Charger les données de l'employé\n  const fetchEmployeeData = useCallback(async () => {\n    try {\n      const response = await api.get(API_ENDPOINTS.EMPLOYEES.BY_ID(employeeId));\n      if (response) {\n        setEmployeeData(response);\n      }\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la récupération des données de l'employé:\",\n        error\n      );\n    }\n  }, [employeeId, api]);\n\n  // Charger le solde actuel\n  const fetchCurrentBalance = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await api.get(\n        API_ENDPOINTS.HOUR_BALANCE.BY_EMPLOYEE(employeeId)\n      );\n\n      // Vérifier si la réponse contient hour_balance\n      if (\n        response &&\n        (response.hour_balance !== undefined || response.balance !== undefined)\n      ) {\n        const balance =\n          response.hour_balance !== undefined\n            ? response.hour_balance\n            : response.balance;\n        setCurrentBalance(parseFloat(balance));\n      } else {\n        console.error(\"Format de réponse inattendu:\", response);\n        toast.error(\"Format de réponse inattendu\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération du solde d'heures:\", error);\n      toast.error(\"Impossible de récupérer le solde d'heures\");\n    } finally {\n      setLoading(false);\n    }\n  }, [employeeId, api]);\n\n  // Charger le solde et les données de l'employé au montage du composant\n  useEffect(() => {\n    if (employeeId) {\n      fetchCurrentBalance();\n      fetchEmployeeData();\n    }\n  }, [employeeId, fetchCurrentBalance, fetchEmployeeData]);\n\n  // Ajuster la valeur des heures\n  const adjustHours = (increment) => {\n    const currentValue = parseFloat(hours) || 0;\n    const newValue = Math.max(0.25, currentValue + increment);\n    setHours(newValue.toFixed(2));\n  };\n\n  // Ajouter une activité récente\n  const logActivity = useCallback(\n    async (operation, hoursValue) => {\n      try {\n        console.log(\"Tentative d'enregistrement d'une activité...\");\n        console.log(\"URL de l'API utilisée:\", API_URL);\n        console.log(\"Token d'authentification disponible:\", !!token);\n        console.log(\"Utilisateur connecté:\", user);\n\n        if (!employeeData) {\n          console.warn(\"Données de l'employé non disponibles, récupération...\");\n          await fetchEmployeeData();\n        }\n\n        const employeeName = employeeData\n          ? `${employeeData.first_name} ${employeeData.last_name}`\n          : `Employé #${employeeId}`;\n\n        const userName = user\n          ? `${user.first_name || \"\"} ${user.last_name || \"\"}`.trim()\n          : \"Un utilisateur\";\n\n        console.log(\"Nom de l'employé pour l'activité:\", employeeName);\n        console.log(\"Nom de l'utilisateur pour l'activité:\", userName);\n\n        // Créer une description claire pour l'activité\n        const description = `${userName} a ${\n          operation === \"add\" ? \"ajouté\" : \"soustrait\"\n        } ${hoursValue}h au solde d'heures de ${employeeName}`;\n\n        // Préparer les données de l'activité selon le format attendu par le serveur\n        const activityData = {\n          type: \"update\",\n          entity_type: \"employee\",\n          entity_id: employeeId,\n          description: description,\n          details: {\n            userName,\n            employeeName,\n            action:\n              operation === \"add\" ? \"Ajout d'heures\" : \"Soustraction d'heures\",\n            hours: hoursValue,\n            oldBalance: currentBalance,\n            newBalance:\n              operation === \"add\"\n                ? currentBalance + parseFloat(hoursValue)\n                : currentBalance - parseFloat(hoursValue),\n          },\n        };\n\n        console.log(\"Données de l'activité à enregistrer:\", activityData);\n\n        // Utiliser directement l'API pour créer l'activité\n        const response = await api.post(\n          API_ENDPOINTS.ACTIVITIES.BASE,\n          activityData\n        );\n\n        console.log(\"Réponse de l'enregistrement d'activité:\", response);\n\n        if (response && response.success) {\n          console.log(\"Activité enregistrée avec succès\");\n          return true;\n        } else {\n          console.warn(\n            \"Réponse inattendue lors de l'enregistrement de l'activité:\",\n            response\n          );\n          return false;\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'enregistrement de l'activité:\", error);\n        return false;\n      }\n    },\n    [\n      api,\n      employeeId,\n      employeeData,\n      currentBalance,\n      fetchEmployeeData,\n      token,\n      user,\n    ]\n  );\n\n  // Mettre à jour le solde d'heures\n  const updateBalance = async (operation) => {\n    if (!hours || isNaN(parseFloat(hours)) || parseFloat(hours) <= 0) {\n      toast.error(\"Veuillez entrer un nombre d'heures valide\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      // Créer un nouvel enregistrement dans work_hours\n      const response = await api.post(API_ENDPOINTS.WORK_HOURS.BASE, {\n        employeeId: employeeId,\n        date: new Date().toISOString().split(\"T\")[0],\n        expectedHours: operation === \"add\" ? 0 : parseFloat(hours),\n        actualHours: operation === \"add\" ? parseFloat(hours) : 0,\n        balance: operation === \"add\" ? parseFloat(hours) : -parseFloat(hours),\n        description:\n          operation === \"add\"\n            ? \"Ajout manuel d'heures\"\n            : \"Soustraction manuelle d'heures\",\n      });\n\n      if (response && response.success) {\n        // Récupérer le solde mis à jour\n        await fetchCurrentBalance();\n\n        // Enregistrer l'activité\n        try {\n          await logActivity(operation, hours);\n          console.log(\n            \"Activité enregistrée avec succès après mise à jour du solde\"\n          );\n        } catch (activityError) {\n          console.error(\n            \"Erreur lors de l'enregistrement de l'activité:\",\n            activityError\n          );\n          // Ne pas bloquer le flux principal en cas d'erreur d'enregistrement d'activité\n        }\n\n        // Notifier le parent que le solde a été mis à jour\n        if (onBalanceUpdated) {\n          onBalanceUpdated();\n        }\n\n        toast.success(\n          operation === \"add\"\n            ? `${hours}h ajoutées au solde`\n            : `${hours}h soustraites du solde`\n        );\n\n        // Réinitialiser le formulaire\n        setHours(\"1\");\n      } else {\n        throw new Error(\n          response?.message || \"Erreur lors de la mise à jour du solde\"\n        );\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la mise à jour du solde d'heures:\", error);\n      toast.error(\n        error.message || \"Erreur lors de la mise à jour du solde d'heures\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>Gestion du solde d'heures</Title>\n\n      {currentBalance !== null && (\n        <CurrentBalance>\n          Solde actuel:\n          <BalanceValue isPositive={currentBalance >= 0}>\n            {currentBalance >= 0 ? \"+\" : \"\"}\n            {currentBalance.toFixed(2)}h\n          </BalanceValue>\n        </CurrentBalance>\n      )}\n\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <InputGroup>\n          <Label htmlFor=\"hours\">Nombre d'heures</Label>\n          <Input\n            id=\"hours\"\n            type=\"number\"\n            min=\"0.25\"\n            step=\"0.25\"\n            value={hours}\n            onChange={(e) => setHours(e.target.value)}\n            placeholder=\"Entrez le nombre d'heures\"\n            disabled={loading}\n          />\n\n          <StepperContainer>\n            <StepButton\n              type=\"button\"\n              onClick={() => adjustHours(-0.25)}\n              disabled={loading || parseFloat(hours) <= 0.25}\n            >\n              -\n            </StepButton>\n            <HoursDisplay>{hours}h</HoursDisplay>\n            <StepButton\n              type=\"button\"\n              onClick={() => adjustHours(0.25)}\n              disabled={loading}\n            >\n              +\n            </StepButton>\n          </StepperContainer>\n        </InputGroup>\n\n        <ButtonGroup>\n          <AddButton\n            type=\"button\"\n            onClick={() => updateBalance(\"add\")}\n            disabled={loading || !hours}\n          >\n            Ajouter\n          </AddButton>\n          <SubtractButton\n            type=\"button\"\n            onClick={() => updateBalance(\"subtract\")}\n            disabled={loading || !hours}\n          >\n            Soustraire\n          </SubtractButton>\n        </ButtonGroup>\n      </Form>\n    </Container>\n  );\n};\n\nexport default HourBalanceManager;\n","import Lottie from \"lottie-react\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport employeesAnimation from \"../assets/animations/employees.json\";\nimport EmployeeCard from \"../components/employees/EmployeeCard\";\nimport EmployeeForm from \"../components/employees/EmployeeForm\";\nimport HourBalanceManager from \"../components/employees/HourBalanceManager\";\nimport { Button, DataTable, Modal, PlusIcon } from \"../components/ui\";\nimport { FormSelect } from \"../components/ui/Form\";\nimport { useNotification } from \"../components/ui/Notification\";\nimport { EMPLOYEE_STATUSES, EMPLOYEE_TABLE_COLUMNS } from \"../config/constants\";\nimport useEmployees from \"../hooks/useEmployees\";\n\n// Composants stylisés\nconst PageContainer = styled.div`\n  padding: 2rem;\n`;\n\nconst PageHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n`;\n\nconst AnimationContainer = styled.div`\n  width: 80px;\n  height: 80px;\n  flex-shrink: 0;\n`;\n\nconst HeaderRight = styled.div`\n  display: flex;\n  gap: 1rem;\n\n  @media (min-width: 768px) {\n    justify-content: flex-end;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst PageDescription = styled.p`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0.5rem 0 0 0;\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  margin-bottom: 2rem;\n`;\n\nconst Tab = styled.button`\n  padding: 1rem 1.5rem;\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.secondary};\n  background: none;\n  border: none;\n  border-bottom: 2px solid\n    ${({ theme, active }) => (active ? theme.colors.primary : \"transparent\")};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.text.primary};\n  }\n`;\n\nconst TabBadge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  border-radius: 10px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.primary : `${theme.colors.text.disabled}33`};\n  color: ${({ theme, active }) =>\n    active ? \"white\" : theme.colors.text.secondary};\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  margin-left: 0.5rem;\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst EmptyStateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem 2rem;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  text-align: center;\n  margin-top: 2rem;\n`;\n\nconst EmptyStateIcon = styled.div`\n  font-size: 4rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst EmptyStateTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 1rem;\n`;\n\nconst EmptyStateDescription = styled.p`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  max-width: 500px;\n  margin-bottom: 2rem;\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst TabsModalContainer = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  margin-bottom: 1rem;\n`;\n\nconst TabModal = styled.button`\n  padding: 0.75rem 1.25rem;\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.secondary};\n  background: none;\n  border: none;\n  border-bottom: 2px solid\n    ${({ theme, active }) => (active ? theme.colors.primary : \"transparent\")};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.text.primary};\n  }\n`;\n\n// Composant principal\nconst Employees = () => {\n  const { showNotification } = useNotification();\n  const [isLoading, setIsLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"all\");\n  const [showModal, setShowModal] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [viewingEmployee, setViewingEmployee] = useState(null);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [filters, setFilters] = useState({\n    department: \"\",\n    role: \"\",\n    status: \"\",\n  });\n  const [activeModalTab, setActiveModalTab] = useState(\"infos\");\n\n  const {\n    employees,\n    loading,\n    error,\n    createEmployee,\n    updateEmployee,\n    deleteEmployee,\n    fetchEmployees,\n    getEmployeesByStatus,\n  } = useEmployees();\n\n  const navigate = useNavigate();\n\n  // Filtrer les employés avec useMemo pour éviter les recalculs inutiles\n  const filteredEmployees = useMemo(() => {\n    let employeesToFilter = employees;\n\n    // Filtrer par statut si nécessaire\n    if (activeTab !== \"all\") {\n      employeesToFilter = getEmployeesByStatus(activeTab);\n    }\n\n    // Appliquer les autres filtres\n    return employeesToFilter.filter((employee) => {\n      if (filters.department && employee.department !== filters.department)\n        return false;\n      if (filters.role && employee.role !== filters.role) return false;\n      if (filters.status && employee.status !== filters.status) return false;\n      return true;\n    });\n  }, [employees, activeTab, filters, getEmployeesByStatus]);\n\n  // Récupérer les départements et rôles uniques des employés\n  const uniqueDepartments = useMemo(() => {\n    const departments = employees\n      .map((emp) => emp.department)\n      .filter((dept, index, self) => dept && self.indexOf(dept) === index);\n    return departments;\n  }, [employees]);\n\n  const uniqueRoles = useMemo(() => {\n    const roles = employees\n      .map((emp) => emp.role)\n      .filter((role, index, self) => role && self.indexOf(role) === index);\n    return roles;\n  }, [employees]);\n\n  const handleUpdateEmployee = useCallback(\n    async (employeeData) => {\n      try {\n        if (!editingEmployee?.id) {\n          throw new Error(\"Aucun employé sélectionné pour la mise à jour\");\n        }\n\n        setIsLoading(true);\n        console.log(\"ID de l'employé à mettre à jour:\", editingEmployee.id);\n        console.log(\"Données à envoyer:\", employeeData);\n\n        // Pas besoin de convertir les valeurs numériques ici, c'est fait dans le hook\n        const result = await updateEmployee(editingEmployee.id, employeeData);\n\n        console.log(\"Résultat de la mise à jour:\", result);\n\n        if (!result || !result.success) {\n          throw new Error(result?.error || \"La mise à jour a échoué\");\n        }\n\n        // Rafraîchir la liste des employés\n        await fetchEmployees();\n\n        showNotification({\n          type: \"success\",\n          message: `Mise à jour des informations de l'employé ${employeeData.first_name} ${employeeData.last_name}`,\n        });\n\n        // Fermer le modal et réinitialiser l'état\n        setShowModal(false);\n        // Réinitialiser editingEmployee après la fermeture du modal\n        setTimeout(() => setEditingEmployee(null), 0);\n      } catch (error) {\n        console.error(\"Erreur détaillée:\", error);\n        showNotification({\n          type: \"error\",\n          message:\n            error.message || \"Erreur lors de la mise à jour de l'employé\",\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [editingEmployee, updateEmployee, fetchEmployees, showNotification]\n  );\n\n  const handleCreateEmployee = useCallback(\n    async (employeeData) => {\n      try {\n        setIsLoading(true);\n\n        console.log(\"Données pour création d'employé:\", employeeData);\n\n        // Pas besoin de convertir les valeurs numériques ici, c'est fait dans le hook\n        const result = await createEmployee(employeeData);\n\n        console.log(\"Résultat de la création:\", result);\n\n        if (!result || !result.success) {\n          throw new Error(result?.error || \"La création a échoué\");\n        }\n\n        // Rafraîchir la liste des employés\n        await fetchEmployees();\n\n        showNotification({\n          type: \"success\",\n          message: `Création d'un nouvel employé: ${employeeData.first_name} ${employeeData.last_name}`,\n        });\n\n        // Fermer le modal et rediriger vers la page des employés\n        setShowModal(false);\n\n        // Rediriger vers la page des employés\n        navigate(\"/employees\");\n      } catch (error) {\n        console.error(\"Erreur détaillée:\", error);\n        showNotification({\n          type: \"error\",\n          message: error.message || \"Erreur lors de la création de l'employé\",\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [createEmployee, fetchEmployees, showNotification, navigate]\n  );\n\n  const handleDeleteEmployee = useCallback(async () => {\n    try {\n      if (!editingEmployee?.id) {\n        throw new Error(\"Aucun employé sélectionné pour la suppression\");\n      }\n\n      setIsLoading(true);\n\n      console.log(\"Tentative de suppression de l'employé:\", editingEmployee.id);\n\n      const result = await deleteEmployee(editingEmployee.id);\n\n      console.log(\"Résultat de la suppression:\", result);\n\n      if (!result || !result.success) {\n        throw new Error(result?.error || \"La suppression a échoué\");\n      }\n\n      // Rafraîchir la liste des employés\n      await fetchEmployees();\n\n      showNotification({\n        type: \"success\",\n        message: `Suppression de l'employé ${editingEmployee.first_name} ${editingEmployee.last_name}`,\n      });\n\n      setEditingEmployee(null);\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"Erreur détaillée:\", error);\n      showNotification({\n        type: \"error\",\n        message: error.message || \"Erreur lors de la suppression de l'employé\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [editingEmployee, deleteEmployee, fetchEmployees, showNotification]);\n\n  const handleAddEmployee = useCallback(() => {\n    setEditingEmployee(null);\n    setShowModal(true);\n  }, []);\n\n  const handleCloseModal = useCallback(() => {\n    setShowModal(false);\n    // Réinitialiser après la fermeture du modal\n    setTimeout(() => {\n      setEditingEmployee(null);\n      setViewingEmployee(null);\n      setShowEditForm(false);\n    }, 300);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (formData) => {\n      try {\n        if (editingEmployee) {\n          await handleUpdateEmployee(formData);\n        } else {\n          await handleCreateEmployee(formData);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la soumission:\", error);\n      }\n    },\n    [editingEmployee, handleUpdateEmployee, handleCreateEmployee]\n  );\n\n  const handleTabChange = useCallback((tab) => {\n    setActiveTab(tab);\n  }, []);\n\n  const handleFilterChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFilters((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }, []);\n\n  const countByStatus = getEmployeesByStatus();\n\n  const handleEditEmployee = useCallback((employee) => {\n    console.log(\"Sélection de l'employé pour édition:\", employee);\n    setEditingEmployee(employee);\n    setViewingEmployee(employee);\n    setShowEditForm(false);\n    setShowModal(true);\n  }, []);\n\n  const handleStartEditing = useCallback(() => {\n    setShowEditForm(true);\n  }, []);\n\n  // Nouvelle fonction pour gérer le clic sur une cellule spécifique du tableau\n  const handleCellClick = useCallback((employee, columnId) => {\n    // Cette fonction ne sera appelée que pour la colonne hour_balance grâce à la modification dans DataTable\n    if (columnId === \"hour_balance\") {\n      console.log(\"Clic sur le solde d'heures de l'employé:\", employee.id);\n      setEditingEmployee(employee);\n      setViewingEmployee(employee);\n      setActiveModalTab(\"balance\");\n      setShowModal(true);\n    }\n  }, []);\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <HeaderLeft>\n          <AnimationContainer>\n            <Lottie\n              animationData={employeesAnimation}\n              loop={true}\n              autoplay={true}\n              style={{ width: 80, height: 80 }}\n              rendererSettings={{\n                preserveAspectRatio: \"xMidYMid slice\",\n              }}\n            />\n          </AnimationContainer>\n          <div>\n            <PageTitle>Gestion des employés</PageTitle>\n            <PageDescription>\n              Gérez les informations de vos employés\n            </PageDescription>\n          </div>\n        </HeaderLeft>\n        <HeaderRight>\n          <Button variant=\"primary\" onClick={handleAddEmployee}>\n            <PlusIcon /> Ajouter un employé\n          </Button>\n        </HeaderRight>\n      </PageHeader>\n\n      {error ? (\n        <EmptyStateContainer>\n          <EmptyStateIcon>⚠️</EmptyStateIcon>\n          <EmptyStateTitle>Erreur d'authentification</EmptyStateTitle>\n          <EmptyStateDescription>\n            {error}. Veuillez vous connecter pour accéder à cette page.\n          </EmptyStateDescription>\n          <Button primary as=\"a\" href=\"/login\">\n            Se connecter\n          </Button>\n        </EmptyStateContainer>\n      ) : employees.length === 0 && !loading ? (\n        <EmptyStateContainer>\n          <EmptyStateIcon>👥</EmptyStateIcon>\n          <EmptyStateTitle>Aucun employé</EmptyStateTitle>\n          <EmptyStateDescription>\n            Vous n'avez pas encore ajouté d'employés à votre entreprise.\n            Commencez par ajouter votre premier employé.\n          </EmptyStateDescription>\n          <Button primary onClick={handleAddEmployee}>\n            <PlusIcon />\n            Ajouter un employé\n          </Button>\n        </EmptyStateContainer>\n      ) : (\n        <>\n          <TabsContainer>\n            <Tab\n              active={activeTab === \"all\"}\n              onClick={() => handleTabChange(\"all\")}\n            >\n              Tous\n              <TabBadge active={activeTab === \"all\"}>\n                {countByStatus.all}\n              </TabBadge>\n            </Tab>\n            <Tab\n              active={activeTab === \"active\"}\n              onClick={() => handleTabChange(\"active\")}\n            >\n              Actifs\n              <TabBadge active={activeTab === \"active\"}>\n                {countByStatus.active}\n              </TabBadge>\n            </Tab>\n            <Tab\n              active={activeTab === \"pending\"}\n              onClick={() => handleTabChange(\"pending\")}\n            >\n              En attente\n              <TabBadge active={activeTab === \"pending\"}>\n                {countByStatus.pending}\n              </TabBadge>\n            </Tab>\n            <Tab\n              active={activeTab === \"inactive\"}\n              onClick={() => handleTabChange(\"inactive\")}\n            >\n              Inactifs\n              <TabBadge active={activeTab === \"inactive\"}>\n                {countByStatus.inactive}\n              </TabBadge>\n            </Tab>\n          </TabsContainer>\n\n          <FormGrid>\n            <FormSelect\n              label=\"Département\"\n              name=\"department\"\n              value={filters.department}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Tous les départements</option>\n              {uniqueDepartments.map((dept) => (\n                <option key={dept} value={dept}>\n                  {dept}\n                </option>\n              ))}\n            </FormSelect>\n            <FormSelect\n              label=\"Rôle\"\n              name=\"role\"\n              value={filters.role}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Tous les rôles</option>\n              {uniqueRoles.map((role) => (\n                <option key={role} value={role}>\n                  {role}\n                </option>\n              ))}\n            </FormSelect>\n            <FormSelect\n              label=\"Statut\"\n              name=\"status\"\n              value={filters.status}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Tous les statuts</option>\n              {EMPLOYEE_STATUSES.map((status) => (\n                <option key={status.value} value={status.value}>\n                  {status.label}\n                </option>\n              ))}\n            </FormSelect>\n          </FormGrid>\n\n          <DataTable\n            title={`Liste des employés (${filteredEmployees.length})`}\n            data={filteredEmployees}\n            columns={EMPLOYEE_TABLE_COLUMNS}\n            loading={loading}\n            pagination={true}\n            pageSize={10}\n            onRowClick={handleEditEmployee}\n            onCellClick={handleCellClick}\n            emptyStateTitle=\"Aucun employé trouvé\"\n            emptyStateMessage=\"Aucun employé ne correspond à vos critères de recherche.\"\n          />\n        </>\n      )}\n\n      <Modal\n        isOpen={showModal}\n        onClose={handleCloseModal}\n        title={\n          !editingEmployee\n            ? \"Ajouter un employé\"\n            : showEditForm\n            ? `Modifier ${editingEmployee.first_name} ${editingEmployee.last_name}`\n            : activeModalTab === \"balance\"\n            ? `Gestion du solde d'heures - ${editingEmployee.first_name} ${editingEmployee.last_name}`\n            : `Détails de ${editingEmployee.first_name} ${editingEmployee.last_name}`\n        }\n        size=\"large\"\n      >\n        {editingEmployee && !showEditForm && activeModalTab !== \"balance\" ? (\n          <EmployeeCard\n            employee={viewingEmployee}\n            onEdit={handleStartEditing}\n            onClose={handleCloseModal}\n          />\n        ) : (\n          <>\n            {activeModalTab === \"infos\" && (\n              <EmployeeForm\n                employee={editingEmployee}\n                onSubmit={handleSubmit}\n                onDelete={editingEmployee ? handleDeleteEmployee : undefined}\n              />\n            )}\n            {activeModalTab === \"balance\" && editingEmployee && (\n              <HourBalanceManager employeeId={editingEmployee.id} />\n            )}\n          </>\n        )}\n      </Modal>\n    </PageContainer>\n  );\n};\n\nexport default Employees;\n"],"names":["formatDate","date","formatStr","arguments","length","undefined","dateObj","Date","isNaN","getTime","console","error","format","locale","fr","formatDateForInput","getWeekStart","startOfWeek","weekStartsOn","getWeekEnd","endOfWeek","addWeeks","amount","addWeeksDate","getDaysOfWeek","weekStart","days","i","push","addDays","isWeekend","day","getDay","calculateHours","startDate","endDate","diffHours","Math","round","getDayName","short","dayIndex","formatDateForAPI","d","getFullYear","String","getMonth","padStart","getDate","isHoliday","holidays","FRENCH_HOLIDAYS_2024","formattedDate","some","holiday","isWorkingDay","getWorkingDaysCount","start","end","count","currentDate","setDate","formatDateForDisplay","month","EMPLOYEE_STATUSES","value","label","VACATION_TYPES","color","defaultQuota","name","EMPLOYEE_TABLE_COLUMNS","id","header","accessor","employee","first_name","last_name","sortable","email","department","role","status","type","balance","hour_balance","isPositive","display","hire_date","toLocaleDateString","SwitchContainer","styled","SwitchInput","input","Slider","span","SunIcon","MoonIcon","ThemeSwitch","_ref","onChange","checked","_jsxs","children","_jsx","TableContainer","div","theme","borderRadius","medium","_ref2","shadows","small","_ref3","colors","surface","TableHeader","_ref4","border","TableTitle","h2","_ref5","typography","fontWeights","semiBold","_ref6","text","primary","TableActions","SearchInput","_ref7","background","_ref8","_ref9","_ref10","_ref11","_ref12","secondary","_ref13","_ref14","disabled","Table","button","_ref15","active","_ref16","_ref17","_ref18","_ref19","_ref20","table","THead","thead","_ref21","_ref22","Th","th","_ref23","_ref24","_ref25","$sortable","_ref26","SortIcon","_ref27","$direction","_ref28","$active","TBody","tbody","_ref29","Tr","tr","_ref30","Td","td","_ref31","_ref32","_ref33","_ref34","StatusBadge","_ref35","_ref36","success","warning","_ref37","HourBalanceBadge","_ref38","_ref39","_ref40","_ref41","TableFooter","_ref42","PageInfo","_ref43","Pagination","PageButton","_ref44","_ref45","_ref46","_ref47","_ref48","EmptyState","_ref49","_ref50","_ref51","_ref52","LoadingOverlay","_ref53","LoadingSpinner","_ref54","_ref55","SearchIcon","width","height","viewBox","fill","xmlns","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ChevronUpIcon","ChevronLeftIcon","ChevronRightIcon","EmptyIcon","EditIcon","style","marginLeft","opacity","_ref56","title","data","columns","loading","pagination","pageSize","onRowClick","onCellClick","emptyStateTitle","emptyStateMessage","currentPage","setCurrentPage","useState","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","showFilters","setShowFilters","useEffect","filteredAndSortedData","useMemo","filteredData","lowerCaseSearchTerm","toLowerCase","filter","item","column","toString","includes","find","col","sort","a","b","aValue","bValue","paginatedData","startIndex","slice","totalPages","ceil","handlePageChange","page","formatCellValue","s","placeholder","e","target","position","overflowX","map","onClick","handleSort","row","rowIndex","cursor","stopPropagation","className","min","renderPaginationButtons","buttons","max","IconWrapper","memo","size","props","PlusIcon","fadeIn","keyframes","slideIn","ModalOverlay","ModalContainer","large","getModalWidth","ModalHeader","ModalTitle","semibold","CloseButton","ModalContent","CloseIcon","isOpen","onClose","React","handleEscape","document","addEventListener","removeEventListener","sizes","sm","spacing","md","lg","css","sorted","xs","slideInUp","index","clickable","selected","align","regular","select","_ref57","_ref58","_ref59","xl","_ref60","_ref61","_ref62","_ref63","_ref64","CardContainer","motion","card","CardHeader","Avatar","main","EmployeeName","EmployeeRole","p","CardContent","InfoSection","SectionTitle","h3","InfoItem","delay","InfoLabel","InfoValue","CardFooter","light","info","grey","dark","onEdit","isVisible","setIsVisible","itemVariants","hidden","y","visible","textAlign","padding","Button","initial","animate","exit","variants","transition","duration","when","staggerChildren","getInitials","firstName","lastName","charAt","toUpperCase","inactive","vacation","sick","formatStatus","FaUser","phone","birthdate","FaMapMarkerAlt","address","city","zip_code","FaBriefcase","contractHours","variant","FormGrid","FormActions","ConfirmationModal","ConfirmationContent","ConfirmationTitle","ConfirmationText","ConfirmationActions","EmployeeForm","_employee$contractHou","onSubmit","onDelete","showDeleteConfirmation","setShowDeleteConfirmation","showSaveConfirmation","setShowSaveConfirmation","dateString","test","toISOString","split","initialFormData","zipCode","formData","setFormData","_employee$contractHou2","handleChange","useCallback","prev","handleSubmit","preventDefault","localStorage","getItem","log","toast","confirmSave","cancelSave","handleDeleteClick","confirmDelete","cancelDelete","_Fragment","FormInput","required","helpText","step","FormSelect","Container","Title","Form","form","InputGroup","Label","Input","ButtonGroup","AddButton","SubtractButton","CurrentBalance","BalanceValue","StepperContainer","StepButton","hover","HoursDisplay","employeeId","onBalanceUpdated","hours","setHours","currentBalance","setCurrentBalance","setLoading","employeeData","setEmployeeData","api","useApi","token","user","useAuth","fetchEmployeeData","async","response","get","API_ENDPOINTS","EMPLOYEES","BY_ID","fetchCurrentBalance","HOUR_BALANCE","BY_EMPLOYEE","parseFloat","adjustHours","increment","currentValue","newValue","toFixed","logActivity","operation","hoursValue","API_URL","warn","employeeName","userName","trim","activityData","entity_type","entity_id","description","details","action","oldBalance","newBalance","post","ACTIVITIES","BASE","updateBalance","WORK_HOURS","expectedHours","actualHours","Error","message","activityError","htmlFor","PageContainer","PageHeader","HeaderLeft","AnimationContainer","HeaderRight","PageTitle","h1","bold","PageDescription","TabsContainer","Tab","TabBadge","EmptyStateContainer","EmptyStateIcon","EmptyStateTitle","EmptyStateDescription","Employees","showNotification","useNotification","isLoading","setIsLoading","activeTab","setActiveTab","showModal","setShowModal","editingEmployee","setEditingEmployee","viewingEmployee","setViewingEmployee","showEditForm","setShowEditForm","filters","setFilters","activeModalTab","setActiveModalTab","employees","createEmployee","updateEmployee","deleteEmployee","fetchEmployees","getEmployeesByStatus","useEmployees","navigate","useNavigate","filteredEmployees","employeesToFilter","uniqueDepartments","emp","dept","self","indexOf","uniqueRoles","handleUpdateEmployee","result","setTimeout","handleCreateEmployee","handleDeleteEmployee","handleAddEmployee","handleCloseModal","handleTabChange","tab","handleFilterChange","countByStatus","handleEditEmployee","handleStartEditing","handleCellClick","columnId","Lottie","animationData","employeesAnimation","loop","autoplay","rendererSettings","preserveAspectRatio","as","href","all","pending","DataTable","Modal","EmployeeCard","HourBalanceManager"],"sourceRoot":""}