{"version":3,"file":"static/js/530.f7ac3b00.chunk.js","mappings":"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","sources":["components/ui/ThemeSwitch.js","components/ui/DataTable.js","components/ui/Icons.js","components/ui/Modal.js","components/ui/Table.js","components/employees/EmployeeCard.js","components/employees/EmployeeForm.js","components/employees/HourBalanceManager.js","pages/Employees.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst SwitchContainer = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst SwitchInput = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked + span {\n    background-color: #4361ee;\n  }\n\n  &:checked + span:before {\n    transform: translateX(30px);\n  }\n`;\n\nconst Slider = styled.span`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  transition: 0.4s;\n  border-radius: 34px;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    height: 22px;\n    width: 22px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n`;\n\nconst SunIcon = styled.span`\n  position: absolute;\n  left: 8px;\n  top: 6px;\n  color: #f9d71c;\n  font-size: 16px;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nconst MoonIcon = styled.span`\n  position: absolute;\n  right: 8px;\n  top: 6px;\n  color: #f8f9fa;\n  font-size: 16px;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nexport const ThemeSwitch = ({ onChange, checked }) => {\n  return (\n    <SwitchContainer>\n      <SwitchInput type=\"checkbox\" onChange={onChange} checked={checked} />\n      <Slider />\n      <SunIcon>☀️</SunIcon>\n      <MoonIcon>🌙</MoonIcon>\n    </SwitchContainer>\n  );\n};\n\nexport default ThemeSwitch;\n","import { useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { EMPLOYEE_STATUSES } from \"../../config/constants\";\n\n// Composants stylisés\nconst TableContainer = styled.div`\n  width: 100%;\n  overflow: hidden;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst TableHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst TableTitle = styled.h2`\n  font-size: 1.25rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst TableActions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  padding: 0.5rem 0.75rem;\n  width: 250px;\n  transition: all 0.2s ease;\n\n  &:focus-within {\n    border-color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 2px ${({ theme }) => `${theme.colors.primary}22`};\n  }\n\n  svg {\n    color: ${({ theme }) => theme.colors.text.secondary};\n    margin-right: 0.5rem;\n  }\n\n  input {\n    border: none;\n    background: none;\n    outline: none;\n    width: 100%;\n    font-size: 0.875rem;\n    color: ${({ theme }) => theme.colors.text.primary};\n\n    &::placeholder {\n      color: ${({ theme }) => theme.colors.text.disabled};\n    }\n  }\n`;\n\nconst FilterButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: ${({ theme, active }) =>\n    active ? `${theme.colors.primary}11` : \"transparent\"};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  padding: 0.5rem 0.75rem;\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.primary};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme, active }) =>\n      active ? `${theme.colors.primary}22` : `${theme.colors.background}`};\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst THead = styled.thead`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst Th = styled.th`\n  padding: 1rem 1.5rem;\n  text-align: left;\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  cursor: ${({ $sortable }) => ($sortable ? \"pointer\" : \"default\")};\n  user-select: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${({ theme, $sortable }) =>\n      $sortable ? theme.colors.primary : theme.colors.text.secondary};\n  }\n`;\n\nconst SortIcon = styled.span`\n  display: inline-flex;\n  margin-left: 0.5rem;\n  transition: transform 0.2s ease;\n  transform: ${({ $direction }) =>\n    $direction === \"desc\" ? \"rotate(180deg)\" : \"rotate(0deg)\"};\n  opacity: ${({ $active }) => ($active ? 1 : 0.3)};\n`;\n\nconst TBody = styled.tbody`\n  & tr:nth-child(even) {\n    background-color: ${({ theme }) => `${theme.colors.background}55`};\n  }\n`;\n\nconst Tr = styled.tr`\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n  }\n`;\n\nconst Td = styled.td`\n  padding: 1rem 1.5rem;\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 200px;\n  vertical-align: middle;\n\n  &.clickable {\n    position: relative;\n\n    &:hover {\n      background-color: ${({ theme }) => `${theme.colors.primary}11`};\n\n      &::after {\n        content: \"\";\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        height: 2px;\n        background-color: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`;\n\nconst StatusBadge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: 0.25rem 0.75rem;\n  border-radius: 2rem;\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  background-color: ${({ theme, status }) => {\n    switch (status) {\n      case \"active\":\n        return `${theme.colors.success}22`;\n      case \"pending\":\n        return `${theme.colors.warning}22`;\n      case \"inactive\":\n        return `${theme.colors.error}22`;\n      default:\n        return `${theme.colors.text.disabled}22`;\n    }\n  }};\n  color: ${({ theme, status }) => {\n    switch (status) {\n      case \"active\":\n        return theme.colors.success;\n      case \"pending\":\n        return theme.colors.warning;\n      case \"inactive\":\n        return theme.colors.error;\n      default:\n        return theme.colors.text.disabled;\n    }\n  }};\n`;\n\nconst HourCounter = styled.span`\n  display: inline-flex;\n  align-items: center;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme, value }) => {\n    if (value > 0) return theme.colors.success;\n    if (value < 0) return theme.colors.error;\n    return theme.colors.text.primary;\n  }};\n`;\n\nconst HourBalanceBadge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: 0.25rem 0.5rem;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 0.875rem;\n  background-color: ${({ theme, isPositive }) =>\n    isPositive ? `${theme.colors.success}20` : `${theme.colors.error}20`};\n  color: ${({ theme, isPositive }) =>\n    isPositive ? theme.colors.success : theme.colors.error};\n`;\n\nconst TableFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst PageInfo = styled.div`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\n\nconst PageButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  background-color: ${({ theme, active }) =>\n    active ? `${theme.colors.primary}11` : \"transparent\"};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.primary};\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover:not(:disabled) {\n    background-color: ${({ theme, active }) =>\n      active ? `${theme.colors.primary}22` : `${theme.colors.background}`};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 3rem;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.text.secondary};\n\n  svg {\n    width: 64px;\n    height: 64px;\n    margin-bottom: 1rem;\n    color: ${({ theme }) => `${theme.colors.text.disabled}66`};\n  }\n\n  h3 {\n    font-size: 1.25rem;\n    font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n    margin-bottom: 0.5rem;\n    color: ${({ theme }) => theme.colors.text.primary};\n  }\n\n  p {\n    font-size: 0.875rem;\n    max-width: 300px;\n    margin: 0 auto;\n  }\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => `${theme.colors.background}99`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10;\n  backdrop-filter: blur(2px);\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 3px solid ${({ theme }) => `${theme.colors.primary}22`};\n  border-top-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n// Icônes\nconst SearchIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst FilterIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M3 6H21M6 12H18M10 18H14\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChevronUpIcon = () => (\n  <svg\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M5 15L12 8L19 15\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChevronLeftIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15 19L8 12L15 5\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChevronRightIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9 5L16 12L9 19\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst EmptyIcon = () => (\n  <svg\n    width=\"64\"\n    height=\"64\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9 17H15M9 13H15M9 9H10M19 21H5C3.89543 21 3 20.1046 3 19V5C3 3.89543 3.89543 3 5 3H19C20.1046 3 21 3.89543 21 5V19C21 20.1046 20.1046 21 19 21Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n// Icône d'édition pour les cellules cliquables\nconst EditIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"14\"\n    height=\"14\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    style={{ marginLeft: \"5px\", opacity: 0.6 }}\n  >\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n  </svg>\n);\n\n// Composant principal\nconst DataTable = ({\n  title,\n  data = [],\n  columns = [],\n  loading = false,\n  pagination = true,\n  pageSize = 10,\n  onRowClick,\n  onCellClick,\n  emptyStateTitle = \"Aucune donnée disponible\",\n  emptyStateMessage = \"Il n'y a pas de données à afficher pour le moment.\",\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Réinitialiser la page lorsque les données changent\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [data]);\n\n  // Gérer le tri des données\n  const handleSort = (key) => {\n    let direction = \"asc\";\n    if (sortConfig.key === key && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  // Filtrer et trier les données\n  const filteredAndSortedData = useMemo(() => {\n    // Filtrer par recherche\n    let filteredData = [...data];\n\n    if (searchTerm) {\n      const lowerCaseSearchTerm = searchTerm.toLowerCase();\n      filteredData = filteredData.filter((item) => {\n        return columns.some((column) => {\n          const value = column.accessor(item);\n          return (\n            value &&\n            value.toString().toLowerCase().includes(lowerCaseSearchTerm)\n          );\n        });\n      });\n    }\n\n    // Trier les données\n    if (sortConfig.key) {\n      const column = columns.find((col) => col.id === sortConfig.key);\n      if (column) {\n        filteredData.sort((a, b) => {\n          const aValue = column.accessor(a);\n          const bValue = column.accessor(b);\n\n          if (aValue < bValue) {\n            return sortConfig.direction === \"asc\" ? -1 : 1;\n          }\n          if (aValue > bValue) {\n            return sortConfig.direction === \"asc\" ? 1 : -1;\n          }\n          return 0;\n        });\n      }\n    }\n\n    return filteredData;\n  }, [data, columns, searchTerm, sortConfig]);\n\n  // Paginer les données\n  const paginatedData = useMemo(() => {\n    if (!pagination) return filteredAndSortedData;\n\n    const startIndex = (currentPage - 1) * pageSize;\n    return filteredAndSortedData.slice(startIndex, startIndex + pageSize);\n  }, [filteredAndSortedData, currentPage, pageSize, pagination]);\n\n  // Calculer le nombre total de pages\n  const totalPages = useMemo(() => {\n    if (!pagination) return 1;\n    return Math.ceil(filteredAndSortedData.length / pageSize);\n  }, [filteredAndSortedData, pageSize, pagination]);\n\n  // Gérer le changement de page\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Gérer la recherche\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    setCurrentPage(1);\n  };\n\n  // Gérer les filtres\n  const toggleFilters = () => {\n    setShowFilters(!showFilters);\n  };\n\n  // Formater les valeurs de cellule\n  const formatCellValue = (column, value) => {\n    if (!value && value !== 0) return \"-\";\n\n    // Gérer les différents types de colonnes\n    if (column.type === \"status\") {\n      const status = EMPLOYEE_STATUSES.find((s) => s.value === value);\n      return (\n        <StatusBadge status={value}>\n          {status ? status.label : value}\n        </StatusBadge>\n      );\n    }\n\n    if (column.type === \"hour_balance\") {\n      return (\n        <HourBalanceBadge isPositive={value.isPositive}>\n          {value.display}\n          {column.id === \"hour_balance\" && <EditIcon />}\n        </HourBalanceBadge>\n      );\n    }\n\n    if (column.type === \"date\") {\n      return value;\n    }\n\n    // Valeur par défaut\n    return value.toString();\n  };\n\n  // Générer les boutons de pagination\n  const renderPaginationButtons = () => {\n    const buttons = [];\n\n    // Bouton précédent\n    buttons.push(\n      <PageButton\n        key=\"prev\"\n        onClick={() => handlePageChange(currentPage - 1)}\n        disabled={currentPage === 1}\n      >\n        <ChevronLeftIcon />\n      </PageButton>\n    );\n\n    // Première page\n    if (currentPage > 3) {\n      buttons.push(\n        <PageButton key=\"1\" onClick={() => handlePageChange(1)}>\n          1\n        </PageButton>\n      );\n\n      if (currentPage > 4) {\n        buttons.push(<span key=\"ellipsis1\">...</span>);\n      }\n    }\n\n    // Pages autour de la page courante\n    for (\n      let i = Math.max(1, currentPage - 1);\n      i <= Math.min(totalPages, currentPage + 1);\n      i++\n    ) {\n      buttons.push(\n        <PageButton\n          key={i}\n          active={i === currentPage}\n          onClick={() => handlePageChange(i)}\n        >\n          {i}\n        </PageButton>\n      );\n    }\n\n    // Dernière page\n    if (currentPage < totalPages - 2) {\n      if (currentPage < totalPages - 3) {\n        buttons.push(<span key=\"ellipsis2\">...</span>);\n      }\n\n      buttons.push(\n        <PageButton\n          key={totalPages}\n          onClick={() => handlePageChange(totalPages)}\n        >\n          {totalPages}\n        </PageButton>\n      );\n    }\n\n    // Bouton suivant\n    buttons.push(\n      <PageButton\n        key=\"next\"\n        onClick={() => handlePageChange(currentPage + 1)}\n        disabled={currentPage === totalPages}\n      >\n        <ChevronRightIcon />\n      </PageButton>\n    );\n\n    return buttons;\n  };\n\n  return (\n    <TableContainer>\n      <TableHeader>\n        <TableTitle>{title}</TableTitle>\n        <TableActions>\n          <SearchInput>\n            <SearchIcon />\n            <input\n              type=\"text\"\n              placeholder=\"Rechercher...\"\n              value={searchTerm}\n              onChange={handleSearch}\n            />\n          </SearchInput>\n        </TableActions>\n      </TableHeader>\n\n      <div style={{ position: \"relative\", overflowX: \"auto\" }}>\n        {loading && (\n          <LoadingOverlay>\n            <LoadingSpinner />\n          </LoadingOverlay>\n        )}\n\n        {paginatedData.length > 0 ? (\n          <Table>\n            <THead>\n              <tr>\n                {columns.map((column) => (\n                  <Th\n                    key={column.id}\n                    $sortable={column.sortable}\n                    onClick={() => column.sortable && handleSort(column.id)}\n                    style={{ width: column.width }}\n                  >\n                    {column.header}\n                    {column.sortable && (\n                      <SortIcon\n                        $active={sortConfig.key === column.id}\n                        $direction={\n                          sortConfig.key === column.id\n                            ? sortConfig.direction\n                            : \"asc\"\n                        }\n                      >\n                        <ChevronUpIcon />\n                      </SortIcon>\n                    )}\n                  </Th>\n                ))}\n              </tr>\n            </THead>\n            <TBody>\n              {paginatedData.map((row, rowIndex) => (\n                <Tr\n                  key={rowIndex}\n                  onClick={() => onRowClick && onRowClick(row)}\n                  style={{ cursor: onRowClick ? \"pointer\" : \"default\" }}\n                >\n                  {columns.map((column) => (\n                    <Td\n                      key={`${rowIndex}-${column.id}`}\n                      onClick={(e) => {\n                        if (onCellClick && column.id === \"hour_balance\") {\n                          e.stopPropagation(); // Empêcher le déclenchement du onRowClick\n                          onCellClick(row, column.id);\n                        }\n                      }}\n                      className={\n                        onCellClick && column.id === \"hour_balance\"\n                          ? \"clickable\"\n                          : \"\"\n                      }\n                      style={{\n                        cursor:\n                          onCellClick && column.id === \"hour_balance\"\n                            ? \"pointer\"\n                            : \"inherit\",\n                      }}\n                    >\n                      {formatCellValue(column, column.accessor(row))}\n                    </Td>\n                  ))}\n                </Tr>\n              ))}\n            </TBody>\n          </Table>\n        ) : (\n          <EmptyState>\n            <EmptyIcon />\n            <h3>{emptyStateTitle}</h3>\n            <p>{emptyStateMessage}</p>\n          </EmptyState>\n        )}\n      </div>\n\n      {pagination && paginatedData.length > 0 && (\n        <TableFooter>\n          <PageInfo>\n            Affichage de {(currentPage - 1) * pageSize + 1} à{\" \"}\n            {Math.min(currentPage * pageSize, filteredAndSortedData.length)} sur{\" \"}\n            {filteredAndSortedData.length} entrées\n          </PageInfo>\n          <Pagination>{renderPaginationButtons()}</Pagination>\n        </TableFooter>\n      )}\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n","import { memo } from \"react\";\n\nconst IconWrapper = memo(({ children, size = 16, ...props }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    {children}\n  </svg>\n));\n\nexport const PlusIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M12 5V19M5 12H19\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const ExportIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M12 10V16M12 16L9 13M12 16L15 13M17 21H7C5.89543 21 5 20.1046 5 19V5C5 3.89543 5.89543 3 7 3H17C18.1046 3 19 3.89543 19 5V19C19 20.1046 18.1046 21 17 21Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const FilterIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M3 6H21M6 12H18M10 18H14\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const SearchIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const CloseIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M18 6L6 18M6 6L18 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const EditIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M11 4H4C3.46957 4 2.96086 4.21071 2.58579 4.58579C2.21071 4.96086 2 5.46957 2 6V20C2 20.5304 2.21071 21.0391 2.58579 21.4142C2.96086 21.7893 3.46957 22 4 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V13M18.5 2.50001C18.8978 2.10219 19.4374 1.87869 20 1.87869C20.5626 1.87869 21.1022 2.10219 21.5 2.50001C21.8978 2.89784 22.1213 3.4374 22.1213 4.00001C22.1213 4.56262 21.8978 5.10219 21.5 5.50001L12 15L8 16L9 12L18.5 2.50001Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const DeleteIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M19 7L18.1327 19.1425C18.0579 20.1891 17.187 21 16.1378 21H7.86224C6.81296 21 5.94208 20.1891 5.86732 19.1425L5 7M10 11V17M14 11V17M15 7V4C15 3.44772 14.5523 3 14 3H10C9.44772 3 9 3.44772 9 4V7M4 7H20\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const CheckIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M20 6L9 17L4 12\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n\nexport const UserIcon = memo((props) => (\n  <IconWrapper {...props}>\n    <path\n      d=\"M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </IconWrapper>\n));\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst slideIn = keyframes`\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 1rem;\n  animation: ${fadeIn} 0.2s ease-out;\n`;\n\nconst getModalWidth = (size) => {\n  switch (size) {\n    case \"small\":\n      return \"400px\";\n    case \"large\":\n      return \"900px\";\n    case \"xlarge\":\n      return \"1200px\";\n    case \"medium\":\n    default:\n      return \"600px\";\n  }\n};\n\nconst ModalContainer = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: ${({ theme }) => theme.borderRadius.large};\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: ${({ size }) => getModalWidth(size)};\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n  animation: ${slideIn} 0.3s ease-out;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.5rem;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst ModalTitle = styled.h2`\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semibold};\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  padding: 0.5rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.text.primary};\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nconst ModalContent = styled.div`\n  padding: 1.5rem;\n`;\n\nconst CloseIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M18 6L6 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M6 6L18 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst Modal = ({\n  isOpen = true,\n  title,\n  children,\n  onClose,\n  size = \"medium\",\n}) => {\n  // Gérer la touche Echap\n  React.useEffect(() => {\n    if (isOpen === false) return;\n\n    const handleEscape = (e) => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscape);\n    return () => document.removeEventListener(\"keydown\", handleEscape);\n  }, [onClose, isOpen]);\n\n  if (isOpen === false) return null;\n\n  // Empêcher la propagation du clic depuis le contenu du modal vers l'overlay\n  const handleContentClick = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <ModalOverlay onClick={onClose}>\n      <ModalContainer onClick={handleContentClick} size={size}>\n        <ModalHeader>\n          <ModalTitle>{title}</ModalTitle>\n          <CloseButton onClick={onClose} aria-label=\"Fermer\">\n            <CloseIcon />\n          </CloseButton>\n        </ModalHeader>\n        <ModalContent>{children}</ModalContent>\n      </ModalContainer>\n    </ModalOverlay>\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\", \"xlarge\"]),\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { fadeIn, slideInUp } from \"../../styles/animations\";\n\n// Icônes pour le tri\nconst SortIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 3V13\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4 7L8 3L12 7\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst SortAscIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 3V13\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4 7L8 3L12 7\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst SortDescIcon = () => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 13V3\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M4 9L8 13L12 9\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n// Composants stylisés\nconst TableContainer = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  background-color: ${({ theme }) => theme.colors.surface};\n  animation: ${fadeIn} 0.3s ease-in-out;\n\n  &::-webkit-scrollbar {\n    height: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${({ theme }) => theme.colors.background};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => `${theme.colors.primary}66`};\n    border-radius: 3px;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => `${theme.colors.primary}99`};\n  }\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n`;\n\nconst TableHead = styled.thead`\n  background-color: ${({ theme }) => `${theme.colors.background}`};\n  position: sticky;\n  top: 0;\n  z-index: 10;\n`;\n\nconst TableHeadCell = styled.th`\n  padding: ${({ theme }) => `${theme.spacing.md} ${theme.spacing.lg}`};\n  text-align: left;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  white-space: nowrap;\n  transition: all 0.2s ease;\n\n  ${({ sortable }) =>\n    sortable &&\n    css`\n      cursor: pointer;\n      user-select: none;\n\n      &:hover {\n        color: ${({ theme }) => theme.colors.primary};\n        background-color: ${({ theme }) => `${theme.colors.primary}11`};\n      }\n    `}\n\n  ${({ sorted, direction, theme }) =>\n    sorted &&\n    css`\n      color: ${theme.colors.primary};\n      background-color: ${`${theme.colors.primary}11`};\n    `}\n`;\n\nconst SortIconContainer = styled.span`\n  display: inline-flex;\n  margin-left: ${({ theme }) => theme.spacing.xs};\n  color: ${({ active, theme }) => (active ? theme.colors.primary : \"inherit\")};\n  transition: transform 0.2s ease;\n\n  ${({ direction }) =>\n    direction === \"desc\" &&\n    css`\n      transform: rotate(180deg);\n    `}\n`;\n\nconst TableBody = styled.tbody`\n  & tr:nth-child(even) {\n    background-color: ${({ theme }) => `${theme.colors.background}66`};\n  }\n`;\n\nconst TableRow = styled.tr`\n  transition: all 0.2s ease;\n  animation: ${slideInUp} 0.3s ease-in-out;\n  animation-delay: ${({ index }) => `${index * 0.05}s`};\n\n  &:hover {\n    background-color: ${({ theme }) => `${theme.colors.primary}11`};\n  }\n\n  ${({ clickable }) =>\n    clickable &&\n    css`\n      cursor: pointer;\n    `}\n\n  ${({ selected, theme }) =>\n    selected &&\n    css`\n      background-color: ${`${theme.colors.primary}22`} !important;\n      border-left: 3px solid ${theme.colors.primary};\n    `}\n`;\n\nconst TableCell = styled.td`\n  padding: ${({ theme }) => `${theme.spacing.md} ${theme.spacing.lg}`};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  color: ${({ theme }) => theme.colors.text.primary};\n  transition: all 0.2s ease;\n\n  ${({ align }) =>\n    align &&\n    css`\n      text-align: ${align};\n    `}\n`;\n\nconst TableFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ theme }) => `${theme.spacing.md} ${theme.spacing.lg}`};\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing.sm};\n`;\n\nconst PageButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid\n    ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.border};\n  background-color: ${({ theme, active }) =>\n    active ? `${theme.colors.primary}22` : \"transparent\"};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.secondary};\n  font-weight: ${({ theme, active }) =>\n    active\n      ? theme.typography.fontWeights.semiBold\n      : theme.typography.fontWeights.regular};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: ${({ theme, active }) =>\n      active ? `${theme.colors.primary}33` : `${theme.colors.primary}11`};\n    border-color: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    border-color: ${({ theme }) => theme.colors.border};\n    background-color: transparent;\n    color: ${({ theme }) => theme.colors.text.disabled};\n\n    &:hover {\n      background-color: transparent;\n      border-color: ${({ theme }) => theme.colors.border};\n      color: ${({ theme }) => theme.colors.text.disabled};\n    }\n  }\n`;\n\nconst PageInfo = styled.div`\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n`;\n\nconst RowsPerPage = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing.sm};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n`;\n\nconst Select = styled.select`\n  padding: ${({ theme }) => `${theme.spacing.xs} ${theme.spacing.sm}`};\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-size: ${({ theme }) => theme.typography.sizes.sm};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    border-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 2px ${({ theme }) => `${theme.colors.primary}33`};\n  }\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${({ theme }) => `${theme.spacing.xl} ${theme.spacing.lg}`};\n  color: ${({ theme }) => theme.colors.text.secondary};\n  text-align: center;\n\n  svg {\n    width: 64px;\n    height: 64px;\n    margin-bottom: ${({ theme }) => theme.spacing.md};\n    color: ${({ theme }) => `${theme.colors.text.disabled}`};\n  }\n\n  h4 {\n    margin-bottom: ${({ theme }) => theme.spacing.sm};\n    color: ${({ theme }) => theme.colors.text.primary};\n  }\n\n  p {\n    max-width: 300px;\n    margin: 0 auto;\n  }\n`;\n\n// Composant Table\nconst Table = ({\n  columns,\n  data,\n  onRowClick,\n  selectedRow,\n  pagination = true,\n  initialSortBy = null,\n  initialSortDirection = \"asc\",\n  emptyStateTitle = \"Aucune donnée\",\n  emptyStateMessage = \"Il n'y a aucune donnée à afficher pour le moment.\",\n}) => {\n  const [sortBy, setSortBy] = useState(initialSortBy);\n  const [sortDirection, setSortDirection] = useState(initialSortDirection);\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  // Gérer le tri\n  const handleSort = (column) => {\n    if (!column.sortable) return;\n\n    if (sortBy === column.key) {\n      setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortBy(column.key);\n      setSortDirection(\"asc\");\n    }\n  };\n\n  // Trier les données\n  const sortedData = React.useMemo(() => {\n    if (!sortBy) return data;\n\n    return [...data].sort((a, b) => {\n      const aValue = a[sortBy];\n      const bValue = b[sortBy];\n\n      if (aValue === bValue) return 0;\n\n      const comparison = aValue < bValue ? -1 : 1;\n      return sortDirection === \"asc\" ? comparison : -comparison;\n    });\n  }, [data, sortBy, sortDirection]);\n\n  // Paginer les données\n  const paginatedData = React.useMemo(() => {\n    if (!pagination) return sortedData;\n\n    const start = (page - 1) * rowsPerPage;\n    const end = start + rowsPerPage;\n    return sortedData.slice(start, end);\n  }, [sortedData, page, rowsPerPage, pagination]);\n\n  // Calculer le nombre total de pages\n  const totalPages = Math.ceil(sortedData.length / rowsPerPage);\n\n  // Gérer le changement de page\n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n  };\n\n  // Gérer le changement du nombre de lignes par page\n  const handleRowsPerPageChange = (e) => {\n    setRowsPerPage(Number(e.target.value));\n    setPage(1);\n  };\n\n  // Rendu de l'icône de tri\n  const renderSortIcon = (column) => {\n    if (!column.sortable) return null;\n\n    if (sortBy === column.key) {\n      return (\n        <SortIconContainer active direction={sortDirection}>\n          {sortDirection === \"asc\" ? <SortAscIcon /> : <SortDescIcon />}\n        </SortIconContainer>\n      );\n    }\n\n    return (\n      <SortIconContainer>\n        <SortIcon />\n      </SortIconContainer>\n    );\n  };\n\n  // Rendu de l'état vide\n  const renderEmptyState = () => (\n    <EmptyState>\n      <svg\n        width=\"64\"\n        height=\"64\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M9 3H5C3.89543 3 3 3.89543 3 5V9M9 3H15M9 3V5C9 6.10457 9.89543 7 11 7H13C14.1046 7 15 6.10457 15 5V3M15 3H19C20.1046 3 21 3.89543 21 5V9M21 9V15M21 9H19C17.8954 9 17 9.89543 17 11V13C17 14.1046 17.8954 15 19 15H21M21 15V19C21 20.1046 20.1046 21 19 21H15M15 21H9M15 21V19C15 17.8954 14.1046 17 13 17H11C9.89543 17 9 17.8954 9 19V21M9 21H5C3.89543 21 3 20.1046 3 19V15M3 15V9M3 15H5C6.10457 15 7 14.1046 7 13V11C7 9.89543 6.10457 9 5 9H3\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n      <h4>{emptyStateTitle}</h4>\n      <p>{emptyStateMessage}</p>\n    </EmptyState>\n  );\n\n  return (\n    <TableContainer>\n      <StyledTable>\n        <TableHead>\n          <tr>\n            {columns.map((column) => (\n              <TableHeadCell\n                key={column.key}\n                sortable={column.sortable}\n                sorted={sortBy === column.key}\n                direction={sortDirection}\n                onClick={() => handleSort(column)}\n                style={{ width: column.width }}\n              >\n                {column.title}\n                {renderSortIcon(column)}\n              </TableHeadCell>\n            ))}\n          </tr>\n        </TableHead>\n\n        {data.length > 0 ? (\n          <TableBody>\n            {paginatedData.map((row, index) => (\n              <TableRow\n                key={row.id || index}\n                index={index}\n                clickable={!!onRowClick}\n                selected={selectedRow && selectedRow.id === row.id}\n                onClick={() => onRowClick && onRowClick(row)}\n              >\n                {columns.map((column) => (\n                  <TableCell\n                    key={`${row.id || index}-${column.key}`}\n                    align={column.align}\n                  >\n                    {column.render ? column.render(row) : row[column.key]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        ) : null}\n      </StyledTable>\n\n      {data.length === 0 && renderEmptyState()}\n\n      {pagination && data.length > 0 && (\n        <TableFooter>\n          <RowsPerPage>\n            <span>Lignes par page:</span>\n            <Select value={rowsPerPage} onChange={handleRowsPerPageChange}>\n              <option value={5}>5</option>\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n            </Select>\n          </RowsPerPage>\n\n          <Pagination>\n            <PageButton\n              onClick={() => handlePageChange(1)}\n              disabled={page === 1}\n            >\n              &laquo;\n            </PageButton>\n            <PageButton\n              onClick={() => handlePageChange(page - 1)}\n              disabled={page === 1}\n            >\n              &lsaquo;\n            </PageButton>\n\n            <PageInfo>\n              {page} sur {totalPages}\n            </PageInfo>\n\n            <PageButton\n              onClick={() => handlePageChange(page + 1)}\n              disabled={page === totalPages}\n            >\n              &rsaquo;\n            </PageButton>\n            <PageButton\n              onClick={() => handlePageChange(totalPages)}\n              disabled={page === totalPages}\n            >\n              &raquo;\n            </PageButton>\n          </Pagination>\n        </TableFooter>\n      )}\n    </TableContainer>\n  );\n};\n\nexport default Table;\n","import { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { FaBriefcase, FaMapMarkerAlt, FaUser } from \"react-icons/fa\";\nimport styled, { keyframes } from \"styled-components\";\nimport { formatDateForDisplay } from \"../../utils/dateUtils\";\nimport { Button } from \"../ui\";\n\n// Animations\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\n// Styled Components\nconst CardContainer = styled(motion.div)`\n  background: ${({ theme }) => theme.colors.background.card};\n  border-radius: 12px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  padding: 2rem;\n  max-width: 800px;\n  width: 100%;\n  margin: 0 auto;\n  animation: ${fadeIn} 0.5s ease-out;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 2rem;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    bottom: -1rem;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background: ${({ theme }) => theme.colors.border};\n  }\n`;\n\nconst Avatar = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${({ theme }) => theme.colors.primary.main};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 1.5rem;\n  color: white;\n  font-size: 2.5rem;\n  font-weight: bold;\n`;\n\nconst EmployeeName = styled.h2`\n  font-size: 1.8rem;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst EmployeeRole = styled.p`\n  font-size: 1.1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0.5rem 0 0;\n`;\n\nconst CardContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.5rem;\n`;\n\nconst InfoSection = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-right: 0.5rem;\n    color: ${({ theme }) => theme.colors.primary.main};\n  }\n`;\n\nconst InfoItem = styled.div`\n  margin-bottom: 0.8rem;\n  animation: ${fadeIn} 0.5s ease-out;\n  animation-delay: ${({ delay }) => delay || \"0s\"};\n  animation-fill-mode: both;\n`;\n\nconst InfoLabel = styled.span`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  display: block;\n  margin-bottom: 0.2rem;\n`;\n\nconst InfoValue = styled.span`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n  font-weight: 500;\n`;\n\nconst CardFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n  padding-top: 1.5rem;\n  border-top: 1px solid ${({ theme }) => theme.colors.border};\n`;\n\nconst StatusBadge = styled.span`\n  background: ${({ status, theme }) => {\n    switch (status) {\n      case \"active\":\n        return theme.colors.success.light;\n      case \"inactive\":\n        return theme.colors.error.light;\n      case \"vacation\":\n        return theme.colors.warning.light;\n      case \"sick\":\n        return theme.colors.info.light;\n      default:\n        return theme.colors.grey[300];\n    }\n  }};\n  color: ${({ status, theme }) => {\n    switch (status) {\n      case \"active\":\n        return theme.colors.success.dark;\n      case \"inactive\":\n        return theme.colors.error.dark;\n      case \"vacation\":\n        return theme.colors.warning.dark;\n      case \"sick\":\n        return theme.colors.info.dark;\n      default:\n        return theme.colors.grey[800];\n    }\n  }};\n  padding: 0.3rem 0.8rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  display: inline-block;\n  margin-left: 1rem;\n`;\n\nconst EmployeeCard = ({ employee, onEdit, onClose }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  // Animation variants for Framer Motion\n  const containerVariants = {\n    hidden: { opacity: 0, y: 50 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        when: \"beforeChildren\",\n        staggerChildren: 0.1,\n      },\n    },\n    exit: {\n      opacity: 0,\n      y: 50,\n      transition: { duration: 0.3 },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 },\n  };\n\n  // Vérifier si l'employé est défini\n  if (!employee) {\n    return (\n      <CardContainer>\n        <div style={{ textAlign: \"center\", padding: \"2rem\" }}>\n          <p>Aucune donnée d'employé disponible</p>\n          <Button onClick={onClose}>Fermer</Button>\n        </div>\n      </CardContainer>\n    );\n  }\n\n  // Get initials for avatar\n  const getInitials = () => {\n    const firstName = employee.first_name || \"\";\n    const lastName = employee.last_name || \"\";\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase();\n  };\n\n  // Format status for display\n  const formatStatus = (status) => {\n    if (!status) return \"Non défini\";\n\n    const statusMap = {\n      active: \"Actif\",\n      inactive: \"Inactif\",\n      vacation: \"En congé\",\n      sick: \"En arrêt maladie\",\n    };\n\n    return statusMap[status] || status;\n  };\n\n  return (\n    <CardContainer\n      initial=\"hidden\"\n      animate={isVisible ? \"visible\" : \"hidden\"}\n      exit=\"exit\"\n      variants={containerVariants}\n    >\n      <CardHeader>\n        <Avatar>{getInitials()}</Avatar>\n        <div>\n          <EmployeeName>\n            {employee.first_name} {employee.last_name}\n            <StatusBadge status={employee.status}>\n              {formatStatus(employee.status)}\n            </StatusBadge>\n          </EmployeeName>\n          <EmployeeRole>\n            {employee.role || \"Poste non défini\"}{\" \"}\n            {employee.department ? `• ${employee.department}` : \"\"}\n          </EmployeeRole>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <motion.div variants={itemVariants}>\n          <InfoSection>\n            <SectionTitle>\n              <FaUser /> Informations personnelles\n            </SectionTitle>\n            <InfoItem delay=\"0.1s\">\n              <InfoLabel>Email</InfoLabel>\n              <InfoValue>{employee.email || \"Non renseigné\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.2s\">\n              <InfoLabel>Téléphone</InfoLabel>\n              <InfoValue>{employee.phone || \"Non renseigné\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.3s\">\n              <InfoLabel>Date de naissance</InfoLabel>\n              <InfoValue>\n                {employee.birthdate\n                  ? formatDateForDisplay(employee.birthdate)\n                  : \"Non renseignée\"}\n              </InfoValue>\n            </InfoItem>\n          </InfoSection>\n        </motion.div>\n\n        <motion.div variants={itemVariants}>\n          <InfoSection>\n            <SectionTitle>\n              <FaMapMarkerAlt /> Adresse\n            </SectionTitle>\n            <InfoItem delay=\"0.4s\">\n              <InfoLabel>Adresse</InfoLabel>\n              <InfoValue>{employee.address || \"Non renseignée\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.5s\">\n              <InfoLabel>Ville</InfoLabel>\n              <InfoValue>{employee.city || \"Non renseignée\"}</InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.6s\">\n              <InfoLabel>Code postal</InfoLabel>\n              <InfoValue>{employee.zip_code || \"Non renseigné\"}</InfoValue>\n            </InfoItem>\n          </InfoSection>\n        </motion.div>\n\n        <motion.div variants={itemVariants}>\n          <InfoSection>\n            <SectionTitle>\n              <FaBriefcase /> Informations professionnelles\n            </SectionTitle>\n            <InfoItem delay=\"0.7s\">\n              <InfoLabel>Date d'embauche</InfoLabel>\n              <InfoValue>\n                {employee.hire_date\n                  ? formatDateForDisplay(employee.hire_date)\n                  : \"Non renseignée\"}\n              </InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.8s\">\n              <InfoLabel>Heures contractuelles</InfoLabel>\n              <InfoValue>\n                {employee.contractHours || \"0\"} heures/semaine\n              </InfoValue>\n            </InfoItem>\n            <InfoItem delay=\"0.9s\">\n              <InfoLabel>Solde d'heures</InfoLabel>\n              <InfoValue>{employee.hour_balance || \"0\"} heures</InfoValue>\n            </InfoItem>\n          </InfoSection>\n        </motion.div>\n      </CardContent>\n\n      <CardFooter>\n        <Button variant=\"secondary\" onClick={onClose}>\n          Retour\n        </Button>\n        <Button variant=\"primary\" onClick={onEdit}>\n          Modifier\n        </Button>\n      </CardFooter>\n    </CardContainer>\n  );\n};\n\nexport default EmployeeCard;\n","import { memo, useCallback, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport styled from \"styled-components\";\nimport { EMPLOYEE_STATUSES } from \"../../config/constants\";\nimport { Button } from \"../ui\";\nimport { FormInput, FormSelect } from \"../ui/Form\";\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n`;\n\nconst ConfirmationModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ConfirmationContent = styled.div`\n  background-color: white;\n  padding: 2rem;\n  border-radius: 8px;\n  max-width: 500px;\n  width: 90%;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst ConfirmationTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst ConfirmationText = styled.p`\n  margin-bottom: 2rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst ConfirmationActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n`;\n\nconst EmployeeForm = ({ employee, onSubmit, onDelete }) => {\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [showSaveConfirmation, setShowSaveConfirmation] = useState(false);\n\n  // Fonction pour formater les dates ISO en format YYYY-MM-DD\n  const formatDateForInput = (dateString) => {\n    if (!dateString) return \"\";\n    try {\n      // Si la date est déjà au format YYYY-MM-DD, la retourner telle quelle\n      if (/^\\d{4}-\\d{2}-\\d{2}$/.test(dateString)) {\n        return dateString;\n      }\n      // Sinon, convertir la date ISO en format YYYY-MM-DD\n      const date = new Date(dateString);\n      return date.toISOString().split(\"T\")[0];\n    } catch (error) {\n      console.error(\"Erreur lors du formatage de la date:\", error);\n      return \"\";\n    }\n  };\n\n  const initialFormData = {\n    first_name: employee?.first_name || \"\",\n    last_name: employee?.last_name || \"\",\n    email: employee?.email || \"\",\n    phone: employee?.phone || \"\",\n    address: employee?.address || \"\",\n    city: employee?.city || \"\",\n    zipCode: employee?.zip_code || \"\",\n    department: employee?.department || \"\",\n    role: employee?.role || \"\",\n    status: employee?.status || \"active\",\n    birthdate: formatDateForInput(employee?.birthdate) || \"\",\n    hire_date:\n      formatDateForInput(employee?.hire_date) ||\n      formatDateForInput(new Date().toISOString()),\n    contractHours: employee?.contractHours ?? 35,\n  };\n\n  const [formData, setFormData] = useState(initialFormData);\n\n  useEffect(() => {\n    // Mettre à jour le formulaire quand l'employé change\n    if (employee) {\n      setFormData({\n        first_name: employee.first_name || \"\",\n        last_name: employee.last_name || \"\",\n        email: employee.email || \"\",\n        phone: employee.phone || \"\",\n        address: employee.address || \"\",\n        city: employee.city || \"\",\n        zipCode: employee.zip_code || \"\",\n        department: employee.department || \"\",\n        role: employee.role || \"\",\n        status: employee.status || \"active\",\n        birthdate: formatDateForInput(employee.birthdate) || \"\",\n        hire_date:\n          formatDateForInput(employee.hire_date) ||\n          formatDateForInput(new Date().toISOString()),\n        contractHours: employee.contractHours ?? 35,\n      });\n    }\n  }, [employee]);\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      // Vérifier si le token est présent\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n        return;\n      }\n\n      // Si c'est une modification, demander confirmation\n      if (employee) {\n        setShowSaveConfirmation(true);\n      } else {\n        // Si c'est une création, soumettre directement\n        console.log(\"Données du formulaire à soumettre:\", formData);\n        onSubmit(formData);\n      }\n    },\n    [formData, onSubmit, employee]\n  );\n\n  const confirmSave = useCallback(() => {\n    // Vérifier si le token est présent\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n      setShowSaveConfirmation(false);\n      return;\n    }\n\n    console.log(\"Données du formulaire à soumettre:\", formData);\n    onSubmit(formData);\n    setShowSaveConfirmation(false);\n  }, [formData, onSubmit]);\n\n  const cancelSave = useCallback(() => {\n    setShowSaveConfirmation(false);\n  }, []);\n\n  const handleDeleteClick = useCallback(() => {\n    // Vérifier si le token est présent\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n      return;\n    }\n\n    setShowDeleteConfirmation(true);\n  }, []);\n\n  const confirmDelete = useCallback(() => {\n    // Vérifier si le token est présent\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      toast.error(\"Veuillez vous connecter pour accéder à cette page.\");\n      setShowDeleteConfirmation(false);\n      return;\n    }\n\n    if (onDelete) onDelete();\n    setShowDeleteConfirmation(false);\n  }, [onDelete]);\n\n  const cancelDelete = useCallback(() => {\n    setShowDeleteConfirmation(false);\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormGrid>\n          <FormInput\n            label=\"Prénom\"\n            name=\"first_name\"\n            value={formData.first_name}\n            onChange={handleChange}\n            required\n          />\n          <FormInput\n            label=\"Nom\"\n            name=\"last_name\"\n            value={formData.last_name}\n            onChange={handleChange}\n            required\n          />\n          <FormInput\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Téléphone\"\n            name=\"phone\"\n            type=\"tel\"\n            value={formData.phone}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Adresse\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Ville\"\n            name=\"city\"\n            value={formData.city}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Code postal\"\n            name=\"zipCode\"\n            value={formData.zipCode}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Date de naissance\"\n            name=\"birthdate\"\n            type=\"date\"\n            value={formData.birthdate}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Département\"\n            name=\"department\"\n            value={formData.department}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Rôle\"\n            name=\"role\"\n            value={formData.role}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n          <FormInput\n            label=\"Heures contractuelles\"\n            name=\"contractHours\"\n            type=\"number\"\n            min=\"0\"\n            step=\"0.5\"\n            value={formData.contractHours}\n            onChange={handleChange}\n            helpText=\"Nombre d'heures hebdomadaires\"\n          />\n          <FormSelect\n            label=\"Statut\"\n            name=\"status\"\n            value={formData.status}\n            onChange={handleChange}\n            required\n          >\n            {EMPLOYEE_STATUSES.map((status) => (\n              <option key={status.value} value={status.value}>\n                {status.label}\n              </option>\n            ))}\n          </FormSelect>\n          <FormInput\n            label=\"Date d'embauche\"\n            name=\"hire_date\"\n            type=\"date\"\n            value={formData.hire_date}\n            onChange={handleChange}\n            helpText=\"Facultatif\"\n          />\n        </FormGrid>\n\n        <FormActions>\n          {onDelete && (\n            <Button type=\"button\" onClick={handleDeleteClick} variant=\"error\">\n              Supprimer\n            </Button>\n          )}\n          <Button type=\"submit\" variant=\"primary\">\n            {employee ? \"Enregistrer\" : \"Ajouter\"}\n          </Button>\n        </FormActions>\n      </form>\n\n      {/* Modal de confirmation de suppression */}\n      {showDeleteConfirmation && (\n        <ConfirmationModal>\n          <ConfirmationContent>\n            <ConfirmationTitle>Confirmer la suppression</ConfirmationTitle>\n            <ConfirmationText>\n              Êtes-vous sûr de vouloir supprimer cet employé ? Cette action est\n              irréversible.\n            </ConfirmationText>\n            <ConfirmationActions>\n              <Button type=\"button\" onClick={cancelDelete} variant=\"secondary\">\n                Annuler\n              </Button>\n              <Button type=\"button\" onClick={confirmDelete} variant=\"error\">\n                Supprimer\n              </Button>\n            </ConfirmationActions>\n          </ConfirmationContent>\n        </ConfirmationModal>\n      )}\n\n      {/* Modal de confirmation d'enregistrement */}\n      {showSaveConfirmation && (\n        <ConfirmationModal>\n          <ConfirmationContent>\n            <ConfirmationTitle>Confirmer les modifications</ConfirmationTitle>\n            <ConfirmationText>\n              Êtes-vous sûr de vouloir enregistrer les modifications pour cet\n              employé ?\n            </ConfirmationText>\n            <ConfirmationActions>\n              <Button type=\"button\" onClick={cancelSave} variant=\"secondary\">\n                Annuler\n              </Button>\n              <Button type=\"button\" onClick={confirmSave} variant=\"primary\">\n                Enregistrer\n              </Button>\n            </ConfirmationActions>\n          </ConfirmationContent>\n        </ConfirmationModal>\n      )}\n    </>\n  );\n};\n\nexport default memo(EmployeeForm);\n","import { useCallback, useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport styled from \"styled-components\";\nimport { API_ENDPOINTS, API_URL } from \"../../config/api\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport useApi from \"../../hooks/useApi\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.colors.background.secondary};\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst Title = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.text.primary};\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Label = styled.label`\n  font-size: 0.9rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  border-radius: 4px;\n  font-size: 1rem;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n    border-color: ${({ theme }) => theme.colors.primary};\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.primary}33;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  flex: 1;\n\n  &:hover {\n    opacity: 0.9;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst AddButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.success};\n  color: white;\n`;\n\nconst SubtractButton = styled(Button)`\n  background-color: ${({ theme }) => theme.colors.error};\n  color: white;\n`;\n\nconst CurrentBalance = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst BalanceValue = styled.span`\n  font-weight: 600;\n  color: ${({ isPositive, theme }) =>\n    isPositive ? theme.colors.success : theme.colors.error};\n`;\n\nconst StepperContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n`;\n\nconst StepButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.background.hover};\n  color: ${({ theme }) => theme.colors.text.primary};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.background.active};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst HoursDisplay = styled.div`\n  font-size: 1rem;\n  font-weight: 600;\n  min-width: 60px;\n  text-align: center;\n`;\n\nconst HourBalanceManager = ({ employeeId, onBalanceUpdated }) => {\n  const [hours, setHours] = useState(\"1\");\n  const [currentBalance, setCurrentBalance] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [employeeData, setEmployeeData] = useState(null);\n  const api = useApi();\n  const { token, user } = useAuth();\n\n  // Charger les données de l'employé\n  const fetchEmployeeData = useCallback(async () => {\n    try {\n      const response = await api.get(API_ENDPOINTS.EMPLOYEES.BY_ID(employeeId));\n      if (response) {\n        setEmployeeData(response);\n      }\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la récupération des données de l'employé:\",\n        error\n      );\n    }\n  }, [employeeId, api]);\n\n  // Charger le solde actuel\n  const fetchCurrentBalance = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await api.get(\n        API_ENDPOINTS.HOUR_BALANCE.BY_EMPLOYEE(employeeId)\n      );\n\n      // Vérifier si la réponse contient hour_balance\n      if (\n        response &&\n        (response.hour_balance !== undefined || response.balance !== undefined)\n      ) {\n        const balance =\n          response.hour_balance !== undefined\n            ? response.hour_balance\n            : response.balance;\n        setCurrentBalance(parseFloat(balance));\n      } else {\n        console.error(\"Format de réponse inattendu:\", response);\n        toast.error(\"Format de réponse inattendu\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération du solde d'heures:\", error);\n      toast.error(\"Impossible de récupérer le solde d'heures\");\n    } finally {\n      setLoading(false);\n    }\n  }, [employeeId, api]);\n\n  // Charger le solde et les données de l'employé au montage du composant\n  useEffect(() => {\n    if (employeeId) {\n      fetchCurrentBalance();\n      fetchEmployeeData();\n    }\n  }, [employeeId, fetchCurrentBalance, fetchEmployeeData]);\n\n  // Ajuster la valeur des heures\n  const adjustHours = (increment) => {\n    const currentValue = parseFloat(hours) || 0;\n    const newValue = Math.max(0.25, currentValue + increment);\n    setHours(newValue.toFixed(2));\n  };\n\n  // Ajouter une activité récente\n  const logActivity = useCallback(\n    async (operation, hoursValue) => {\n      try {\n        console.log(\"Tentative d'enregistrement d'une activité...\");\n        console.log(\"URL de l'API utilisée:\", API_URL);\n        console.log(\"Token d'authentification disponible:\", !!token);\n        console.log(\"Utilisateur connecté:\", user);\n\n        if (!employeeData) {\n          console.warn(\"Données de l'employé non disponibles, récupération...\");\n          await fetchEmployeeData();\n        }\n\n        const employeeName = employeeData\n          ? `${employeeData.first_name} ${employeeData.last_name}`\n          : `Employé #${employeeId}`;\n\n        const userName = user\n          ? `${user.first_name || \"\"} ${user.last_name || \"\"}`.trim()\n          : \"Un utilisateur\";\n\n        console.log(\"Nom de l'employé pour l'activité:\", employeeName);\n        console.log(\"Nom de l'utilisateur pour l'activité:\", userName);\n\n        // Créer une description claire pour l'activité\n        const description = `${userName} a ${\n          operation === \"add\" ? \"ajouté\" : \"soustrait\"\n        } ${hoursValue}h au solde d'heures de ${employeeName}`;\n\n        // Préparer les données de l'activité selon le format attendu par le serveur\n        const activityData = {\n          type: \"update\",\n          entity_type: \"employee\",\n          entity_id: employeeId,\n          description: description,\n          details: {\n            userName,\n            employeeName,\n            action:\n              operation === \"add\" ? \"Ajout d'heures\" : \"Soustraction d'heures\",\n            hours: hoursValue,\n            oldBalance: currentBalance,\n            newBalance:\n              operation === \"add\"\n                ? currentBalance + parseFloat(hoursValue)\n                : currentBalance - parseFloat(hoursValue),\n          },\n        };\n\n        console.log(\"Données de l'activité à enregistrer:\", activityData);\n\n        // Utiliser directement l'API pour créer l'activité\n        const response = await api.post(\n          API_ENDPOINTS.ACTIVITIES.BASE,\n          activityData\n        );\n\n        console.log(\"Réponse de l'enregistrement d'activité:\", response);\n\n        if (response && response.success) {\n          console.log(\"Activité enregistrée avec succès\");\n          return true;\n        } else {\n          console.warn(\n            \"Réponse inattendue lors de l'enregistrement de l'activité:\",\n            response\n          );\n          return false;\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'enregistrement de l'activité:\", error);\n        return false;\n      }\n    },\n    [\n      api,\n      employeeId,\n      employeeData,\n      currentBalance,\n      fetchEmployeeData,\n      token,\n      user,\n    ]\n  );\n\n  // Mettre à jour le solde d'heures\n  const updateBalance = async (operation) => {\n    if (!hours || isNaN(parseFloat(hours)) || parseFloat(hours) <= 0) {\n      toast.error(\"Veuillez entrer un nombre d'heures valide\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      // Créer un nouvel enregistrement dans work_hours\n      const response = await api.post(API_ENDPOINTS.WORK_HOURS.BASE, {\n        employeeId: employeeId,\n        date: new Date().toISOString().split(\"T\")[0],\n        expectedHours: operation === \"add\" ? 0 : parseFloat(hours),\n        actualHours: operation === \"add\" ? parseFloat(hours) : 0,\n        balance: operation === \"add\" ? parseFloat(hours) : -parseFloat(hours),\n        description:\n          operation === \"add\"\n            ? \"Ajout manuel d'heures\"\n            : \"Soustraction manuelle d'heures\",\n      });\n\n      if (response && response.success) {\n        // Récupérer le solde mis à jour\n        await fetchCurrentBalance();\n\n        // Enregistrer l'activité\n        try {\n          await logActivity(operation, hours);\n          console.log(\n            \"Activité enregistrée avec succès après mise à jour du solde\"\n          );\n        } catch (activityError) {\n          console.error(\n            \"Erreur lors de l'enregistrement de l'activité:\",\n            activityError\n          );\n          // Ne pas bloquer le flux principal en cas d'erreur d'enregistrement d'activité\n        }\n\n        // Notifier le parent que le solde a été mis à jour\n        if (onBalanceUpdated) {\n          onBalanceUpdated();\n        }\n\n        toast.success(\n          operation === \"add\"\n            ? `${hours}h ajoutées au solde`\n            : `${hours}h soustraites du solde`\n        );\n\n        // Réinitialiser le formulaire\n        setHours(\"1\");\n      } else {\n        throw new Error(\n          response?.message || \"Erreur lors de la mise à jour du solde\"\n        );\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la mise à jour du solde d'heures:\", error);\n      toast.error(\n        error.message || \"Erreur lors de la mise à jour du solde d'heures\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>Gestion du solde d'heures</Title>\n\n      {currentBalance !== null && (\n        <CurrentBalance>\n          Solde actuel:\n          <BalanceValue isPositive={currentBalance >= 0}>\n            {currentBalance >= 0 ? \"+\" : \"\"}\n            {currentBalance.toFixed(2)}h\n          </BalanceValue>\n        </CurrentBalance>\n      )}\n\n      <Form onSubmit={(e) => e.preventDefault()}>\n        <InputGroup>\n          <Label htmlFor=\"hours\">Nombre d'heures</Label>\n          <Input\n            id=\"hours\"\n            type=\"number\"\n            min=\"0.25\"\n            step=\"0.25\"\n            value={hours}\n            onChange={(e) => setHours(e.target.value)}\n            placeholder=\"Entrez le nombre d'heures\"\n            disabled={loading}\n          />\n\n          <StepperContainer>\n            <StepButton\n              type=\"button\"\n              onClick={() => adjustHours(-0.25)}\n              disabled={loading || parseFloat(hours) <= 0.25}\n            >\n              -\n            </StepButton>\n            <HoursDisplay>{hours}h</HoursDisplay>\n            <StepButton\n              type=\"button\"\n              onClick={() => adjustHours(0.25)}\n              disabled={loading}\n            >\n              +\n            </StepButton>\n          </StepperContainer>\n        </InputGroup>\n\n        <ButtonGroup>\n          <AddButton\n            type=\"button\"\n            onClick={() => updateBalance(\"add\")}\n            disabled={loading || !hours}\n          >\n            Ajouter\n          </AddButton>\n          <SubtractButton\n            type=\"button\"\n            onClick={() => updateBalance(\"subtract\")}\n            disabled={loading || !hours}\n          >\n            Soustraire\n          </SubtractButton>\n        </ButtonGroup>\n      </Form>\n    </Container>\n  );\n};\n\nexport default HourBalanceManager;\n","import Lottie from \"lottie-react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport employeesAnimation from \"../assets/animations/employees.json\";\nimport EmployeeCard from \"../components/employees/EmployeeCard\";\nimport EmployeeForm from \"../components/employees/EmployeeForm\";\nimport HourBalanceManager from \"../components/employees/HourBalanceManager\";\nimport { Button, DataTable, Modal, PlusIcon } from \"../components/ui\";\nimport { FormSelect } from \"../components/ui/Form\";\nimport { useNotification } from \"../components/ui/Notification\";\nimport { EMPLOYEE_STATUSES, EMPLOYEE_TABLE_COLUMNS } from \"../config/constants\";\nimport useEmployees from \"../hooks/useEmployees\";\n\n// Composants stylisés\nconst PageContainer = styled.div`\n  padding: 2rem;\n`;\n\nconst PageHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n`;\n\nconst AnimationContainer = styled.div`\n  width: 80px;\n  height: 80px;\n  flex-shrink: 0;\n`;\n\nconst HeaderRight = styled.div`\n  display: flex;\n  gap: 1rem;\n\n  @media (min-width: 768px) {\n    justify-content: flex-end;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.bold};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst PageDescription = styled.p`\n  font-size: 0.875rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  margin: 0.5rem 0 0 0;\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  margin-bottom: 2rem;\n`;\n\nconst Tab = styled.button`\n  padding: 1rem 1.5rem;\n  font-size: 0.875rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  color: ${({ theme, active }) =>\n    active ? theme.colors.primary : theme.colors.text.secondary};\n  background: none;\n  border: none;\n  border-bottom: 2px solid\n    ${({ theme, active }) => (active ? theme.colors.primary : \"transparent\")};\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${({ theme, active }) =>\n      active ? theme.colors.primary : theme.colors.text.primary};\n  }\n`;\n\nconst TabBadge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  border-radius: 10px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.colors.primary : `${theme.colors.text.disabled}33`};\n  color: ${({ theme, active }) =>\n    active ? \"white\" : theme.colors.text.secondary};\n  font-size: 0.75rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.medium};\n  margin-left: 0.5rem;\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst EmptyStateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem 2rem;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  text-align: center;\n  margin-top: 2rem;\n`;\n\nconst EmptyStateIcon = styled.div`\n  font-size: 4rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst EmptyStateTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: ${({ theme }) => theme.typography.fontWeights.semiBold};\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin-bottom: 1rem;\n`;\n\nconst EmptyStateDescription = styled.p`\n  font-size: 1rem;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  max-width: 500px;\n  margin-bottom: 2rem;\n`;\n\n// Composant principal\nconst Employees = () => {\n  const { showNotification } = useNotification();\n  const [, setIsLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"all\");\n  const [showModal, setShowModal] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [viewingEmployee, setViewingEmployee] = useState(null);\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [filters, setFilters] = useState({\n    department: \"\",\n    role: \"\",\n    status: \"\",\n  });\n  const [activeModalTab, setActiveModalTab] = useState(\"infos\");\n\n  const {\n    employees,\n    loading,\n    error,\n    createEmployee,\n    updateEmployee,\n    deleteEmployee,\n    fetchEmployees,\n    getEmployeesByStatus,\n  } = useEmployees();\n\n  const navigate = useNavigate();\n  const { employeeId } = useParams();\n\n  // Vérifier si un ID d'employé est présent dans l'URL et afficher les détails\n  useEffect(() => {\n    if (employeeId && employees.length > 0) {\n      const employee = employees.find((emp) => emp.id === parseInt(employeeId));\n      if (employee) {\n        setViewingEmployee(employee);\n        setEditingEmployee(employee);\n        setShowModal(true);\n      } else {\n        // Si l'employé n'existe pas, rediriger vers la liste des employés\n        navigate(\"/employees\");\n        showNotification({\n          type: \"error\",\n          message: `L'employé avec l'ID ${employeeId} n'existe pas.`,\n        });\n      }\n    }\n  }, [employeeId, employees, navigate, showNotification]);\n\n  // Filtrer les employés avec useMemo pour éviter les recalculs inutiles\n  const filteredEmployees = useMemo(() => {\n    let employeesToFilter = employees;\n\n    // Filtrer par statut si nécessaire\n    if (activeTab !== \"all\") {\n      employeesToFilter = getEmployeesByStatus(activeTab);\n    }\n\n    // Appliquer les autres filtres\n    return employeesToFilter.filter((employee) => {\n      if (filters.department && employee.department !== filters.department)\n        return false;\n      if (filters.role && employee.role !== filters.role) return false;\n      if (filters.status && employee.status !== filters.status) return false;\n      return true;\n    });\n  }, [employees, activeTab, filters, getEmployeesByStatus]);\n\n  // Récupérer les départements et rôles uniques des employés\n  const uniqueDepartments = useMemo(() => {\n    const departments = employees\n      .map((emp) => emp.department)\n      .filter((dept, index, self) => dept && self.indexOf(dept) === index);\n    return departments;\n  }, [employees]);\n\n  const uniqueRoles = useMemo(() => {\n    const roles = employees\n      .map((emp) => emp.role)\n      .filter((role, index, self) => role && self.indexOf(role) === index);\n    return roles;\n  }, [employees]);\n\n  const handleUpdateEmployee = useCallback(\n    async (employeeData) => {\n      try {\n        if (!editingEmployee?.id) {\n          throw new Error(\"Aucun employé sélectionné pour la mise à jour\");\n        }\n\n        setIsLoading(true);\n        console.log(\"ID de l'employé à mettre à jour:\", editingEmployee.id);\n        console.log(\"Données à envoyer:\", employeeData);\n\n        // Pas besoin de convertir les valeurs numériques ici, c'est fait dans le hook\n        const result = await updateEmployee(editingEmployee.id, employeeData);\n\n        console.log(\"Résultat de la mise à jour:\", result);\n\n        if (!result || !result.success) {\n          throw new Error(result?.error || \"La mise à jour a échoué\");\n        }\n\n        // Rafraîchir la liste des employés\n        await fetchEmployees();\n\n        showNotification({\n          type: \"success\",\n          message: `Mise à jour des informations de l'employé ${employeeData.first_name} ${employeeData.last_name}`,\n        });\n\n        // Fermer le modal et réinitialiser l'état\n        setShowModal(false);\n        // Réinitialiser editingEmployee après la fermeture du modal\n        setTimeout(() => setEditingEmployee(null), 0);\n      } catch (error) {\n        console.error(\"Erreur détaillée:\", error);\n        showNotification({\n          type: \"error\",\n          message:\n            error.message || \"Erreur lors de la mise à jour de l'employé\",\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [editingEmployee, updateEmployee, fetchEmployees, showNotification]\n  );\n\n  const handleCreateEmployee = useCallback(\n    async (employeeData) => {\n      try {\n        setIsLoading(true);\n\n        console.log(\"Données pour création d'employé:\", employeeData);\n\n        // Pas besoin de convertir les valeurs numériques ici, c'est fait dans le hook\n        const result = await createEmployee(employeeData);\n\n        console.log(\"Résultat de la création:\", result);\n\n        if (!result || !result.success) {\n          throw new Error(result?.error || \"La création a échoué\");\n        }\n\n        // Rafraîchir la liste des employés\n        await fetchEmployees();\n\n        showNotification({\n          type: \"success\",\n          message: `Création d'un nouvel employé: ${employeeData.first_name} ${employeeData.last_name}`,\n        });\n\n        // Fermer le modal et rediriger vers la page des employés\n        setShowModal(false);\n\n        // Rediriger vers la page des employés\n        navigate(\"/employees\");\n      } catch (error) {\n        console.error(\"Erreur détaillée:\", error);\n        showNotification({\n          type: \"error\",\n          message: error.message || \"Erreur lors de la création de l'employé\",\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [createEmployee, fetchEmployees, showNotification, navigate]\n  );\n\n  const handleDeleteEmployee = useCallback(async () => {\n    try {\n      if (!editingEmployee?.id) {\n        throw new Error(\"Aucun employé sélectionné pour la suppression\");\n      }\n\n      setIsLoading(true);\n\n      console.log(\"Tentative de suppression de l'employé:\", editingEmployee.id);\n\n      const result = await deleteEmployee(editingEmployee.id);\n\n      console.log(\"Résultat de la suppression:\", result);\n\n      if (!result || !result.success) {\n        throw new Error(result?.error || \"La suppression a échoué\");\n      }\n\n      // Rafraîchir la liste des employés\n      await fetchEmployees();\n\n      showNotification({\n        type: \"success\",\n        message: `Suppression de l'employé ${editingEmployee.first_name} ${editingEmployee.last_name}`,\n      });\n\n      setEditingEmployee(null);\n      setShowModal(false);\n    } catch (error) {\n      console.error(\"Erreur détaillée:\", error);\n      showNotification({\n        type: \"error\",\n        message: error.message || \"Erreur lors de la suppression de l'employé\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [editingEmployee, deleteEmployee, fetchEmployees, showNotification]);\n\n  const handleAddEmployee = useCallback(() => {\n    setEditingEmployee(null);\n    setShowModal(true);\n  }, []);\n\n  const handleCloseModal = useCallback(() => {\n    setShowModal(false);\n    setViewingEmployee(null);\n    setEditingEmployee(null);\n    setShowEditForm(false);\n\n    // Si on est sur une page de détail d'employé, revenir à la liste\n    if (employeeId) {\n      navigate(\"/employees\");\n    }\n  }, [employeeId, navigate]);\n\n  const handleSubmit = useCallback(\n    async (formData) => {\n      try {\n        if (editingEmployee) {\n          await handleUpdateEmployee(formData);\n        } else {\n          await handleCreateEmployee(formData);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la soumission:\", error);\n      }\n    },\n    [editingEmployee, handleUpdateEmployee, handleCreateEmployee]\n  );\n\n  const handleTabChange = useCallback((tab) => {\n    setActiveTab(tab);\n  }, []);\n\n  const handleFilterChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFilters((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }, []);\n\n  const countByStatus = getEmployeesByStatus();\n\n  const handleEditEmployee = useCallback((employee) => {\n    console.log(\"Sélection de l'employé pour édition:\", employee);\n    setEditingEmployee(employee);\n    setViewingEmployee(employee);\n    setShowEditForm(false);\n    setShowModal(true);\n  }, []);\n\n  const handleStartEditing = useCallback(() => {\n    setShowEditForm(true);\n  }, []);\n\n  // Nouvelle fonction pour gérer le clic sur une cellule spécifique du tableau\n  const handleCellClick = useCallback((employee, columnId) => {\n    // Cette fonction ne sera appelée que pour la colonne hour_balance grâce à la modification dans DataTable\n    if (columnId === \"hour_balance\") {\n      console.log(\"Clic sur le solde d'heures de l'employé:\", employee.id);\n      setEditingEmployee(employee);\n      setViewingEmployee(employee);\n      setActiveModalTab(\"balance\");\n      setShowModal(true);\n    }\n  }, []);\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <HeaderLeft>\n          <AnimationContainer>\n            <Lottie\n              animationData={employeesAnimation}\n              loop={true}\n              autoplay={true}\n              style={{ width: 80, height: 80 }}\n              rendererSettings={{\n                preserveAspectRatio: \"xMidYMid slice\",\n              }}\n            />\n          </AnimationContainer>\n          <div>\n            <PageTitle>Gestion des employés</PageTitle>\n            <PageDescription>\n              Gérez les informations de vos employés\n            </PageDescription>\n          </div>\n        </HeaderLeft>\n        <HeaderRight>\n          <Button variant=\"primary\" onClick={handleAddEmployee}>\n            <PlusIcon /> Ajouter un employé\n          </Button>\n        </HeaderRight>\n      </PageHeader>\n\n      {error ? (\n        <EmptyStateContainer>\n          <EmptyStateIcon>⚠️</EmptyStateIcon>\n          <EmptyStateTitle>Erreur d'authentification</EmptyStateTitle>\n          <EmptyStateDescription>\n            {error}. Veuillez vous connecter pour accéder à cette page.\n          </EmptyStateDescription>\n          <Button primary as=\"a\" href=\"/login\">\n            Se connecter\n          </Button>\n        </EmptyStateContainer>\n      ) : employees.length === 0 && !loading ? (\n        <EmptyStateContainer>\n          <EmptyStateIcon>👥</EmptyStateIcon>\n          <EmptyStateTitle>Aucun employé</EmptyStateTitle>\n          <EmptyStateDescription>\n            Vous n'avez pas encore ajouté d'employés à votre entreprise.\n            Commencez par ajouter votre premier employé.\n          </EmptyStateDescription>\n          <Button primary onClick={handleAddEmployee}>\n            <PlusIcon />\n            Ajouter un employé\n          </Button>\n        </EmptyStateContainer>\n      ) : (\n        <>\n          <TabsContainer>\n            <Tab\n              active={activeTab === \"all\"}\n              onClick={() => handleTabChange(\"all\")}\n            >\n              Tous\n              <TabBadge active={activeTab === \"all\"}>\n                {countByStatus.all}\n              </TabBadge>\n            </Tab>\n            <Tab\n              active={activeTab === \"active\"}\n              onClick={() => handleTabChange(\"active\")}\n            >\n              Actifs\n              <TabBadge active={activeTab === \"active\"}>\n                {countByStatus.active}\n              </TabBadge>\n            </Tab>\n            <Tab\n              active={activeTab === \"pending\"}\n              onClick={() => handleTabChange(\"pending\")}\n            >\n              En attente\n              <TabBadge active={activeTab === \"pending\"}>\n                {countByStatus.pending}\n              </TabBadge>\n            </Tab>\n            <Tab\n              active={activeTab === \"inactive\"}\n              onClick={() => handleTabChange(\"inactive\")}\n            >\n              Inactifs\n              <TabBadge active={activeTab === \"inactive\"}>\n                {countByStatus.inactive}\n              </TabBadge>\n            </Tab>\n          </TabsContainer>\n\n          <FormGrid>\n            <FormSelect\n              label=\"Département\"\n              name=\"department\"\n              value={filters.department}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Tous les départements</option>\n              {uniqueDepartments.map((dept) => (\n                <option key={dept} value={dept}>\n                  {dept}\n                </option>\n              ))}\n            </FormSelect>\n            <FormSelect\n              label=\"Rôle\"\n              name=\"role\"\n              value={filters.role}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Tous les rôles</option>\n              {uniqueRoles.map((role) => (\n                <option key={role} value={role}>\n                  {role}\n                </option>\n              ))}\n            </FormSelect>\n            <FormSelect\n              label=\"Statut\"\n              name=\"status\"\n              value={filters.status}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Tous les statuts</option>\n              {EMPLOYEE_STATUSES.map((status) => (\n                <option key={status.value} value={status.value}>\n                  {status.label}\n                </option>\n              ))}\n            </FormSelect>\n          </FormGrid>\n\n          <DataTable\n            title={`Liste des employés (${filteredEmployees.length})`}\n            data={filteredEmployees}\n            columns={EMPLOYEE_TABLE_COLUMNS}\n            loading={loading}\n            pagination={true}\n            pageSize={10}\n            onRowClick={handleEditEmployee}\n            onCellClick={handleCellClick}\n            emptyStateTitle=\"Aucun employé trouvé\"\n            emptyStateMessage=\"Aucun employé ne correspond à vos critères de recherche.\"\n          />\n        </>\n      )}\n\n      <Modal\n        isOpen={showModal}\n        onClose={handleCloseModal}\n        title={\n          !editingEmployee\n            ? \"Ajouter un employé\"\n            : showEditForm\n            ? `Modifier ${editingEmployee.first_name} ${editingEmployee.last_name}`\n            : activeModalTab === \"balance\"\n            ? `Gestion du solde d'heures - ${editingEmployee.first_name} ${editingEmployee.last_name}`\n            : `Détails de ${editingEmployee.first_name} ${editingEmployee.last_name}`\n        }\n        size=\"large\"\n      >\n        {editingEmployee && !showEditForm && activeModalTab !== \"balance\" ? (\n          <EmployeeCard\n            employee={viewingEmployee}\n            onEdit={handleStartEditing}\n            onClose={handleCloseModal}\n          />\n        ) : (\n          <>\n            {activeModalTab === \"infos\" && (\n              <EmployeeForm\n                employee={editingEmployee}\n                onSubmit={handleSubmit}\n                onDelete={editingEmployee ? handleDeleteEmployee : undefined}\n              />\n            )}\n            {activeModalTab === \"balance\" && editingEmployee && (\n              <HourBalanceManager employeeId={editingEmployee.id} />\n            )}\n          </>\n        )}\n      </Modal>\n    </PageContainer>\n  );\n};\n\nexport default Employees;\n"],"names":["SwitchContainer","styled","label","SwitchInput","input","Slider","span","SunIcon","MoonIcon","ThemeSwitch","_ref","onChange","checked","_jsxs","children","_jsx","type","TableContainer","div","theme","borderRadius","medium","_ref2","shadows","small","_ref3","colors","surface","TableHeader","_ref4","border","TableTitle","h2","_ref5","typography","fontWeights","semiBold","_ref6","text","primary","TableActions","SearchInput","_ref7","background","_ref8","_ref9","_ref10","_ref11","_ref12","secondary","_ref13","_ref14","disabled","Table","button","_ref15","active","_ref16","_ref17","_ref18","_ref19","_ref20","table","THead","thead","_ref21","_ref22","Th","th","_ref23","_ref24","_ref25","$sortable","_ref26","SortIcon","_ref27","$direction","_ref28","$active","TBody","tbody","_ref29","Tr","tr","_ref30","Td","td","_ref31","_ref32","_ref33","_ref34","StatusBadge","_ref35","_ref36","status","success","warning","error","_ref37","HourBalanceBadge","_ref38","_ref39","value","_ref40","isPositive","_ref41","TableFooter","_ref42","PageInfo","_ref43","Pagination","PageButton","_ref44","_ref45","_ref46","_ref47","_ref48","EmptyState","_ref49","_ref50","_ref51","_ref52","LoadingOverlay","_ref53","LoadingSpinner","_ref54","_ref55","SearchIcon","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ChevronUpIcon","ChevronLeftIcon","ChevronRightIcon","EmptyIcon","EditIcon","style","marginLeft","opacity","_ref56","title","data","columns","loading","pagination","pageSize","onRowClick","onCellClick","emptyStateTitle","emptyStateMessage","currentPage","setCurrentPage","useState","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","showFilters","setShowFilters","useEffect","filteredAndSortedData","useMemo","filteredData","lowerCaseSearchTerm","toLowerCase","filter","item","some","column","accessor","toString","includes","find","col","id","sort","a","b","aValue","bValue","paginatedData","startIndex","slice","totalPages","Math","ceil","length","handlePageChange","page","formatCellValue","EMPLOYEE_STATUSES","s","display","placeholder","e","target","position","overflowX","map","sortable","onClick","handleSort","header","row","rowIndex","cursor","stopPropagation","className","min","renderPaginationButtons","buttons","push","i","max","IconWrapper","memo","size","props","PlusIcon","fadeIn","keyframes","slideIn","ModalOverlay","ModalContainer","large","getModalWidth","ModalHeader","ModalTitle","semibold","CloseButton","ModalContent","CloseIcon","isOpen","onClose","React","handleEscape","document","addEventListener","removeEventListener","sizes","sm","spacing","md","lg","css","sorted","xs","slideInUp","index","clickable","selected","align","regular","select","_ref57","_ref58","_ref59","xl","_ref60","_ref61","_ref62","_ref63","_ref64","CardContainer","motion","card","CardHeader","Avatar","main","EmployeeName","EmployeeRole","p","CardContent","InfoSection","SectionTitle","h3","InfoItem","delay","InfoLabel","InfoValue","CardFooter","light","info","grey","dark","employee","onEdit","isVisible","setIsVisible","itemVariants","hidden","y","visible","textAlign","padding","Button","initial","animate","exit","variants","transition","duration","when","staggerChildren","getInitials","firstName","first_name","lastName","last_name","charAt","toUpperCase","inactive","vacation","sick","formatStatus","role","department","FaUser","email","phone","birthdate","formatDateForDisplay","FaMapMarkerAlt","address","city","zip_code","FaBriefcase","hire_date","contractHours","hour_balance","variant","FormGrid","FormActions","ConfirmationModal","ConfirmationContent","ConfirmationTitle","ConfirmationText","ConfirmationActions","EmployeeForm","_employee$contractHou","onSubmit","onDelete","showDeleteConfirmation","setShowDeleteConfirmation","showSaveConfirmation","setShowSaveConfirmation","formatDateForInput","dateString","test","Date","toISOString","split","console","initialFormData","zipCode","formData","setFormData","_employee$contractHou2","handleChange","useCallback","name","prev","handleSubmit","preventDefault","localStorage","getItem","log","toast","confirmSave","cancelSave","handleDeleteClick","confirmDelete","cancelDelete","_Fragment","FormInput","required","helpText","step","FormSelect","Container","Title","Form","form","InputGroup","Label","Input","ButtonGroup","AddButton","SubtractButton","CurrentBalance","BalanceValue","StepperContainer","StepButton","hover","HoursDisplay","employeeId","onBalanceUpdated","hours","setHours","currentBalance","setCurrentBalance","setLoading","employeeData","setEmployeeData","api","useApi","token","user","useAuth","fetchEmployeeData","async","response","get","API_ENDPOINTS","EMPLOYEES","BY_ID","fetchCurrentBalance","HOUR_BALANCE","BY_EMPLOYEE","undefined","balance","parseFloat","adjustHours","increment","currentValue","newValue","toFixed","logActivity","operation","hoursValue","API_URL","warn","employeeName","userName","trim","activityData","entity_type","entity_id","description","details","action","oldBalance","newBalance","post","ACTIVITIES","BASE","updateBalance","isNaN","WORK_HOURS","date","expectedHours","actualHours","Error","message","activityError","htmlFor","PageContainer","PageHeader","HeaderLeft","AnimationContainer","HeaderRight","PageTitle","h1","bold","PageDescription","TabsContainer","Tab","TabBadge","EmptyStateContainer","EmptyStateIcon","EmptyStateTitle","EmptyStateDescription","Employees","showNotification","useNotification","setIsLoading","activeTab","setActiveTab","showModal","setShowModal","editingEmployee","setEditingEmployee","viewingEmployee","setViewingEmployee","showEditForm","setShowEditForm","filters","setFilters","activeModalTab","setActiveModalTab","employees","createEmployee","updateEmployee","deleteEmployee","fetchEmployees","getEmployeesByStatus","useEmployees","navigate","useNavigate","useParams","emp","parseInt","filteredEmployees","employeesToFilter","uniqueDepartments","dept","self","indexOf","uniqueRoles","handleUpdateEmployee","result","setTimeout","handleCreateEmployee","handleDeleteEmployee","handleAddEmployee","handleCloseModal","handleTabChange","tab","handleFilterChange","countByStatus","handleEditEmployee","handleStartEditing","handleCellClick","columnId","Lottie","animationData","employeesAnimation","loop","autoplay","rendererSettings","preserveAspectRatio","as","href","all","pending","DataTable","EMPLOYEE_TABLE_COLUMNS","Modal","EmployeeCard","HourBalanceManager"],"sourceRoot":""}